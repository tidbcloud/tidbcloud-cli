name: goreleaser

on:
  push:
    tags:
      - "v*"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Generate changelog
        id: changelog
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          gh api repos/$GITHUB_REPOSITORY/releases/generate-notes \
            -f tag_name="${GITHUB_REF#refs/tags/}" \
            -f target_commitish=main \
            -q .body > .CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: v1.12.3
          args: release --release-notes=.CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GORELEASER_CURRENT_TAG: ${{steps.changelog.outputs.TAG_NAME}}

      - name: Set up tiup
        id: init_tiup
        run: |
          TMP_DIR=`mktemp -d`
          export TIUP_HOME="$TMP_DIR/home"
          echo "TIUP_HOME=$TIUP_HOME" >> $GITHUB_OUTPUT
          echo "TIUP_BIN=$TIUP_HOME/bin/tiup" >> $GITHUB_OUTPUT
          rm -rf $TIUP_HOME && mkdir -p $TIUP_HOME/{bin,keys}
          wget -O $TMP_DIR/tiup-linux-amd64.tar.gz -q https://tiup-mirrors.pingcap.com/tiup-linux-amd64.tar.gz
          tar -zxf $TMP_DIR/tiup-linux-amd64.tar.gz -C $TIUP_HOME/bin && chmod 755 $TIUP_HOME/bin/tiup
          curl -s https://tiup-mirrors.pingcap.com/root.json -o $TIUP_HOME/bin/root.json
            
          TIUP_MIRRORS=${{ secrets.TIUP_SERVER_PROD }}
          $TIUP_HOME/bin/tiup mirror set ${TIUP_MIRRORS}
          echo ${{ secrets.TIUP_COMP_KEY_PINGCAP }} | base64 -d > $TIUP_HOME/keys/private.json

      - name: Publish package
        env:
          TIUP_HOME: ${{ steps.init_tiup.outputs.TIUP_HOME }}
          TIUP_BIN: ${{ steps.init_tiup.outputs.TIUP_BIN }}
          REL_VER: ${{steps.changelog.outputs.TAG_NAME}}
          BINARY_NAME: "ticloud"
          COMPONENT_NAME: "ticloud"
          COMPONENT_DESC: "CLI tool to manage TiDB Cloud"
        run: |
          # os and arch have different names in tiup and ticloud
          # darwin in tiup is macos in ticloud, amd64 in tiup is x86_64 in ticloud.
          matrix=(
            'darwin macos amd64 x86_64'
            'darwin macos arm64 arm64'
            'linux linux amd64 x86_64'
            'linux linux arm64 arm64'
          )
          
          # skip the first letter v in the tag name
          export VER="${REL_VER:1}"
          
            for item in "${matrix[@]}" ; do
              os_arch=($item)
              os_tiup=(${os_arch[0]})
              os_ticloud=(${os_arch[1]})
              arch_tiup=(${os_arch[2]})
              arch_ticloud=(${os_arch[3]})

              filename="dist/${BINARY_NAME}_${VER}_${os_ticloud}_${arch_ticloud}.tar.gz"
          
              if [ ! -f "$filename" ]; then
                echo "File $filename does not exist"
                exit 1
              fi
          
              echo "Releasing v${REL_VER} for os $os arch $arch..."

              ${TIUP_BIN} mirror publish $COMPONENT_NAME ${REL_VER} $filename $BINARY_NAME --os=$os_tiup --arch=$arch_tiup  --desc="$COMPONENT_DESC"
            done
