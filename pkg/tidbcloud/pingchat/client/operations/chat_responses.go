// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/pingchat/models"
)

// ChatReader is a Reader for the Chat structure.
type ChatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewChatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewChatDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewChatOK creates a ChatOK with default headers values
func NewChatOK() *ChatOK {
	return &ChatOK{}
}

/*
ChatOK describes a response with status code 200, with default header values.

ok
*/
type ChatOK struct {
	Payload *models.PingchatChatResponse
}

// IsSuccess returns true when this chat o k response has a 2xx status code
func (o *ChatOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this chat o k response has a 3xx status code
func (o *ChatOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat o k response has a 4xx status code
func (o *ChatOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this chat o k response has a 5xx status code
func (o *ChatOK) IsServerError() bool {
	return false
}

// IsCode returns true when this chat o k response a status code equal to that given
func (o *ChatOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the chat o k response
func (o *ChatOK) Code() int {
	return 200
}

func (o *ChatOK) Error() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] chatOK  %+v", 200, o.Payload)
}

func (o *ChatOK) String() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] chatOK  %+v", 200, o.Payload)
}

func (o *ChatOK) GetPayload() *models.PingchatChatResponse {
	return o.Payload
}

func (o *ChatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PingchatChatResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChatBadRequest creates a ChatBadRequest with default headers values
func NewChatBadRequest() *ChatBadRequest {
	return &ChatBadRequest{}
}

/*
ChatBadRequest describes a response with status code 400, with default header values.

error
*/
type ChatBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this chat bad request response has a 2xx status code
func (o *ChatBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this chat bad request response has a 3xx status code
func (o *ChatBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat bad request response has a 4xx status code
func (o *ChatBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this chat bad request response has a 5xx status code
func (o *ChatBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this chat bad request response a status code equal to that given
func (o *ChatBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the chat bad request response
func (o *ChatBadRequest) Code() int {
	return 400
}

func (o *ChatBadRequest) Error() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] chatBadRequest  %+v", 400, o.Payload)
}

func (o *ChatBadRequest) String() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] chatBadRequest  %+v", 400, o.Payload)
}

func (o *ChatBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ChatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChatInternalServerError creates a ChatInternalServerError with default headers values
func NewChatInternalServerError() *ChatInternalServerError {
	return &ChatInternalServerError{}
}

/*
ChatInternalServerError describes a response with status code 500, with default header values.

error
*/
type ChatInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this chat internal server error response has a 2xx status code
func (o *ChatInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this chat internal server error response has a 3xx status code
func (o *ChatInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chat internal server error response has a 4xx status code
func (o *ChatInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this chat internal server error response has a 5xx status code
func (o *ChatInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this chat internal server error response a status code equal to that given
func (o *ChatInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the chat internal server error response
func (o *ChatInternalServerError) Code() int {
	return 500
}

func (o *ChatInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] chatInternalServerError  %+v", 500, o.Payload)
}

func (o *ChatInternalServerError) String() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] chatInternalServerError  %+v", 500, o.Payload)
}

func (o *ChatInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *ChatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChatDefault creates a ChatDefault with default headers values
func NewChatDefault(code int) *ChatDefault {
	return &ChatDefault{
		_statusCode: code,
	}
}

/*
ChatDefault describes a response with status code -1, with default header values.

other error
*/
type ChatDefault struct {
	_statusCode int

	Payload interface{}
}

// IsSuccess returns true when this chat default response has a 2xx status code
func (o *ChatDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this chat default response has a 3xx status code
func (o *ChatDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this chat default response has a 4xx status code
func (o *ChatDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this chat default response has a 5xx status code
func (o *ChatDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this chat default response a status code equal to that given
func (o *ChatDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the chat default response
func (o *ChatDefault) Code() int {
	return o._statusCode
}

func (o *ChatDefault) Error() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] Chat default  %+v", o._statusCode, o.Payload)
}

func (o *ChatDefault) String() string {
	return fmt.Sprintf("[POST /ecosystem/api/internal/pingchat/chat][%d] Chat default  %+v", o._statusCode, o.Payload)
}

func (o *ChatDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *ChatDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
