/*
PingChat Swagger API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingchat

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PingchatChatInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingchatChatInfo{}

// PingchatChatInfo struct for PingchatChatInfo
type PingchatChatInfo struct {
	Domain []PingchatChatInfoDomainInner `json:"domain,omitempty"`
	// https://pkg.go.dev/gopkg.in/bluesuncorp/validator.v9#hdr-Dive
	Messages []PingchatChatMessage `json:"messages"`
}

type _PingchatChatInfo PingchatChatInfo

// NewPingchatChatInfo instantiates a new PingchatChatInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingchatChatInfo(messages []PingchatChatMessage) *PingchatChatInfo {
	this := PingchatChatInfo{}
	this.Messages = messages
	return &this
}

// NewPingchatChatInfoWithDefaults instantiates a new PingchatChatInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingchatChatInfoWithDefaults() *PingchatChatInfo {
	this := PingchatChatInfo{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PingchatChatInfo) GetDomain() []PingchatChatInfoDomainInner {
	if o == nil || IsNil(o.Domain) {
		var ret []PingchatChatInfoDomainInner
		return ret
	}
	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingchatChatInfo) GetDomainOk() ([]PingchatChatInfoDomainInner, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PingchatChatInfo) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given []PingchatChatInfoDomainInner and assigns it to the Domain field.
func (o *PingchatChatInfo) SetDomain(v []PingchatChatInfoDomainInner) {
	o.Domain = v
}

// GetMessages returns the Messages field value
func (o *PingchatChatInfo) GetMessages() []PingchatChatMessage {
	if o == nil {
		var ret []PingchatChatMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *PingchatChatInfo) GetMessagesOk() ([]PingchatChatMessage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *PingchatChatInfo) SetMessages(v []PingchatChatMessage) {
	o.Messages = v
}

func (o PingchatChatInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingchatChatInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

func (o *PingchatChatInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPingchatChatInfo := _PingchatChatInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPingchatChatInfo)

	if err != nil {
		return err
	}

	*o = PingchatChatInfo(varPingchatChatInfo)

	return err
}

type NullablePingchatChatInfo struct {
	value *PingchatChatInfo
	isSet bool
}

func (v NullablePingchatChatInfo) Get() *PingchatChatInfo {
	return v.value
}

func (v *NullablePingchatChatInfo) Set(val *PingchatChatInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePingchatChatInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePingchatChatInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingchatChatInfo(val *PingchatChatInfo) *NullablePingchatChatInfo {
	return &NullablePingchatChatInfo{value: val, isSet: true}
}

func (v NullablePingchatChatInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingchatChatInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
