/*
PingChat Swagger API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingchat

import (
	"encoding/json"
)

// PingchatChatMessageRole User's input as \"user\", AI assistant's reply as \"assistant\", see https://github.com/gin-gonic/gin/issues/3234.
type PingchatChatMessageRole string

// List of pingchat_ChatMessage_role
const (
	PINGCHATCHATMESSAGEROLE_USER      PingchatChatMessageRole = "user"
	PINGCHATCHATMESSAGEROLE_ASSISTANT PingchatChatMessageRole = "assistant"

	// Unknown value for handling new enum values gracefully
	PingchatChatMessageRole_UNKNOWN PingchatChatMessageRole = "unknown"
)

// All allowed values of PingchatChatMessageRole enum
var AllowedPingchatChatMessageRoleEnumValues = []PingchatChatMessageRole{
	"user",
	"assistant",
	PingchatChatMessageRole_UNKNOWN, // Include unknown
}

func (v *PingchatChatMessageRole) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PingchatChatMessageRole(value)
	for _, existing := range AllowedPingchatChatMessageRoleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	// Instead of returning an error, assign UNKNOWN value
	*v = PingchatChatMessageRole_UNKNOWN
	return nil
}

// NewPingchatChatMessageRoleFromValue returns a pointer to a valid PingchatChatMessageRole
// for the value passed as argument, or UNKNOWN if the value is not in the enum list
func NewPingchatChatMessageRoleFromValue(v string) *PingchatChatMessageRole {
	ev := PingchatChatMessageRole(v)
	if ev.IsValid() {
		return &ev
	}
	unknown := PingchatChatMessageRole_UNKNOWN
	return &unknown
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PingchatChatMessageRole) IsValid() bool {
	for _, existing := range AllowedPingchatChatMessageRoleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to pingchat_ChatMessage_role value
func (v PingchatChatMessageRole) Ptr() *PingchatChatMessageRole {
	return &v
}

type NullablePingchatChatMessageRole struct {
	value *PingchatChatMessageRole
	isSet bool
}

func (v NullablePingchatChatMessageRole) Get() *PingchatChatMessageRole {
	return v.value
}

func (v *NullablePingchatChatMessageRole) Set(val *PingchatChatMessageRole) {
	v.value = val
	v.isSet = true
}

func (v NullablePingchatChatMessageRole) IsSet() bool {
	return v.isSet
}

func (v *NullablePingchatChatMessageRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingchatChatMessageRole(val *PingchatChatMessageRole) *NullablePingchatChatMessageRole {
	return &NullablePingchatChatMessageRole{value: val, isSet: true}
}

func (v NullablePingchatChatMessageRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingchatChatMessageRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
