/*
PingChat Swagger API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingchat

import (
	"encoding/json"
)

// checks if the PingchatChatResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingchatChatResponse{}

// PingchatChatResponse struct for PingchatChatResponse
type PingchatChatResponse struct {
	Content *string `json:"content,omitempty"`
	// Reference Document Links
	Links []PingchatLink `json:"links,omitempty"`
}

// NewPingchatChatResponse instantiates a new PingchatChatResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingchatChatResponse() *PingchatChatResponse {
	this := PingchatChatResponse{}
	return &this
}

// NewPingchatChatResponseWithDefaults instantiates a new PingchatChatResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingchatChatResponseWithDefaults() *PingchatChatResponse {
	this := PingchatChatResponse{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PingchatChatResponse) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingchatChatResponse) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PingchatChatResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *PingchatChatResponse) SetContent(v string) {
	o.Content = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PingchatChatResponse) GetLinks() []PingchatLink {
	if o == nil || IsNil(o.Links) {
		var ret []PingchatLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingchatChatResponse) GetLinksOk() ([]PingchatLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PingchatChatResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []PingchatLink and assigns it to the Links field.
func (o *PingchatChatResponse) SetLinks(v []PingchatLink) {
	o.Links = v
}

func (o PingchatChatResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingchatChatResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullablePingchatChatResponse struct {
	value *PingchatChatResponse
	isSet bool
}

func (v NullablePingchatChatResponse) Get() *PingchatChatResponse {
	return v.value
}

func (v *NullablePingchatChatResponse) Set(val *PingchatChatResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePingchatChatResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePingchatChatResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingchatChatResponse(val *PingchatChatResponse) *NullablePingchatChatResponse {
	return &NullablePingchatChatResponse{value: val, isSet: true}
}

func (v NullablePingchatChatResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingchatChatResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
