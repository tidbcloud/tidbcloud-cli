// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PingchatChatMessage pingchat chat message
//
// swagger:model pingchat.ChatMessage
type PingchatChatMessage struct {

	// Dialogue content
	// Required: true
	Content *string `json:"content"`

	// User's input as "user", AI assistant's reply as "assistant", see https://github.com/gin-gonic/gin/issues/3234.
	// Required: true
	// Enum: [user assistant]
	Role *string `json:"role"`
}

// Validate validates this pingchat chat message
func (m *PingchatChatMessage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PingchatChatMessage) validateContent(formats strfmt.Registry) error {

	if err := validate.Required("content", "body", m.Content); err != nil {
		return err
	}

	return nil
}

var pingchatChatMessageTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["user","assistant"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pingchatChatMessageTypeRolePropEnum = append(pingchatChatMessageTypeRolePropEnum, v)
	}
}

const (

	// PingchatChatMessageRoleUser captures enum value "user"
	PingchatChatMessageRoleUser string = "user"

	// PingchatChatMessageRoleAssistant captures enum value "assistant"
	PingchatChatMessageRoleAssistant string = "assistant"
)

// prop value enum
func (m *PingchatChatMessage) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, pingchatChatMessageTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PingchatChatMessage) validateRole(formats strfmt.Registry) error {

	if err := validate.Required("role", "body", m.Role); err != nil {
		return err
	}

	// value enum
	if err := m.validateRoleEnum("role", "body", *m.Role); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this pingchat chat message based on context it is used
func (m *PingchatChatMessage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PingchatChatMessage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PingchatChatMessage) UnmarshalBinary(b []byte) error {
	var res PingchatChatMessage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
