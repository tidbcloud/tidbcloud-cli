/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package br

import (
	"encoding/json"
	"time"
)

// checks if the RestoreRequestPointInTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreRequestPointInTime{}

// RestoreRequestPointInTime struct for RestoreRequestPointInTime
type RestoreRequestPointInTime struct {
	ClusterId            *string    `json:"clusterId,omitempty"`
	BackupTime           *time.Time `json:"backupTime,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RestoreRequestPointInTime RestoreRequestPointInTime

// NewRestoreRequestPointInTime instantiates a new RestoreRequestPointInTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreRequestPointInTime() *RestoreRequestPointInTime {
	this := RestoreRequestPointInTime{}
	return &this
}

// NewRestoreRequestPointInTimeWithDefaults instantiates a new RestoreRequestPointInTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreRequestPointInTimeWithDefaults() *RestoreRequestPointInTime {
	this := RestoreRequestPointInTime{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *RestoreRequestPointInTime) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRequestPointInTime) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *RestoreRequestPointInTime) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *RestoreRequestPointInTime) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetBackupTime returns the BackupTime field value if set, zero value otherwise.
func (o *RestoreRequestPointInTime) GetBackupTime() time.Time {
	if o == nil || IsNil(o.BackupTime) {
		var ret time.Time
		return ret
	}
	return *o.BackupTime
}

// GetBackupTimeOk returns a tuple with the BackupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRequestPointInTime) GetBackupTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BackupTime) {
		return nil, false
	}
	return o.BackupTime, true
}

// HasBackupTime returns a boolean if a field has been set.
func (o *RestoreRequestPointInTime) HasBackupTime() bool {
	if o != nil && !IsNil(o.BackupTime) {
		return true
	}

	return false
}

// SetBackupTime gets a reference to the given time.Time and assigns it to the BackupTime field.
func (o *RestoreRequestPointInTime) SetBackupTime(v time.Time) {
	o.BackupTime = &v
}

func (o RestoreRequestPointInTime) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreRequestPointInTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	if !IsNil(o.BackupTime) {
		toSerialize["backupTime"] = o.BackupTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RestoreRequestPointInTime) UnmarshalJSON(data []byte) (err error) {
	varRestoreRequestPointInTime := _RestoreRequestPointInTime{}

	err = json.Unmarshal(data, &varRestoreRequestPointInTime)

	if err != nil {
		return err
	}

	*o = RestoreRequestPointInTime(varRestoreRequestPointInTime)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clusterId")
		delete(additionalProperties, "backupTime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRestoreRequestPointInTime struct {
	value *RestoreRequestPointInTime
	isSet bool
}

func (v NullableRestoreRequestPointInTime) Get() *RestoreRequestPointInTime {
	return v.value
}

func (v *NullableRestoreRequestPointInTime) Set(val *RestoreRequestPointInTime) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreRequestPointInTime) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreRequestPointInTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreRequestPointInTime(val *RestoreRequestPointInTime) *NullableRestoreRequestPointInTime {
	return &NullableRestoreRequestPointInTime{value: val, isSet: true}
}

func (v NullableRestoreRequestPointInTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreRequestPointInTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
