/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package branch

import (
	"encoding/json"
)

// checks if the ListBranchesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBranchesResponse{}

// ListBranchesResponse struct for ListBranchesResponse
type ListBranchesResponse struct {
	Branches []Branch `json:"branches,omitempty"`
	// A token identifying a page of results the server should return.
	NextPageToken        *string `json:"nextPageToken,omitempty"`
	TotalSize            *int64  `json:"totalSize,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListBranchesResponse ListBranchesResponse

// NewListBranchesResponse instantiates a new ListBranchesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBranchesResponse() *ListBranchesResponse {
	this := ListBranchesResponse{}
	return &this
}

// NewListBranchesResponseWithDefaults instantiates a new ListBranchesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBranchesResponseWithDefaults() *ListBranchesResponse {
	this := ListBranchesResponse{}
	return &this
}

// GetBranches returns the Branches field value if set, zero value otherwise.
func (o *ListBranchesResponse) GetBranches() []Branch {
	if o == nil || IsNil(o.Branches) {
		var ret []Branch
		return ret
	}
	return o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBranchesResponse) GetBranchesOk() ([]Branch, bool) {
	if o == nil || IsNil(o.Branches) {
		return nil, false
	}
	return o.Branches, true
}

// HasBranches returns a boolean if a field has been set.
func (o *ListBranchesResponse) HasBranches() bool {
	if o != nil && !IsNil(o.Branches) {
		return true
	}

	return false
}

// SetBranches gets a reference to the given []Branch and assigns it to the Branches field.
func (o *ListBranchesResponse) SetBranches(v []Branch) {
	o.Branches = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListBranchesResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBranchesResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListBranchesResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListBranchesResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *ListBranchesResponse) GetTotalSize() int64 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int64
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBranchesResponse) GetTotalSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *ListBranchesResponse) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int64 and assigns it to the TotalSize field.
func (o *ListBranchesResponse) SetTotalSize(v int64) {
	o.TotalSize = &v
}

func (o ListBranchesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBranchesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branches) {
		toSerialize["branches"] = o.Branches
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.TotalSize) {
		toSerialize["totalSize"] = o.TotalSize
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListBranchesResponse) UnmarshalJSON(data []byte) (err error) {
	varListBranchesResponse := _ListBranchesResponse{}

	err = json.Unmarshal(data, &varListBranchesResponse)

	if err != nil {
		return err
	}

	*o = ListBranchesResponse(varListBranchesResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "branches")
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "totalSize")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListBranchesResponse struct {
	value *ListBranchesResponse
	isSet bool
}

func (v NullableListBranchesResponse) Get() *ListBranchesResponse {
	return v.value
}

func (v *NullableListBranchesResponse) Set(val *ListBranchesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListBranchesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListBranchesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBranchesResponse(val *ListBranchesResponse) *NullableListBranchesResponse {
	return &NullableListBranchesResponse{value: val, isSet: true}
}

func (v NullableListBranchesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBranchesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
