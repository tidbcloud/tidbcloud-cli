/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package branch

import (
	"encoding/json"
)

// checks if the BranchEndpoints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BranchEndpoints{}

// BranchEndpoints Message for the Endpoints for this branch.
type BranchEndpoints struct {
	// Optional. Public Endpoint for this branch.
	Public *BranchEndpointsPublic `json:"public,omitempty"`
	// Output only. Private Endpoint for this branch.
	Private              *BranchEndpointsPrivate `json:"private,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BranchEndpoints BranchEndpoints

// NewBranchEndpoints instantiates a new BranchEndpoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBranchEndpoints() *BranchEndpoints {
	this := BranchEndpoints{}
	return &this
}

// NewBranchEndpointsWithDefaults instantiates a new BranchEndpoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBranchEndpointsWithDefaults() *BranchEndpoints {
	this := BranchEndpoints{}
	return &this
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *BranchEndpoints) GetPublic() BranchEndpointsPublic {
	if o == nil || IsNil(o.Public) {
		var ret BranchEndpointsPublic
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchEndpoints) GetPublicOk() (*BranchEndpointsPublic, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *BranchEndpoints) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given BranchEndpointsPublic and assigns it to the Public field.
func (o *BranchEndpoints) SetPublic(v BranchEndpointsPublic) {
	o.Public = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *BranchEndpoints) GetPrivate() BranchEndpointsPrivate {
	if o == nil || IsNil(o.Private) {
		var ret BranchEndpointsPrivate
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchEndpoints) GetPrivateOk() (*BranchEndpointsPrivate, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *BranchEndpoints) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given BranchEndpointsPrivate and assigns it to the Private field.
func (o *BranchEndpoints) SetPrivate(v BranchEndpointsPrivate) {
	o.Private = &v
}

func (o BranchEndpoints) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BranchEndpoints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BranchEndpoints) UnmarshalJSON(data []byte) (err error) {
	varBranchEndpoints := _BranchEndpoints{}

	err = json.Unmarshal(data, &varBranchEndpoints)

	if err != nil {
		return err
	}

	*o = BranchEndpoints(varBranchEndpoints)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "public")
		delete(additionalProperties, "private")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBranchEndpoints struct {
	value *BranchEndpoints
	isSet bool
}

func (v NullableBranchEndpoints) Get() *BranchEndpoints {
	return v.value
}

func (v *NullableBranchEndpoints) Set(val *BranchEndpoints) {
	v.value = val
	v.isSet = true
}

func (v NullableBranchEndpoints) IsSet() bool {
	return v.isSet
}

func (v *NullableBranchEndpoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBranchEndpoints(val *BranchEndpoints) *NullableBranchEndpoints {
	return &NullableBranchEndpoints{value: val, isSet: true}
}

func (v NullableBranchEndpoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBranchEndpoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
