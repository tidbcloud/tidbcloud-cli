/*
TiDB Cloud Starter and Essential Database Audit Logging Open API

TiDB Cloud Starter and Essential Database Audit Logging Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the DownloadAuditLogFilesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadAuditLogFilesResponse{}

// DownloadAuditLogFilesResponse struct for DownloadAuditLogFilesResponse
type DownloadAuditLogFilesResponse struct {
	// The audit logs with the download url.
	AuditLogFiles        []AuditLogFile `json:"auditLogFiles,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DownloadAuditLogFilesResponse DownloadAuditLogFilesResponse

// NewDownloadAuditLogFilesResponse instantiates a new DownloadAuditLogFilesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadAuditLogFilesResponse() *DownloadAuditLogFilesResponse {
	this := DownloadAuditLogFilesResponse{}
	return &this
}

// NewDownloadAuditLogFilesResponseWithDefaults instantiates a new DownloadAuditLogFilesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadAuditLogFilesResponseWithDefaults() *DownloadAuditLogFilesResponse {
	this := DownloadAuditLogFilesResponse{}
	return &this
}

// GetAuditLogFiles returns the AuditLogFiles field value if set, zero value otherwise.
func (o *DownloadAuditLogFilesResponse) GetAuditLogFiles() []AuditLogFile {
	if o == nil || IsNil(o.AuditLogFiles) {
		var ret []AuditLogFile
		return ret
	}
	return o.AuditLogFiles
}

// GetAuditLogFilesOk returns a tuple with the AuditLogFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAuditLogFilesResponse) GetAuditLogFilesOk() ([]AuditLogFile, bool) {
	if o == nil || IsNil(o.AuditLogFiles) {
		return nil, false
	}
	return o.AuditLogFiles, true
}

// HasAuditLogFiles returns a boolean if a field has been set.
func (o *DownloadAuditLogFilesResponse) HasAuditLogFiles() bool {
	if o != nil && !IsNil(o.AuditLogFiles) {
		return true
	}

	return false
}

// SetAuditLogFiles gets a reference to the given []AuditLogFile and assigns it to the AuditLogFiles field.
func (o *DownloadAuditLogFilesResponse) SetAuditLogFiles(v []AuditLogFile) {
	o.AuditLogFiles = v
}

func (o DownloadAuditLogFilesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadAuditLogFilesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditLogFiles) {
		toSerialize["auditLogFiles"] = o.AuditLogFiles
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DownloadAuditLogFilesResponse) UnmarshalJSON(data []byte) (err error) {
	varDownloadAuditLogFilesResponse := _DownloadAuditLogFilesResponse{}

	err = json.Unmarshal(data, &varDownloadAuditLogFilesResponse)

	if err != nil {
		return err
	}

	*o = DownloadAuditLogFilesResponse(varDownloadAuditLogFilesResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auditLogFiles")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDownloadAuditLogFilesResponse struct {
	value *DownloadAuditLogFilesResponse
	isSet bool
}

func (v NullableDownloadAuditLogFilesResponse) Get() *DownloadAuditLogFilesResponse {
	return v.value
}

func (v *NullableDownloadAuditLogFilesResponse) Set(val *DownloadAuditLogFilesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadAuditLogFilesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadAuditLogFilesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadAuditLogFilesResponse(val *DownloadAuditLogFilesResponse) *NullableDownloadAuditLogFilesResponse {
	return &NullableDownloadAuditLogFilesResponse{value: val, isSet: true}
}

func (v NullableDownloadAuditLogFilesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadAuditLogFilesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
