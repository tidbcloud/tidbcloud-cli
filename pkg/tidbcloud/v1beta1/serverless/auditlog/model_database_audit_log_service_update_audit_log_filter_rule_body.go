/*
TiDB Cloud Starter and Essential Database Audit Logging Open API

TiDB Cloud Starter and Essential Database Audit Logging Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody{}

// DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody struct for DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody
type DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody struct {
	// List of filters combined with an OR relationship. Set filters to [{}] will filter all logs.
	Filters []AuditLogFilter `json:"filters,omitempty"`
	Users   []string         `json:"users,omitempty"`
	// Indicates whether the filter rule is disabled.
	Disabled NullableBool `json:"disabled,omitempty"`
	// Display name of the filter rule.
	DisplayName          *string `json:"displayName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody

// NewDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody instantiates a new DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody() *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody {
	this := DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody{}
	return &this
}

// NewDatabaseAuditLogServiceUpdateAuditLogFilterRuleBodyWithDefaults instantiates a new DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseAuditLogServiceUpdateAuditLogFilterRuleBodyWithDefaults() *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody {
	this := DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetFilters() []AuditLogFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []AuditLogFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetFiltersOk() ([]AuditLogFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []AuditLogFilter and assigns it to the Filters field.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) SetFilters(v []AuditLogFilter) {
	o.Filters = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetUsers() []string {
	if o == nil || IsNil(o.Users) {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) SetUsers(v []string) {
	o.Users = v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Disabled.Get()
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disabled.Get(), o.Disabled.IsSet()
}

// HasDisabled returns a boolean if a field has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) HasDisabled() bool {
	if o != nil && o.Disabled.IsSet() {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given NullableBool and assigns it to the Disabled field.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) SetDisabled(v bool) {
	o.Disabled.Set(&v)
}

// SetDisabledNil sets the value for Disabled to be an explicit nil
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) SetDisabledNil() {
	o.Disabled.Set(nil)
}

// UnsetDisabled ensures that no value is present for Disabled, not even an explicit nil
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) UnsetDisabled() {
	o.Disabled.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if o.Disabled.IsSet() {
		toSerialize["disabled"] = o.Disabled.Get()
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) UnmarshalJSON(data []byte) (err error) {
	varDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody := _DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody{}

	err = json.Unmarshal(data, &varDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody)

	if err != nil {
		return err
	}

	*o = DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody(varDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filters")
		delete(additionalProperties, "users")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "displayName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody struct {
	value *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody
	isSet bool
}

func (v NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) Get() *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody {
	return v.value
}

func (v *NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) Set(val *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody(val *DatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) *NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody {
	return &NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody{value: val, isSet: true}
}

func (v NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseAuditLogServiceUpdateAuditLogFilterRuleBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
