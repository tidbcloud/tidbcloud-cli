/*
TiDB Cloud Serverless Database Audit Logging Open API

TiDB Cloud Serverless Database Audit Logging Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the DownloadAuditLogsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadAuditLogsResponse{}

// DownloadAuditLogsResponse struct for DownloadAuditLogsResponse
type DownloadAuditLogsResponse struct {
	// The audit logs with the download url.
	AuditLogs            []AuditLog `json:"auditLogs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DownloadAuditLogsResponse DownloadAuditLogsResponse

// NewDownloadAuditLogsResponse instantiates a new DownloadAuditLogsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadAuditLogsResponse() *DownloadAuditLogsResponse {
	this := DownloadAuditLogsResponse{}
	return &this
}

// NewDownloadAuditLogsResponseWithDefaults instantiates a new DownloadAuditLogsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadAuditLogsResponseWithDefaults() *DownloadAuditLogsResponse {
	this := DownloadAuditLogsResponse{}
	return &this
}

// GetAuditLogs returns the AuditLogs field value if set, zero value otherwise.
func (o *DownloadAuditLogsResponse) GetAuditLogs() []AuditLog {
	if o == nil || IsNil(o.AuditLogs) {
		var ret []AuditLog
		return ret
	}
	return o.AuditLogs
}

// GetAuditLogsOk returns a tuple with the AuditLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadAuditLogsResponse) GetAuditLogsOk() ([]AuditLog, bool) {
	if o == nil || IsNil(o.AuditLogs) {
		return nil, false
	}
	return o.AuditLogs, true
}

// HasAuditLogs returns a boolean if a field has been set.
func (o *DownloadAuditLogsResponse) HasAuditLogs() bool {
	if o != nil && !IsNil(o.AuditLogs) {
		return true
	}

	return false
}

// SetAuditLogs gets a reference to the given []AuditLog and assigns it to the AuditLogs field.
func (o *DownloadAuditLogsResponse) SetAuditLogs(v []AuditLog) {
	o.AuditLogs = v
}

func (o DownloadAuditLogsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadAuditLogsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditLogs) {
		toSerialize["auditLogs"] = o.AuditLogs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DownloadAuditLogsResponse) UnmarshalJSON(data []byte) (err error) {
	varDownloadAuditLogsResponse := _DownloadAuditLogsResponse{}

	err = json.Unmarshal(data, &varDownloadAuditLogsResponse)

	if err != nil {
		return err
	}

	*o = DownloadAuditLogsResponse(varDownloadAuditLogsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auditLogs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDownloadAuditLogsResponse struct {
	value *DownloadAuditLogsResponse
	isSet bool
}

func (v NullableDownloadAuditLogsResponse) Get() *DownloadAuditLogsResponse {
	return v.value
}

func (v *NullableDownloadAuditLogsResponse) Set(val *DownloadAuditLogsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadAuditLogsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadAuditLogsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadAuditLogsResponse(val *DownloadAuditLogsResponse) *NullableDownloadAuditLogsResponse {
	return &NullableDownloadAuditLogsResponse{value: val, isSet: true}
}

func (v NullableDownloadAuditLogsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadAuditLogsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
