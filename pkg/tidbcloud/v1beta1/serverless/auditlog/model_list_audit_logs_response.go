/*
TiDB Cloud Serverless Database Audit Logging Open API

TiDB Cloud Serverless Database Audit Logging Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the ListAuditLogsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuditLogsResponse{}

// ListAuditLogsResponse struct for ListAuditLogsResponse
type ListAuditLogsResponse struct {
	// The audit logs without the download url.
	AuditLogs []AuditLog `json:"auditLogs,omitempty"`
	// Token provided to retrieve the next page of results.
	NextPageToken        *string `json:"nextPageToken,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListAuditLogsResponse ListAuditLogsResponse

// NewListAuditLogsResponse instantiates a new ListAuditLogsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuditLogsResponse() *ListAuditLogsResponse {
	this := ListAuditLogsResponse{}
	return &this
}

// NewListAuditLogsResponseWithDefaults instantiates a new ListAuditLogsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuditLogsResponseWithDefaults() *ListAuditLogsResponse {
	this := ListAuditLogsResponse{}
	return &this
}

// GetAuditLogs returns the AuditLogs field value if set, zero value otherwise.
func (o *ListAuditLogsResponse) GetAuditLogs() []AuditLog {
	if o == nil || IsNil(o.AuditLogs) {
		var ret []AuditLog
		return ret
	}
	return o.AuditLogs
}

// GetAuditLogsOk returns a tuple with the AuditLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogsResponse) GetAuditLogsOk() ([]AuditLog, bool) {
	if o == nil || IsNil(o.AuditLogs) {
		return nil, false
	}
	return o.AuditLogs, true
}

// HasAuditLogs returns a boolean if a field has been set.
func (o *ListAuditLogsResponse) HasAuditLogs() bool {
	if o != nil && !IsNil(o.AuditLogs) {
		return true
	}

	return false
}

// SetAuditLogs gets a reference to the given []AuditLog and assigns it to the AuditLogs field.
func (o *ListAuditLogsResponse) SetAuditLogs(v []AuditLog) {
	o.AuditLogs = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListAuditLogsResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListAuditLogsResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListAuditLogsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o ListAuditLogsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuditLogsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditLogs) {
		toSerialize["auditLogs"] = o.AuditLogs
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListAuditLogsResponse) UnmarshalJSON(data []byte) (err error) {
	varListAuditLogsResponse := _ListAuditLogsResponse{}

	err = json.Unmarshal(data, &varListAuditLogsResponse)

	if err != nil {
		return err
	}

	*o = ListAuditLogsResponse(varListAuditLogsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auditLogs")
		delete(additionalProperties, "nextPageToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListAuditLogsResponse struct {
	value *ListAuditLogsResponse
	isSet bool
}

func (v NullableListAuditLogsResponse) Get() *ListAuditLogsResponse {
	return v.value
}

func (v *NullableListAuditLogsResponse) Set(val *ListAuditLogsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuditLogsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuditLogsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuditLogsResponse(val *ListAuditLogsResponse) *NullableListAuditLogsResponse {
	return &NullableListAuditLogsResponse{value: val, isSet: true}
}

func (v NullableListAuditLogsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuditLogsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
