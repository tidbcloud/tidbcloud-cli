/*
TiDB Cloud Serverless Database Audit Logging Open API

TiDB Cloud Serverless Database Audit Logging Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the ListAuditLogFilterRulesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuditLogFilterRulesResponse{}

// ListAuditLogFilterRulesResponse struct for ListAuditLogFilterRulesResponse
type ListAuditLogFilterRulesResponse struct {
	FilterRules          []AuditLogFilterRule `json:"filterRules,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListAuditLogFilterRulesResponse ListAuditLogFilterRulesResponse

// NewListAuditLogFilterRulesResponse instantiates a new ListAuditLogFilterRulesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuditLogFilterRulesResponse() *ListAuditLogFilterRulesResponse {
	this := ListAuditLogFilterRulesResponse{}
	return &this
}

// NewListAuditLogFilterRulesResponseWithDefaults instantiates a new ListAuditLogFilterRulesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuditLogFilterRulesResponseWithDefaults() *ListAuditLogFilterRulesResponse {
	this := ListAuditLogFilterRulesResponse{}
	return &this
}

// GetFilterRules returns the FilterRules field value if set, zero value otherwise.
func (o *ListAuditLogFilterRulesResponse) GetFilterRules() []AuditLogFilterRule {
	if o == nil || IsNil(o.FilterRules) {
		var ret []AuditLogFilterRule
		return ret
	}
	return o.FilterRules
}

// GetFilterRulesOk returns a tuple with the FilterRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogFilterRulesResponse) GetFilterRulesOk() ([]AuditLogFilterRule, bool) {
	if o == nil || IsNil(o.FilterRules) {
		return nil, false
	}
	return o.FilterRules, true
}

// HasFilterRules returns a boolean if a field has been set.
func (o *ListAuditLogFilterRulesResponse) HasFilterRules() bool {
	if o != nil && !IsNil(o.FilterRules) {
		return true
	}

	return false
}

// SetFilterRules gets a reference to the given []AuditLogFilterRule and assigns it to the FilterRules field.
func (o *ListAuditLogFilterRulesResponse) SetFilterRules(v []AuditLogFilterRule) {
	o.FilterRules = v
}

func (o ListAuditLogFilterRulesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuditLogFilterRulesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterRules) {
		toSerialize["filterRules"] = o.FilterRules
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListAuditLogFilterRulesResponse) UnmarshalJSON(data []byte) (err error) {
	varListAuditLogFilterRulesResponse := _ListAuditLogFilterRulesResponse{}

	err = json.Unmarshal(data, &varListAuditLogFilterRulesResponse)

	if err != nil {
		return err
	}

	*o = ListAuditLogFilterRulesResponse(varListAuditLogFilterRulesResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filterRules")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListAuditLogFilterRulesResponse struct {
	value *ListAuditLogFilterRulesResponse
	isSet bool
}

func (v NullableListAuditLogFilterRulesResponse) Get() *ListAuditLogFilterRulesResponse {
	return v.value
}

func (v *NullableListAuditLogFilterRulesResponse) Set(val *ListAuditLogFilterRulesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuditLogFilterRulesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuditLogFilterRulesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuditLogFilterRulesResponse(val *ListAuditLogFilterRulesResponse) *NullableListAuditLogFilterRulesResponse {
	return &NullableListAuditLogFilterRulesResponse{value: val, isSet: true}
}

func (v NullableListAuditLogFilterRulesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuditLogFilterRulesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
