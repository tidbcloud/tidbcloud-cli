/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// OSSCloudStorageOSSAuthType  - ACCESS_KEY: The access method is access key.
type OSSCloudStorageOSSAuthType string

// List of OSSCloudStorageOSSAuthType
const (
	OSSCLOUDSTORAGEOSSAUTHTYPE_ACCESS_KEY OSSCloudStorageOSSAuthType = "ACCESS_KEY"
)

// All allowed values of OSSCloudStorageOSSAuthType enum
var AllowedOSSCloudStorageOSSAuthTypeEnumValues = []OSSCloudStorageOSSAuthType{
	"ACCESS_KEY",
}

func (v *OSSCloudStorageOSSAuthType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OSSCloudStorageOSSAuthType(value)
	for _, existing := range AllowedOSSCloudStorageOSSAuthTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = OSSCloudStorageOSSAuthType(value)
	return nil
}

// NewOSSCloudStorageOSSAuthTypeFromValue returns a pointer to a valid OSSCloudStorageOSSAuthType for the value passed as argument
func NewOSSCloudStorageOSSAuthTypeFromValue(v string) *OSSCloudStorageOSSAuthType {
	ev := OSSCloudStorageOSSAuthType(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OSSCloudStorageOSSAuthType) IsValid() bool {
	for _, existing := range AllowedOSSCloudStorageOSSAuthTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OSSCloudStorageOSSAuthType value
func (v OSSCloudStorageOSSAuthType) Ptr() *OSSCloudStorageOSSAuthType {
	return &v
}

type NullableOSSCloudStorageOSSAuthType struct {
	value *OSSCloudStorageOSSAuthType
	isSet bool
}

func (v NullableOSSCloudStorageOSSAuthType) Get() *OSSCloudStorageOSSAuthType {
	return v.value
}

func (v *NullableOSSCloudStorageOSSAuthType) Set(val *OSSCloudStorageOSSAuthType) {
	v.value = val
	v.isSet = true
}

func (v NullableOSSCloudStorageOSSAuthType) IsSet() bool {
	return v.isSet
}

func (v *NullableOSSCloudStorageOSSAuthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSSCloudStorageOSSAuthType(val *OSSCloudStorageOSSAuthType) *NullableOSSCloudStorageOSSAuthType {
	return &NullableOSSCloudStorageOSSAuthType{value: val, isSet: true}
}

func (v NullableOSSCloudStorageOSSAuthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSSCloudStorageOSSAuthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
