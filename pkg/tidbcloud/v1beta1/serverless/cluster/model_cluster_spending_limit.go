/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// checks if the ClusterSpendingLimit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterSpendingLimit{}

// ClusterSpendingLimit Message for spending limit configuration.
type ClusterSpendingLimit struct {
	// Optional. Maximum monthly spending limit in USD cents.
	Monthly              *int32 `json:"monthly,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterSpendingLimit ClusterSpendingLimit

// NewClusterSpendingLimit instantiates a new ClusterSpendingLimit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSpendingLimit() *ClusterSpendingLimit {
	this := ClusterSpendingLimit{}
	return &this
}

// NewClusterSpendingLimitWithDefaults instantiates a new ClusterSpendingLimit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSpendingLimitWithDefaults() *ClusterSpendingLimit {
	this := ClusterSpendingLimit{}
	return &this
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *ClusterSpendingLimit) GetMonthly() int32 {
	if o == nil || IsNil(o.Monthly) {
		var ret int32
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpendingLimit) GetMonthlyOk() (*int32, bool) {
	if o == nil || IsNil(o.Monthly) {
		return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *ClusterSpendingLimit) HasMonthly() bool {
	if o != nil && !IsNil(o.Monthly) {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given int32 and assigns it to the Monthly field.
func (o *ClusterSpendingLimit) SetMonthly(v int32) {
	o.Monthly = &v
}

func (o ClusterSpendingLimit) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterSpendingLimit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Monthly) {
		toSerialize["monthly"] = o.Monthly
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterSpendingLimit) UnmarshalJSON(data []byte) (err error) {
	varClusterSpendingLimit := _ClusterSpendingLimit{}

	err = json.Unmarshal(data, &varClusterSpendingLimit)

	if err != nil {
		return err
	}

	*o = ClusterSpendingLimit(varClusterSpendingLimit)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "monthly")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterSpendingLimit struct {
	value *ClusterSpendingLimit
	isSet bool
}

func (v NullableClusterSpendingLimit) Get() *ClusterSpendingLimit {
	return v.value
}

func (v *NullableClusterSpendingLimit) Set(val *ClusterSpendingLimit) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSpendingLimit) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSpendingLimit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSpendingLimit(val *ClusterSpendingLimit) *NullableClusterSpendingLimit {
	return &NullableClusterSpendingLimit{value: val, isSet: true}
}

func (v NullableClusterSpendingLimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSpendingLimit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
