/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// AzureBlobCloudStorageAzureBlobAuthType  - SAS_TOKEN: The access method is sas token.
type AzureBlobCloudStorageAzureBlobAuthType string

// List of AzureBlobCloudStorageAzureBlobAuthType
const (
	AZUREBLOBCLOUDSTORAGEAZUREBLOBAUTHTYPE_SAS_TOKEN AzureBlobCloudStorageAzureBlobAuthType = "SAS_TOKEN"
)

// All allowed values of AzureBlobCloudStorageAzureBlobAuthType enum
var AllowedAzureBlobCloudStorageAzureBlobAuthTypeEnumValues = []AzureBlobCloudStorageAzureBlobAuthType{
	"SAS_TOKEN",
}

func (v *AzureBlobCloudStorageAzureBlobAuthType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AzureBlobCloudStorageAzureBlobAuthType(value)
	for _, existing := range AllowedAzureBlobCloudStorageAzureBlobAuthTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = AzureBlobCloudStorageAzureBlobAuthType(value)
	return nil
}

// NewAzureBlobCloudStorageAzureBlobAuthTypeFromValue returns a pointer to a valid AzureBlobCloudStorageAzureBlobAuthType for the value passed as argument
func NewAzureBlobCloudStorageAzureBlobAuthTypeFromValue(v string) *AzureBlobCloudStorageAzureBlobAuthType {
	ev := AzureBlobCloudStorageAzureBlobAuthType(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AzureBlobCloudStorageAzureBlobAuthType) IsValid() bool {
	for _, existing := range AllowedAzureBlobCloudStorageAzureBlobAuthTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AzureBlobCloudStorageAzureBlobAuthType value
func (v AzureBlobCloudStorageAzureBlobAuthType) Ptr() *AzureBlobCloudStorageAzureBlobAuthType {
	return &v
}

type NullableAzureBlobCloudStorageAzureBlobAuthType struct {
	value *AzureBlobCloudStorageAzureBlobAuthType
	isSet bool
}

func (v NullableAzureBlobCloudStorageAzureBlobAuthType) Get() *AzureBlobCloudStorageAzureBlobAuthType {
	return v.value
}

func (v *NullableAzureBlobCloudStorageAzureBlobAuthType) Set(val *AzureBlobCloudStorageAzureBlobAuthType) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureBlobCloudStorageAzureBlobAuthType) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureBlobCloudStorageAzureBlobAuthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureBlobCloudStorageAzureBlobAuthType(val *AzureBlobCloudStorageAzureBlobAuthType) *NullableAzureBlobCloudStorageAzureBlobAuthType {
	return &NullableAzureBlobCloudStorageAzureBlobAuthType{value: val, isSet: true}
}

func (v NullableAzureBlobCloudStorageAzureBlobAuthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureBlobCloudStorageAzureBlobAuthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
