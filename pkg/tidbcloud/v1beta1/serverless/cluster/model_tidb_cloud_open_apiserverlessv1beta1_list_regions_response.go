/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// checks if the TidbCloudOpenApiserverlessv1beta1ListRegionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TidbCloudOpenApiserverlessv1beta1ListRegionsResponse{}

// TidbCloudOpenApiserverlessv1beta1ListRegionsResponse Responses message to the request for listing of available regions in TiDB Serverless.
type TidbCloudOpenApiserverlessv1beta1ListRegionsResponse struct {
	// A list of available regions.
	Regions              []Commonv1beta1Region `json:"regions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TidbCloudOpenApiserverlessv1beta1ListRegionsResponse TidbCloudOpenApiserverlessv1beta1ListRegionsResponse

// NewTidbCloudOpenApiserverlessv1beta1ListRegionsResponse instantiates a new TidbCloudOpenApiserverlessv1beta1ListRegionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTidbCloudOpenApiserverlessv1beta1ListRegionsResponse() *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse {
	this := TidbCloudOpenApiserverlessv1beta1ListRegionsResponse{}
	return &this
}

// NewTidbCloudOpenApiserverlessv1beta1ListRegionsResponseWithDefaults instantiates a new TidbCloudOpenApiserverlessv1beta1ListRegionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTidbCloudOpenApiserverlessv1beta1ListRegionsResponseWithDefaults() *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse {
	this := TidbCloudOpenApiserverlessv1beta1ListRegionsResponse{}
	return &this
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) GetRegions() []Commonv1beta1Region {
	if o == nil || IsNil(o.Regions) {
		var ret []Commonv1beta1Region
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) GetRegionsOk() ([]Commonv1beta1Region, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []Commonv1beta1Region and assigns it to the Regions field.
func (o *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) SetRegions(v []Commonv1beta1Region) {
	o.Regions = v
}

func (o TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) UnmarshalJSON(data []byte) (err error) {
	varTidbCloudOpenApiserverlessv1beta1ListRegionsResponse := _TidbCloudOpenApiserverlessv1beta1ListRegionsResponse{}

	err = json.Unmarshal(data, &varTidbCloudOpenApiserverlessv1beta1ListRegionsResponse)

	if err != nil {
		return err
	}

	*o = TidbCloudOpenApiserverlessv1beta1ListRegionsResponse(varTidbCloudOpenApiserverlessv1beta1ListRegionsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "regions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse struct {
	value *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse
	isSet bool
}

func (v NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse) Get() *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse {
	return v.value
}

func (v *NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse) Set(val *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse(val *TidbCloudOpenApiserverlessv1beta1ListRegionsResponse) *NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse {
	return &NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse{value: val, isSet: true}
}

func (v NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTidbCloudOpenApiserverlessv1beta1ListRegionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
