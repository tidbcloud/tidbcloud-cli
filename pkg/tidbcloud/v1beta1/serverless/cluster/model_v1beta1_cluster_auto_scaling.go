/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// checks if the V1beta1ClusterAutoScaling type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1ClusterAutoScaling{}

// V1beta1ClusterAutoScaling Message for auto scaling configuration.
type V1beta1ClusterAutoScaling struct {
	RcuMin               *int64 `json:"rcuMin,omitempty"`
	RcuMax               *int64 `json:"rcuMax,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1beta1ClusterAutoScaling V1beta1ClusterAutoScaling

// NewV1beta1ClusterAutoScaling instantiates a new V1beta1ClusterAutoScaling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1ClusterAutoScaling() *V1beta1ClusterAutoScaling {
	this := V1beta1ClusterAutoScaling{}
	return &this
}

// NewV1beta1ClusterAutoScalingWithDefaults instantiates a new V1beta1ClusterAutoScaling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1ClusterAutoScalingWithDefaults() *V1beta1ClusterAutoScaling {
	this := V1beta1ClusterAutoScaling{}
	return &this
}

// GetRcuMin returns the RcuMin field value if set, zero value otherwise.
func (o *V1beta1ClusterAutoScaling) GetRcuMin() int64 {
	if o == nil || IsNil(o.RcuMin) {
		var ret int64
		return ret
	}
	return *o.RcuMin
}

// GetRcuMinOk returns a tuple with the RcuMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1ClusterAutoScaling) GetRcuMinOk() (*int64, bool) {
	if o == nil || IsNil(o.RcuMin) {
		return nil, false
	}
	return o.RcuMin, true
}

// HasRcuMin returns a boolean if a field has been set.
func (o *V1beta1ClusterAutoScaling) HasRcuMin() bool {
	if o != nil && !IsNil(o.RcuMin) {
		return true
	}

	return false
}

// SetRcuMin gets a reference to the given int64 and assigns it to the RcuMin field.
func (o *V1beta1ClusterAutoScaling) SetRcuMin(v int64) {
	o.RcuMin = &v
}

// GetRcuMax returns the RcuMax field value if set, zero value otherwise.
func (o *V1beta1ClusterAutoScaling) GetRcuMax() int64 {
	if o == nil || IsNil(o.RcuMax) {
		var ret int64
		return ret
	}
	return *o.RcuMax
}

// GetRcuMaxOk returns a tuple with the RcuMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1ClusterAutoScaling) GetRcuMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.RcuMax) {
		return nil, false
	}
	return o.RcuMax, true
}

// HasRcuMax returns a boolean if a field has been set.
func (o *V1beta1ClusterAutoScaling) HasRcuMax() bool {
	if o != nil && !IsNil(o.RcuMax) {
		return true
	}

	return false
}

// SetRcuMax gets a reference to the given int64 and assigns it to the RcuMax field.
func (o *V1beta1ClusterAutoScaling) SetRcuMax(v int64) {
	o.RcuMax = &v
}

func (o V1beta1ClusterAutoScaling) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1ClusterAutoScaling) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RcuMin) {
		toSerialize["rcuMin"] = o.RcuMin
	}
	if !IsNil(o.RcuMax) {
		toSerialize["rcuMax"] = o.RcuMax
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1beta1ClusterAutoScaling) UnmarshalJSON(data []byte) (err error) {
	varV1beta1ClusterAutoScaling := _V1beta1ClusterAutoScaling{}

	err = json.Unmarshal(data, &varV1beta1ClusterAutoScaling)

	if err != nil {
		return err
	}

	*o = V1beta1ClusterAutoScaling(varV1beta1ClusterAutoScaling)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rcuMin")
		delete(additionalProperties, "rcuMax")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1beta1ClusterAutoScaling struct {
	value *V1beta1ClusterAutoScaling
	isSet bool
}

func (v NullableV1beta1ClusterAutoScaling) Get() *V1beta1ClusterAutoScaling {
	return v.value
}

func (v *NullableV1beta1ClusterAutoScaling) Set(val *V1beta1ClusterAutoScaling) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1ClusterAutoScaling) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1ClusterAutoScaling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1ClusterAutoScaling(val *V1beta1ClusterAutoScaling) *NullableV1beta1ClusterAutoScaling {
	return &NullableV1beta1ClusterAutoScaling{value: val, isSet: true}
}

func (v NullableV1beta1ClusterAutoScaling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1ClusterAutoScaling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
