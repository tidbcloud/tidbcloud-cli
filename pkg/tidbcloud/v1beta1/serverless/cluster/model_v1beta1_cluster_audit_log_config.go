/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// checks if the V1beta1ClusterAuditLogConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1ClusterAuditLogConfig{}

// V1beta1ClusterAuditLogConfig Message for audit log configuration.
type V1beta1ClusterAuditLogConfig struct {
	// Optional. Whether audit log is enabled.
	Enabled NullableBool `json:"enabled,omitempty"`
	// Optional. Whether unredacted the audit log.
	Unredacted NullableBool `json:"unredacted,omitempty"`
	// Optional. The cloud storage for audit logs.
	CloudStorage *ClusterAuditLogCloudStorage `json:"cloudStorage,omitempty"`
	// Optional. The rotation interval in minutes for audit logs.
	RotationIntervalMinutes NullableInt32 `json:"rotationIntervalMinutes,omitempty"`
	// Optional. The rotation size in MiB for audit logs.
	RotationSizeMib      NullableInt32 `json:"rotationSizeMib,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1beta1ClusterAuditLogConfig V1beta1ClusterAuditLogConfig

// NewV1beta1ClusterAuditLogConfig instantiates a new V1beta1ClusterAuditLogConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1ClusterAuditLogConfig() *V1beta1ClusterAuditLogConfig {
	this := V1beta1ClusterAuditLogConfig{}
	return &this
}

// NewV1beta1ClusterAuditLogConfigWithDefaults instantiates a new V1beta1ClusterAuditLogConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1ClusterAuditLogConfigWithDefaults() *V1beta1ClusterAuditLogConfig {
	this := V1beta1ClusterAuditLogConfig{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1beta1ClusterAuditLogConfig) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1beta1ClusterAuditLogConfig) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *V1beta1ClusterAuditLogConfig) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *V1beta1ClusterAuditLogConfig) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *V1beta1ClusterAuditLogConfig) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *V1beta1ClusterAuditLogConfig) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetUnredacted returns the Unredacted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1beta1ClusterAuditLogConfig) GetUnredacted() bool {
	if o == nil || IsNil(o.Unredacted.Get()) {
		var ret bool
		return ret
	}
	return *o.Unredacted.Get()
}

// GetUnredactedOk returns a tuple with the Unredacted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1beta1ClusterAuditLogConfig) GetUnredactedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Unredacted.Get(), o.Unredacted.IsSet()
}

// HasUnredacted returns a boolean if a field has been set.
func (o *V1beta1ClusterAuditLogConfig) HasUnredacted() bool {
	if o != nil && o.Unredacted.IsSet() {
		return true
	}

	return false
}

// SetUnredacted gets a reference to the given NullableBool and assigns it to the Unredacted field.
func (o *V1beta1ClusterAuditLogConfig) SetUnredacted(v bool) {
	o.Unredacted.Set(&v)
}

// SetUnredactedNil sets the value for Unredacted to be an explicit nil
func (o *V1beta1ClusterAuditLogConfig) SetUnredactedNil() {
	o.Unredacted.Set(nil)
}

// UnsetUnredacted ensures that no value is present for Unredacted, not even an explicit nil
func (o *V1beta1ClusterAuditLogConfig) UnsetUnredacted() {
	o.Unredacted.Unset()
}

// GetCloudStorage returns the CloudStorage field value if set, zero value otherwise.
func (o *V1beta1ClusterAuditLogConfig) GetCloudStorage() ClusterAuditLogCloudStorage {
	if o == nil || IsNil(o.CloudStorage) {
		var ret ClusterAuditLogCloudStorage
		return ret
	}
	return *o.CloudStorage
}

// GetCloudStorageOk returns a tuple with the CloudStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1ClusterAuditLogConfig) GetCloudStorageOk() (*ClusterAuditLogCloudStorage, bool) {
	if o == nil || IsNil(o.CloudStorage) {
		return nil, false
	}
	return o.CloudStorage, true
}

// HasCloudStorage returns a boolean if a field has been set.
func (o *V1beta1ClusterAuditLogConfig) HasCloudStorage() bool {
	if o != nil && !IsNil(o.CloudStorage) {
		return true
	}

	return false
}

// SetCloudStorage gets a reference to the given ClusterAuditLogCloudStorage and assigns it to the CloudStorage field.
func (o *V1beta1ClusterAuditLogConfig) SetCloudStorage(v ClusterAuditLogCloudStorage) {
	o.CloudStorage = &v
}

// GetRotationIntervalMinutes returns the RotationIntervalMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1beta1ClusterAuditLogConfig) GetRotationIntervalMinutes() int32 {
	if o == nil || IsNil(o.RotationIntervalMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.RotationIntervalMinutes.Get()
}

// GetRotationIntervalMinutesOk returns a tuple with the RotationIntervalMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1beta1ClusterAuditLogConfig) GetRotationIntervalMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RotationIntervalMinutes.Get(), o.RotationIntervalMinutes.IsSet()
}

// HasRotationIntervalMinutes returns a boolean if a field has been set.
func (o *V1beta1ClusterAuditLogConfig) HasRotationIntervalMinutes() bool {
	if o != nil && o.RotationIntervalMinutes.IsSet() {
		return true
	}

	return false
}

// SetRotationIntervalMinutes gets a reference to the given NullableInt32 and assigns it to the RotationIntervalMinutes field.
func (o *V1beta1ClusterAuditLogConfig) SetRotationIntervalMinutes(v int32) {
	o.RotationIntervalMinutes.Set(&v)
}

// SetRotationIntervalMinutesNil sets the value for RotationIntervalMinutes to be an explicit nil
func (o *V1beta1ClusterAuditLogConfig) SetRotationIntervalMinutesNil() {
	o.RotationIntervalMinutes.Set(nil)
}

// UnsetRotationIntervalMinutes ensures that no value is present for RotationIntervalMinutes, not even an explicit nil
func (o *V1beta1ClusterAuditLogConfig) UnsetRotationIntervalMinutes() {
	o.RotationIntervalMinutes.Unset()
}

// GetRotationSizeMib returns the RotationSizeMib field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1beta1ClusterAuditLogConfig) GetRotationSizeMib() int32 {
	if o == nil || IsNil(o.RotationSizeMib.Get()) {
		var ret int32
		return ret
	}
	return *o.RotationSizeMib.Get()
}

// GetRotationSizeMibOk returns a tuple with the RotationSizeMib field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1beta1ClusterAuditLogConfig) GetRotationSizeMibOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RotationSizeMib.Get(), o.RotationSizeMib.IsSet()
}

// HasRotationSizeMib returns a boolean if a field has been set.
func (o *V1beta1ClusterAuditLogConfig) HasRotationSizeMib() bool {
	if o != nil && o.RotationSizeMib.IsSet() {
		return true
	}

	return false
}

// SetRotationSizeMib gets a reference to the given NullableInt32 and assigns it to the RotationSizeMib field.
func (o *V1beta1ClusterAuditLogConfig) SetRotationSizeMib(v int32) {
	o.RotationSizeMib.Set(&v)
}

// SetRotationSizeMibNil sets the value for RotationSizeMib to be an explicit nil
func (o *V1beta1ClusterAuditLogConfig) SetRotationSizeMibNil() {
	o.RotationSizeMib.Set(nil)
}

// UnsetRotationSizeMib ensures that no value is present for RotationSizeMib, not even an explicit nil
func (o *V1beta1ClusterAuditLogConfig) UnsetRotationSizeMib() {
	o.RotationSizeMib.Unset()
}

func (o V1beta1ClusterAuditLogConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1ClusterAuditLogConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled.IsSet() {
		toSerialize["enabled"] = o.Enabled.Get()
	}
	if o.Unredacted.IsSet() {
		toSerialize["unredacted"] = o.Unredacted.Get()
	}
	if !IsNil(o.CloudStorage) {
		toSerialize["cloudStorage"] = o.CloudStorage
	}
	if o.RotationIntervalMinutes.IsSet() {
		toSerialize["rotationIntervalMinutes"] = o.RotationIntervalMinutes.Get()
	}
	if o.RotationSizeMib.IsSet() {
		toSerialize["rotationSizeMib"] = o.RotationSizeMib.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1beta1ClusterAuditLogConfig) UnmarshalJSON(data []byte) (err error) {
	varV1beta1ClusterAuditLogConfig := _V1beta1ClusterAuditLogConfig{}

	err = json.Unmarshal(data, &varV1beta1ClusterAuditLogConfig)

	if err != nil {
		return err
	}

	*o = V1beta1ClusterAuditLogConfig(varV1beta1ClusterAuditLogConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "unredacted")
		delete(additionalProperties, "cloudStorage")
		delete(additionalProperties, "rotationIntervalMinutes")
		delete(additionalProperties, "rotationSizeMib")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1beta1ClusterAuditLogConfig struct {
	value *V1beta1ClusterAuditLogConfig
	isSet bool
}

func (v NullableV1beta1ClusterAuditLogConfig) Get() *V1beta1ClusterAuditLogConfig {
	return v.value
}

func (v *NullableV1beta1ClusterAuditLogConfig) Set(val *V1beta1ClusterAuditLogConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1ClusterAuditLogConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1ClusterAuditLogConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1ClusterAuditLogConfig(val *V1beta1ClusterAuditLogConfig) *NullableV1beta1ClusterAuditLogConfig {
	return &NullableV1beta1ClusterAuditLogConfig{value: val, isSet: true}
}

func (v NullableV1beta1ClusterAuditLogConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1ClusterAuditLogConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
