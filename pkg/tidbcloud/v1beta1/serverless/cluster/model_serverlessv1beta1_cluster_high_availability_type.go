/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cluster

import (
	"encoding/json"
)

// Serverlessv1beta1ClusterHighAvailabilityType the model 'Serverlessv1beta1ClusterHighAvailabilityType'
type Serverlessv1beta1ClusterHighAvailabilityType string

// List of serverlessv1beta1ClusterHighAvailabilityType
const (
	SERVERLESSV1BETA1CLUSTERHIGHAVAILABILITYTYPE_ZONAL    Serverlessv1beta1ClusterHighAvailabilityType = "ZONAL"
	SERVERLESSV1BETA1CLUSTERHIGHAVAILABILITYTYPE_REGIONAL Serverlessv1beta1ClusterHighAvailabilityType = "REGIONAL"
)

// All allowed values of Serverlessv1beta1ClusterHighAvailabilityType enum
var AllowedServerlessv1beta1ClusterHighAvailabilityTypeEnumValues = []Serverlessv1beta1ClusterHighAvailabilityType{
	"ZONAL",
	"REGIONAL",
}

func (v *Serverlessv1beta1ClusterHighAvailabilityType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Serverlessv1beta1ClusterHighAvailabilityType(value)
	for _, existing := range AllowedServerlessv1beta1ClusterHighAvailabilityTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = Serverlessv1beta1ClusterHighAvailabilityType(value)
	return nil
}

// NewServerlessv1beta1ClusterHighAvailabilityTypeFromValue returns a pointer to a valid Serverlessv1beta1ClusterHighAvailabilityType for the value passed as argument
func NewServerlessv1beta1ClusterHighAvailabilityTypeFromValue(v string) *Serverlessv1beta1ClusterHighAvailabilityType {
	ev := Serverlessv1beta1ClusterHighAvailabilityType(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Serverlessv1beta1ClusterHighAvailabilityType) IsValid() bool {
	for _, existing := range AllowedServerlessv1beta1ClusterHighAvailabilityTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to serverlessv1beta1ClusterHighAvailabilityType value
func (v Serverlessv1beta1ClusterHighAvailabilityType) Ptr() *Serverlessv1beta1ClusterHighAvailabilityType {
	return &v
}

type NullableServerlessv1beta1ClusterHighAvailabilityType struct {
	value *Serverlessv1beta1ClusterHighAvailabilityType
	isSet bool
}

func (v NullableServerlessv1beta1ClusterHighAvailabilityType) Get() *Serverlessv1beta1ClusterHighAvailabilityType {
	return v.value
}

func (v *NullableServerlessv1beta1ClusterHighAvailabilityType) Set(val *Serverlessv1beta1ClusterHighAvailabilityType) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessv1beta1ClusterHighAvailabilityType) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessv1beta1ClusterHighAvailabilityType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessv1beta1ClusterHighAvailabilityType(val *Serverlessv1beta1ClusterHighAvailabilityType) *NullableServerlessv1beta1ClusterHighAvailabilityType {
	return &NullableServerlessv1beta1ClusterHighAvailabilityType{value: val, isSet: true}
}

func (v NullableServerlessv1beta1ClusterHighAvailabilityType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessv1beta1ClusterHighAvailabilityType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
