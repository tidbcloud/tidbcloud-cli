{
  "swagger": "2.0",
  "info": {
    "title": "TiDB Cloud Serverless Open API",
    "description": "TiDB Cloud Serverless Open API",
    "version": "v1beta1"
  },
  "tags": [
    {
      "name": "ServerlessService"
    }
  ],
  "host": "serverless.tidbapi.com",
  "basePath": "/v1beta1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/clusters": {
      "get": {
        "summary": "Provides a list of TiDB Serverless clusters in a project.",
        "operationId": "ServerlessService_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "Optional. The maximum number of clusters to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Optional. The page token from the previous response for pagination.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Optional. The filter expression to filter clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "description": "Optional. The order by expression for sorting clusters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ServerlessService"
        ]
      },
      "post": {
        "summary": "Creates a new TiDB Serverless cluster.",
        "operationId": "ServerlessService_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Required. The cluster to be created.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1Cluster",
              "required": [
                "cluster"
              ]
            }
          }
        ],
        "tags": [
          "ServerlessService"
        ]
      }
    },
    "/clusters/{clusterId}": {
      "get": {
        "summary": "Retrieves details of a specific TiDB Serverless cluster.",
        "operationId": "ServerlessService_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The ID of the cluster to be retrieved.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Optional. The level of detail to return for the cluster.\n\n - BASIC: Only basic information about the cluster is returned.\n - FULL: All details about the cluster are returned.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ]
          }
        ],
        "tags": [
          "ServerlessService"
        ]
      },
      "delete": {
        "summary": "Deletes a specific TiDB Serverless cluster.",
        "operationId": "ServerlessService_DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The ID of the cluster to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServerlessService"
        ]
      }
    },
    "/clusters/{cluster.clusterId}": {
      "patch": {
        "summary": "Partially updates a specific TiDB Serverless cluster.",
        "operationId": "ServerlessService_PartialUpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster.clusterId",
            "description": "Output_only. The unique ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ServerlessServicePartialUpdateClusterBody"
            }
          }
        ],
        "tags": [
          "ServerlessService"
        ]
      }
    },
    "/clusters/{clusterId}/password": {
      "put": {
        "summary": "Changes the root password of a specific TiDB Serverless cluster.",
        "operationId": "ServerlessService_ChangeRootPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ChangeRootPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The ID of the cluster for which the password is to be changed.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerlessServiceChangeRootPasswordBody"
            }
          }
        ],
        "tags": [
          "ServerlessService"
        ]
      }
    },
    "/regions": {
      "get": {
        "summary": "Provides a list of available regions for TiDB Serverless clusters.",
        "operationId": "ServerlessService_ListRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1ListRegionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ServerlessService"
        ]
      }
    }
  },
  "definitions": {
    "ClusterSpendingLimit": {
      "type": "object",
      "properties": {
        "monthly": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Maximum monthly spending limit in USD cents."
        }
      },
      "description": "Message for spending limit configuration."
    },
    "EndpointsPrivate": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Output_only. The hostname of the private endpoint.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Output_only. The port of the private endpoint.",
          "readOnly": true
        },
        "aws": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/PrivateAWS"
            }
          ]
        },
        "gcp": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/PrivateGCP"
            }
          ]
        }
      },
      "description": "Message for private endpoint to securely connect to the cluster."
    },
    "EndpointsPublic": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Output_only. The hostname of the public endpoint.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Output_only. The port of the public endpoint.",
          "readOnly": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Optional. Whether the public endpoint is disabled."
        }
      },
      "description": "Message for public endpoint to connect to the cluster."
    },
    "PrivateAWS": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Output_only. The AWS service name for private access.",
          "readOnly": true
        },
        "availabilityZone": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output_only. The availability zones that the service is available in.",
          "readOnly": true
        }
      },
      "description": "Message for AWS PrivateLink information."
    },
    "PrivateGCP": {
      "type": "object",
      "properties": {
        "serviceAttachmentName": {
          "type": "string",
          "description": "Output_only. The target GCP service attachment name for private access.",
          "readOnly": true
        }
      },
      "description": "Message for GCP Private Service information."
    },
    "ServerlessServiceChangeRootPasswordBody": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Required. The new root password for the cluster."
        }
      },
      "description": "Message for requesting to change the root password of a TiDB Serverless cluster.",
      "required": [
        "password"
      ]
    },
    "commonv1beta1ClusterState": {
      "type": "string",
      "enum": [
        "CREATING",
        "DELETING",
        "ACTIVE",
        "RESTORING",
        "MAINTENANCE",
        "DELETED",
        "INACTIVE",
        "UPGRADING",
        "IMPORTING",
        "MODIFYING",
        "PAUSING",
        "PAUSED",
        "RESUMING"
      ],
      "description": "Enum of possible states of a cluster.\n\n - CREATING: Cluster is being created.\n - DELETING: Cluster is being deleted.\n - ACTIVE: Cluster is active for use.\n - RESTORING: Cluster data is being restored.\n - MAINTENANCE: Cluster is under maintenance.\n - DELETED: Cluster has been deleted.\n - INACTIVE: Cluster is not active, but not being deleted.\n - UPGRADING: Cluster is being updated.\nOnly for Dedicated Cluster.\n - IMPORTING: Cluster is being imported.\nOnly for Dedicated Cluster.\n - MODIFYING: Cluster is being modified.\nOnly for Dedicated Cluster.\n - PAUSING: Cluster is being paused.\nOnly for Dedicated Cluster.\n - PAUSED: Cluster is paused.\nOnly for Dedicated Cluster.\n - RESUMING: Cluster is resuming.\nOnly for Dedicated Cluster."
    },
    "commonv1beta1Region": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "regions/aws-us-west-2",
          "title": "The unique name of the region.\nFormat: regions/{region_id}",
          "pattern": "^regions/(aws|gcp|azure)-(.+)$"
        },
        "regionId": {
          "type": "string",
          "description": "Format: {cloud_provider}-{region_code}\nRegion code: us-west-2, asia-east1.",
          "readOnly": true
        },
        "cloudProvider": {
          "description": "The cloud provider for the region.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        },
        "displayName": {
          "type": "string",
          "description": "User-friendly display name of the region.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "x-nullable": true,
          "description": "Optional provider name for the region.\nOnly used for serverless cluster.\nDeprecated.",
          "readOnly": true
        }
      },
      "description": "A representation of a region for deploying TiDB clusters."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "serverlessv1beta1ClusterView": {
      "type": "string",
      "enum": [
        "BASIC",
        "FULL"
      ],
      "description": "Enum for the different types of detail view to be returned for a TiDB Serverless cluster.\n\n - BASIC: Only basic information about the cluster is returned.\n - FULL: All details about the cluster are returned."
    },
    "tidb_cloud_open_apiserverlessv1beta1Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output_only. The unique name of the cluster.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "Output_only. The unique ID of the cluster.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Required. User friendly display name of the cluster."
        },
        "region": {
          "description": "Required. Region where the cluster will be created.",
          "allOf": [
            {
              "$ref": "#/definitions/commonv1beta1Region"
            }
          ]
        },
        "spendingLimit": {
          "description": "Optional. The spending limit for the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/ClusterSpendingLimit"
            }
          ]
        },
        "version": {
          "type": "string",
          "description": "Output_only. The TiDB version of the cluster.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "Output_only. The email of the creator of the cluster.",
          "readOnly": true
        },
        "automatedBackupPolicy": {
          "description": "Optional. Automated backup policy to set on the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterAutomatedBackupPolicy"
            }
          ]
        },
        "userPrefix": {
          "type": "string",
          "description": "Output_only. The unique prefix in SQL user name.",
          "readOnly": true
        },
        "endpoints": {
          "description": "Optional. The endpoints for connecting to the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterEndpoints"
            }
          ]
        },
        "state": {
          "description": "Output_only. The current state of the cluster.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/commonv1beta1ClusterState"
            }
          ]
        },
        "usage": {
          "description": "Output_only. Usage details of the cluster.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterUsage"
            }
          ]
        },
        "encryptionConfig": {
          "description": "Optional. Encryption settings for the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterEncryptionConfig"
            }
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels for the cluster.\ntidb.cloud/organization. The label for the cluster organization id.\ntidb.cloud/project. The label for the cluster project id."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "OUTPUT_ONLY. The annotations for the cluster.\ntidb.cloud/has-set-password. The annotation for whether the cluster has set password.\ntidb.cloud/available-features. The annotation for the available features of the cluster.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "Output_only. Timestamp when the cluster was created.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Output_only. Timestamp when the cluster was last updated.",
          "readOnly": true
        }
      },
      "description": "Message for a serverless TiDB cluster resource.",
      "required": [
        "displayName",
        "region"
      ]
    },
    "tidb_cloud_open_apiserverlessv1beta1ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tidb_cloud_open_apiserverlessv1beta1Cluster"
          },
          "description": "A list of clusters."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token provided to retrieve the next page of results."
        },
        "totalSize": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of available clusters."
        }
      },
      "description": "Responses message to the request for listing of TiDB Serverless clusters."
    },
    "tidb_cloud_open_apiserverlessv1beta1ListRegionsResponse": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonv1beta1Region"
          },
          "description": "A list of available regions."
        }
      },
      "description": "Responses message to the request for listing of available regions in TiDB Serverless."
    },
    "v1beta1ChangeRootPasswordResponse": {
      "type": "object",
      "description": "Responses message to the request for changing the root password of a TiDB Serverless cluster."
    },
    "v1beta1ClusterAutomatedBackupPolicy": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Optional. Cron expression for when automated backups should start."
        },
        "retentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Number of days to retain automated backups."
        }
      },
      "description": "Message for automated backup configuration for a cluster."
    },
    "v1beta1ClusterEncryptionConfig": {
      "type": "object",
      "properties": {
        "enhancedEncryptionEnabled": {
          "type": "boolean",
          "description": "Optional. Whether enhanced encryption for cluster data is enabled."
        }
      },
      "description": "Message for encryption settings for a cluster."
    },
    "v1beta1ClusterEndpoints": {
      "type": "object",
      "properties": {
        "public": {
          "description": "Optional. Public endpoint to connect to the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/EndpointsPublic"
            }
          ]
        },
        "private": {
          "description": "Output_only. Private endpoint to securely connect to the cluster.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/EndpointsPrivate"
            }
          ]
        }
      },
      "description": "Message for endpoint information for connecting to a cluster."
    },
    "v1beta1ClusterUsage": {
      "type": "object",
      "properties": {
        "requestUnit": {
          "type": "string",
          "format": "int64",
          "description": "Output_only. The Request Units used in this month.",
          "readOnly": true
        },
        "rowBasedStorage": {
          "type": "number",
          "format": "double",
          "description": "Output_only. The storage used on row-based storage in bytes.",
          "readOnly": true
        },
        "columnarStorage": {
          "type": "number",
          "format": "double",
          "description": "Output_only. The storage used on column-based storage in bytes.",
          "readOnly": true
        }
      },
      "description": "Message for usage statistics of a cluster."
    },
    "v1beta1PartialUpdateClusterRequestPartialUpdateCluster": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Output_only. The unique ID of the cluster."
        },
        "displayName": {
          "type": "string",
          "description": "Required. User friendly display name of the cluster."
        },
        "spendingLimit": {
          "description": "Optional. The spending limit for the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/ClusterSpendingLimit"
            }
          ]
        },
        "automatedBackupPolicy": {
          "description": "Optional. Automated backup policy to set on the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterAutomatedBackupPolicy"
            }
          ]
        },
        "endpoints": {
          "description": "Optional. The endpoints for connecting to the cluster.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterEndpoints"
            }
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels for the cluster.\ntidb.cloud/organization. The label for the cluster organization id.\ntidb.cloud/project. The label for the cluster project id."
        }
      },
      "required": [
        "clusterId"
      ]
    },
    "v1beta1RegionCloudProvider": {
      "type": "string",
      "enum": [
        "aws",
        "gcp",
        "azure"
      ],
      "description": "Enum of cloud provider names.\n\n - aws: Amazon Web Services.\nbuf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE\n - gcp: Google Cloud Platform.\nbuf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE\n - azure: Microsoft Azure.\nbuf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE"
    },
    "v1beta1ServerlessServicePartialUpdateClusterBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Required. User friendly display name of the cluster."
            },
            "spendingLimit": {
              "description": "Optional. The spending limit for the cluster.",
              "allOf": [
                {
                  "$ref": "#/definitions/ClusterSpendingLimit"
                }
              ]
            },
            "automatedBackupPolicy": {
              "description": "Optional. Automated backup policy to set on the cluster.",
              "allOf": [
                {
                  "$ref": "#/definitions/v1beta1ClusterAutomatedBackupPolicy"
                }
              ]
            },
            "endpoints": {
              "description": "Optional. The endpoints for connecting to the cluster.",
              "allOf": [
                {
                  "$ref": "#/definitions/v1beta1ClusterEndpoints"
                }
              ]
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Optional. The labels for the cluster.\ntidb.cloud/organization. The label for the cluster organization id.\ntidb.cloud/project. The label for the cluster project id."
            }
          },
          "description": "Required. The cluster to be updated.",
          "title": "Required. The cluster to be updated."
        },
        "updateMask": {
          "type": "string",
          "description": "Required. The update mask indicating which fields are to be updated."
        }
      },
      "description": "Message for requesting a partial update on a TiDB Serverless cluster.",
      "required": [
        "updateMask"
      ]
    }
  }
}