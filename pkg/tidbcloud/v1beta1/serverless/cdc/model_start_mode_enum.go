/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// StartModeEnum  - FROM_NOW: Start from now.  - FROM_TSO: Start from TSO.  - FROM_UTC: Start from UTC.
type StartModeEnum string

// List of StartMode.Enum
const (
	STARTMODEENUM_FROM_NOW StartModeEnum = "FROM_NOW"
	STARTMODEENUM_FROM_TSO StartModeEnum = "FROM_TSO"
	STARTMODEENUM_FROM_UTC StartModeEnum = "FROM_UTC"
)

// All allowed values of StartModeEnum enum
var AllowedStartModeEnumEnumValues = []StartModeEnum{
	"FROM_NOW",
	"FROM_TSO",
	"FROM_UTC",
}

func (v *StartModeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := StartModeEnum(value)
	for _, existing := range AllowedStartModeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = StartModeEnum(value)
	return nil
}

// NewStartModeEnumFromValue returns a pointer to a valid StartModeEnum for the value passed as argument
func NewStartModeEnumFromValue(v string) *StartModeEnum {
	ev := StartModeEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StartModeEnum) IsValid() bool {
	for _, existing := range AllowedStartModeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to StartMode.Enum value
func (v StartModeEnum) Ptr() *StartModeEnum {
	return &v
}

type NullableStartModeEnum struct {
	value *StartModeEnum
	isSet bool
}

func (v NullableStartModeEnum) Get() *StartModeEnum {
	return v.value
}

func (v *NullableStartModeEnum) Set(val *StartModeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableStartModeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableStartModeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartModeEnum(val *StartModeEnum) *NullableStartModeEnum {
	return &NullableStartModeEnum{value: val, isSet: true}
}

func (v NullableStartModeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartModeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
