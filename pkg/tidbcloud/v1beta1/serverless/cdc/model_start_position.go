/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// checks if the StartPosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartPosition{}

// StartPosition struct for StartPosition
type StartPosition struct {
	Mode                 *StartModeEnum `json:"mode,omitempty"`
	Tso                  *string        `json:"tso,omitempty"`
	Utc                  *string        `json:"utc,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StartPosition StartPosition

// NewStartPosition instantiates a new StartPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartPosition() *StartPosition {
	this := StartPosition{}
	return &this
}

// NewStartPositionWithDefaults instantiates a new StartPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartPositionWithDefaults() *StartPosition {
	this := StartPosition{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *StartPosition) GetMode() StartModeEnum {
	if o == nil || IsNil(o.Mode) {
		var ret StartModeEnum
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPosition) GetModeOk() (*StartModeEnum, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *StartPosition) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given StartModeEnum and assigns it to the Mode field.
func (o *StartPosition) SetMode(v StartModeEnum) {
	o.Mode = &v
}

// GetTso returns the Tso field value if set, zero value otherwise.
func (o *StartPosition) GetTso() string {
	if o == nil || IsNil(o.Tso) {
		var ret string
		return ret
	}
	return *o.Tso
}

// GetTsoOk returns a tuple with the Tso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPosition) GetTsoOk() (*string, bool) {
	if o == nil || IsNil(o.Tso) {
		return nil, false
	}
	return o.Tso, true
}

// HasTso returns a boolean if a field has been set.
func (o *StartPosition) HasTso() bool {
	if o != nil && !IsNil(o.Tso) {
		return true
	}

	return false
}

// SetTso gets a reference to the given string and assigns it to the Tso field.
func (o *StartPosition) SetTso(v string) {
	o.Tso = &v
}

// GetUtc returns the Utc field value if set, zero value otherwise.
func (o *StartPosition) GetUtc() string {
	if o == nil || IsNil(o.Utc) {
		var ret string
		return ret
	}
	return *o.Utc
}

// GetUtcOk returns a tuple with the Utc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPosition) GetUtcOk() (*string, bool) {
	if o == nil || IsNil(o.Utc) {
		return nil, false
	}
	return o.Utc, true
}

// HasUtc returns a boolean if a field has been set.
func (o *StartPosition) HasUtc() bool {
	if o != nil && !IsNil(o.Utc) {
		return true
	}

	return false
}

// SetUtc gets a reference to the given string and assigns it to the Utc field.
func (o *StartPosition) SetUtc(v string) {
	o.Utc = &v
}

func (o StartPosition) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartPosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Tso) {
		toSerialize["tso"] = o.Tso
	}
	if !IsNil(o.Utc) {
		toSerialize["utc"] = o.Utc
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StartPosition) UnmarshalJSON(data []byte) (err error) {
	varStartPosition := _StartPosition{}

	err = json.Unmarshal(data, &varStartPosition)

	if err != nil {
		return err
	}

	*o = StartPosition(varStartPosition)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mode")
		delete(additionalProperties, "tso")
		delete(additionalProperties, "utc")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStartPosition struct {
	value *StartPosition
	isSet bool
}

func (v NullableStartPosition) Get() *StartPosition {
	return v.value
}

func (v *NullableStartPosition) Set(val *StartPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableStartPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableStartPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartPosition(val *StartPosition) *NullableStartPosition {
	return &NullableStartPosition{value: val, isSet: true}
}

func (v NullableStartPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
