/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// ConnectorTypeEnum  - KAFKA: Kafka connector type.
type ConnectorTypeEnum string

// List of ConnectorType.Enum
const (
	CONNECTORTYPEENUM_KAFKA ConnectorTypeEnum = "KAFKA"
)

// All allowed values of ConnectorTypeEnum enum
var AllowedConnectorTypeEnumEnumValues = []ConnectorTypeEnum{
	"KAFKA",
}

func (v *ConnectorTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectorTypeEnum(value)
	for _, existing := range AllowedConnectorTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = ConnectorTypeEnum(value)
	return nil
}

// NewConnectorTypeEnumFromValue returns a pointer to a valid ConnectorTypeEnum for the value passed as argument
func NewConnectorTypeEnumFromValue(v string) *ConnectorTypeEnum {
	ev := ConnectorTypeEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectorTypeEnum) IsValid() bool {
	for _, existing := range AllowedConnectorTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConnectorType.Enum value
func (v ConnectorTypeEnum) Ptr() *ConnectorTypeEnum {
	return &v
}

type NullableConnectorTypeEnum struct {
	value *ConnectorTypeEnum
	isSet bool
}

func (v NullableConnectorTypeEnum) Get() *ConnectorTypeEnum {
	return v.value
}

func (v *NullableConnectorTypeEnum) Set(val *ConnectorTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorTypeEnum(val *ConnectorTypeEnum) *NullableConnectorTypeEnum {
	return &NullableConnectorTypeEnum{value: val, isSet: true}
}

func (v NullableConnectorTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
