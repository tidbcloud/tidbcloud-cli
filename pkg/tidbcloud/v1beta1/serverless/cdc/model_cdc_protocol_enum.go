/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// CDCProtocolEnum  - CANAL_JSON: Canal-JSON protocol.  - OPEN_PROTOCOL: Open Protocol.  - AVRO: Avro protocol.
type CDCProtocolEnum string

// List of CDCProtocol.Enum
const (
	CDCPROTOCOLENUM_CANAL_JSON    CDCProtocolEnum = "CANAL_JSON"
	CDCPROTOCOLENUM_OPEN_PROTOCOL CDCProtocolEnum = "OPEN_PROTOCOL"
	CDCPROTOCOLENUM_AVRO          CDCProtocolEnum = "AVRO"
)

// All allowed values of CDCProtocolEnum enum
var AllowedCDCProtocolEnumEnumValues = []CDCProtocolEnum{
	"CANAL_JSON",
	"OPEN_PROTOCOL",
	"AVRO",
}

func (v *CDCProtocolEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CDCProtocolEnum(value)
	for _, existing := range AllowedCDCProtocolEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = CDCProtocolEnum(value)
	return nil
}

// NewCDCProtocolEnumFromValue returns a pointer to a valid CDCProtocolEnum for the value passed as argument
func NewCDCProtocolEnumFromValue(v string) *CDCProtocolEnum {
	ev := CDCProtocolEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CDCProtocolEnum) IsValid() bool {
	for _, existing := range AllowedCDCProtocolEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CDCProtocol.Enum value
func (v CDCProtocolEnum) Ptr() *CDCProtocolEnum {
	return &v
}

type NullableCDCProtocolEnum struct {
	value *CDCProtocolEnum
	isSet bool
}

func (v NullableCDCProtocolEnum) Get() *CDCProtocolEnum {
	return v.value
}

func (v *NullableCDCProtocolEnum) Set(val *CDCProtocolEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableCDCProtocolEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableCDCProtocolEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCDCProtocolEnum(val *CDCProtocolEnum) *NullableCDCProtocolEnum {
	return &NullableCDCProtocolEnum{value: val, isSet: true}
}

func (v NullableCDCProtocolEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCDCProtocolEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
