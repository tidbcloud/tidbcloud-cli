/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// KafkaAuthTypeEnum  - DISABLE: No authentication.  - SASL_PLAIN: SASL/PLAIN authentication.  - SASL_SCRAM_SHA_256: SASL/SCRAM-SHA-256 authentication.  - SASL_SCRAM_SHA_512: SASL/SCRAM-SHA-512 authentication.
type KafkaAuthTypeEnum string

// List of KafkaAuthType.Enum
const (
	KAFKAAUTHTYPEENUM_DISABLE            KafkaAuthTypeEnum = "DISABLE"
	KAFKAAUTHTYPEENUM_SASL_PLAIN         KafkaAuthTypeEnum = "SASL_PLAIN"
	KAFKAAUTHTYPEENUM_SASL_SCRAM_SHA_256 KafkaAuthTypeEnum = "SASL_SCRAM_SHA_256"
	KAFKAAUTHTYPEENUM_SASL_SCRAM_SHA_512 KafkaAuthTypeEnum = "SASL_SCRAM_SHA_512"
)

// All allowed values of KafkaAuthTypeEnum enum
var AllowedKafkaAuthTypeEnumEnumValues = []KafkaAuthTypeEnum{
	"DISABLE",
	"SASL_PLAIN",
	"SASL_SCRAM_SHA_256",
	"SASL_SCRAM_SHA_512",
}

func (v *KafkaAuthTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := KafkaAuthTypeEnum(value)
	for _, existing := range AllowedKafkaAuthTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = KafkaAuthTypeEnum(value)
	return nil
}

// NewKafkaAuthTypeEnumFromValue returns a pointer to a valid KafkaAuthTypeEnum for the value passed as argument
func NewKafkaAuthTypeEnumFromValue(v string) *KafkaAuthTypeEnum {
	ev := KafkaAuthTypeEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v KafkaAuthTypeEnum) IsValid() bool {
	for _, existing := range AllowedKafkaAuthTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KafkaAuthType.Enum value
func (v KafkaAuthTypeEnum) Ptr() *KafkaAuthTypeEnum {
	return &v
}

type NullableKafkaAuthTypeEnum struct {
	value *KafkaAuthTypeEnum
	isSet bool
}

func (v NullableKafkaAuthTypeEnum) Get() *KafkaAuthTypeEnum {
	return v.value
}

func (v *NullableKafkaAuthTypeEnum) Set(val *KafkaAuthTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaAuthTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaAuthTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaAuthTypeEnum(val *KafkaAuthTypeEnum) *NullableKafkaAuthTypeEnum {
	return &NullableKafkaAuthTypeEnum{value: val, isSet: true}
}

func (v NullableKafkaAuthTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaAuthTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
