/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
	"fmt"
)

// checks if the ConnectorServiceCreateConnectorBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorServiceCreateConnectorBody{}

// ConnectorServiceCreateConnectorBody struct for ConnectorServiceCreateConnectorBody
type ConnectorServiceCreateConnectorBody struct {
	// Optional. The name of the connector.
	Name *string `json:"name,omitempty"`
	// Required. The sink of the connector.
	Sink SinkInfo `json:"sink"`
	// Required. The filter of the connector.
	Filter CDCFilter `json:"filter"`
	// Required. The start position of the connector.
	StartPosition        *StartPosition `json:"startPosition,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectorServiceCreateConnectorBody ConnectorServiceCreateConnectorBody

// NewConnectorServiceCreateConnectorBody instantiates a new ConnectorServiceCreateConnectorBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorServiceCreateConnectorBody(sink SinkInfo, filter CDCFilter) *ConnectorServiceCreateConnectorBody {
	this := ConnectorServiceCreateConnectorBody{}
	this.Sink = sink
	this.Filter = filter
	return &this
}

// NewConnectorServiceCreateConnectorBodyWithDefaults instantiates a new ConnectorServiceCreateConnectorBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorServiceCreateConnectorBodyWithDefaults() *ConnectorServiceCreateConnectorBody {
	this := ConnectorServiceCreateConnectorBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectorServiceCreateConnectorBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorServiceCreateConnectorBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectorServiceCreateConnectorBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnectorServiceCreateConnectorBody) SetName(v string) {
	o.Name = &v
}

// GetSink returns the Sink field value
func (o *ConnectorServiceCreateConnectorBody) GetSink() SinkInfo {
	if o == nil {
		var ret SinkInfo
		return ret
	}

	return o.Sink
}

// GetSinkOk returns a tuple with the Sink field value
// and a boolean to check if the value has been set.
func (o *ConnectorServiceCreateConnectorBody) GetSinkOk() (*SinkInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sink, true
}

// SetSink sets field value
func (o *ConnectorServiceCreateConnectorBody) SetSink(v SinkInfo) {
	o.Sink = v
}

// GetFilter returns the Filter field value
func (o *ConnectorServiceCreateConnectorBody) GetFilter() CDCFilter {
	if o == nil {
		var ret CDCFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *ConnectorServiceCreateConnectorBody) GetFilterOk() (*CDCFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *ConnectorServiceCreateConnectorBody) SetFilter(v CDCFilter) {
	o.Filter = v
}

// GetStartPosition returns the StartPosition field value if set, zero value otherwise.
func (o *ConnectorServiceCreateConnectorBody) GetStartPosition() StartPosition {
	if o == nil || IsNil(o.StartPosition) {
		var ret StartPosition
		return ret
	}
	return *o.StartPosition
}

// GetStartPositionOk returns a tuple with the StartPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorServiceCreateConnectorBody) GetStartPositionOk() (*StartPosition, bool) {
	if o == nil || IsNil(o.StartPosition) {
		return nil, false
	}
	return o.StartPosition, true
}

// HasStartPosition returns a boolean if a field has been set.
func (o *ConnectorServiceCreateConnectorBody) HasStartPosition() bool {
	if o != nil && !IsNil(o.StartPosition) {
		return true
	}

	return false
}

// SetStartPosition gets a reference to the given StartPosition and assigns it to the StartPosition field.
func (o *ConnectorServiceCreateConnectorBody) SetStartPosition(v StartPosition) {
	o.StartPosition = &v
}

func (o ConnectorServiceCreateConnectorBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorServiceCreateConnectorBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["sink"] = o.Sink
	toSerialize["filter"] = o.Filter
	if !IsNil(o.StartPosition) {
		toSerialize["startPosition"] = o.StartPosition
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectorServiceCreateConnectorBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sink",
		"filter",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectorServiceCreateConnectorBody := _ConnectorServiceCreateConnectorBody{}

	err = json.Unmarshal(data, &varConnectorServiceCreateConnectorBody)

	if err != nil {
		return err
	}

	*o = ConnectorServiceCreateConnectorBody(varConnectorServiceCreateConnectorBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "sink")
		delete(additionalProperties, "filter")
		delete(additionalProperties, "startPosition")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectorServiceCreateConnectorBody struct {
	value *ConnectorServiceCreateConnectorBody
	isSet bool
}

func (v NullableConnectorServiceCreateConnectorBody) Get() *ConnectorServiceCreateConnectorBody {
	return v.value
}

func (v *NullableConnectorServiceCreateConnectorBody) Set(val *ConnectorServiceCreateConnectorBody) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorServiceCreateConnectorBody) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorServiceCreateConnectorBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorServiceCreateConnectorBody(val *ConnectorServiceCreateConnectorBody) *NullableConnectorServiceCreateConnectorBody {
	return &NullableConnectorServiceCreateConnectorBody{value: val, isSet: true}
}

func (v NullableConnectorServiceCreateConnectorBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorServiceCreateConnectorBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
