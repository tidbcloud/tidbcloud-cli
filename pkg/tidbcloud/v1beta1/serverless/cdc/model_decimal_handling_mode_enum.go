/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// DecimalHandlingModeEnum  - PRECISE: Precise handling mode for decimals.  - STRING: String handling mode for decimals.
type DecimalHandlingModeEnum string

// List of DecimalHandlingMode.Enum
const (
	DECIMALHANDLINGMODEENUM_PRECISE DecimalHandlingModeEnum = "PRECISE"
	DECIMALHANDLINGMODEENUM_STRING  DecimalHandlingModeEnum = "STRING"
)

// All allowed values of DecimalHandlingModeEnum enum
var AllowedDecimalHandlingModeEnumEnumValues = []DecimalHandlingModeEnum{
	"PRECISE",
	"STRING",
}

func (v *DecimalHandlingModeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DecimalHandlingModeEnum(value)
	for _, existing := range AllowedDecimalHandlingModeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = DecimalHandlingModeEnum(value)
	return nil
}

// NewDecimalHandlingModeEnumFromValue returns a pointer to a valid DecimalHandlingModeEnum for the value passed as argument
func NewDecimalHandlingModeEnumFromValue(v string) *DecimalHandlingModeEnum {
	ev := DecimalHandlingModeEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DecimalHandlingModeEnum) IsValid() bool {
	for _, existing := range AllowedDecimalHandlingModeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DecimalHandlingMode.Enum value
func (v DecimalHandlingModeEnum) Ptr() *DecimalHandlingModeEnum {
	return &v
}

type NullableDecimalHandlingModeEnum struct {
	value *DecimalHandlingModeEnum
	isSet bool
}

func (v NullableDecimalHandlingModeEnum) Get() *DecimalHandlingModeEnum {
	return v.value
}

func (v *NullableDecimalHandlingModeEnum) Set(val *DecimalHandlingModeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableDecimalHandlingModeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableDecimalHandlingModeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecimalHandlingModeEnum(val *DecimalHandlingModeEnum) *NullableDecimalHandlingModeEnum {
	return &NullableDecimalHandlingModeEnum{value: val, isSet: true}
}

func (v NullableDecimalHandlingModeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecimalHandlingModeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
