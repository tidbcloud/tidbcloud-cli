/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// checks if the CDCCheckpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CDCCheckpoint{}

// CDCCheckpoint struct for CDCCheckpoint
type CDCCheckpoint struct {
	// OUTPUT_ONLY. The checkpoint TSO.
	Tso *string `json:"tso,omitempty"`
	// OUTPUT_ONLY. The checkpoint in utc.
	Time                 *string `json:"time,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CDCCheckpoint CDCCheckpoint

// NewCDCCheckpoint instantiates a new CDCCheckpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCDCCheckpoint() *CDCCheckpoint {
	this := CDCCheckpoint{}
	return &this
}

// NewCDCCheckpointWithDefaults instantiates a new CDCCheckpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCDCCheckpointWithDefaults() *CDCCheckpoint {
	this := CDCCheckpoint{}
	return &this
}

// GetTso returns the Tso field value if set, zero value otherwise.
func (o *CDCCheckpoint) GetTso() string {
	if o == nil || IsNil(o.Tso) {
		var ret string
		return ret
	}
	return *o.Tso
}

// GetTsoOk returns a tuple with the Tso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDCCheckpoint) GetTsoOk() (*string, bool) {
	if o == nil || IsNil(o.Tso) {
		return nil, false
	}
	return o.Tso, true
}

// HasTso returns a boolean if a field has been set.
func (o *CDCCheckpoint) HasTso() bool {
	if o != nil && !IsNil(o.Tso) {
		return true
	}

	return false
}

// SetTso gets a reference to the given string and assigns it to the Tso field.
func (o *CDCCheckpoint) SetTso(v string) {
	o.Tso = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *CDCCheckpoint) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDCCheckpoint) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *CDCCheckpoint) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *CDCCheckpoint) SetTime(v string) {
	o.Time = &v
}

func (o CDCCheckpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CDCCheckpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tso) {
		toSerialize["tso"] = o.Tso
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CDCCheckpoint) UnmarshalJSON(data []byte) (err error) {
	varCDCCheckpoint := _CDCCheckpoint{}

	err = json.Unmarshal(data, &varCDCCheckpoint)

	if err != nil {
		return err
	}

	*o = CDCCheckpoint(varCDCCheckpoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tso")
		delete(additionalProperties, "time")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCDCCheckpoint struct {
	value *CDCCheckpoint
	isSet bool
}

func (v NullableCDCCheckpoint) Get() *CDCCheckpoint {
	return v.value
}

func (v *NullableCDCCheckpoint) Set(val *CDCCheckpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCDCCheckpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCDCCheckpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCDCCheckpoint(val *CDCCheckpoint) *NullableCDCCheckpoint {
	return &NullableCDCCheckpoint{value: val, isSet: true}
}

func (v NullableCDCCheckpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCDCCheckpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
