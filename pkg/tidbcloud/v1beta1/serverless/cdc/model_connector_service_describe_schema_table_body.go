/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// checks if the ConnectorServiceDescribeSchemaTableBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorServiceDescribeSchemaTableBody{}

// ConnectorServiceDescribeSchemaTableBody struct for ConnectorServiceDescribeSchemaTableBody
type ConnectorServiceDescribeSchemaTableBody struct {
	// Optional. The filter rules for schema tables.
	FilterRule           []string `json:"filterRule,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectorServiceDescribeSchemaTableBody ConnectorServiceDescribeSchemaTableBody

// NewConnectorServiceDescribeSchemaTableBody instantiates a new ConnectorServiceDescribeSchemaTableBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorServiceDescribeSchemaTableBody() *ConnectorServiceDescribeSchemaTableBody {
	this := ConnectorServiceDescribeSchemaTableBody{}
	return &this
}

// NewConnectorServiceDescribeSchemaTableBodyWithDefaults instantiates a new ConnectorServiceDescribeSchemaTableBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorServiceDescribeSchemaTableBodyWithDefaults() *ConnectorServiceDescribeSchemaTableBody {
	this := ConnectorServiceDescribeSchemaTableBody{}
	return &this
}

// GetFilterRule returns the FilterRule field value if set, zero value otherwise.
func (o *ConnectorServiceDescribeSchemaTableBody) GetFilterRule() []string {
	if o == nil || IsNil(o.FilterRule) {
		var ret []string
		return ret
	}
	return o.FilterRule
}

// GetFilterRuleOk returns a tuple with the FilterRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorServiceDescribeSchemaTableBody) GetFilterRuleOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterRule) {
		return nil, false
	}
	return o.FilterRule, true
}

// HasFilterRule returns a boolean if a field has been set.
func (o *ConnectorServiceDescribeSchemaTableBody) HasFilterRule() bool {
	if o != nil && !IsNil(o.FilterRule) {
		return true
	}

	return false
}

// SetFilterRule gets a reference to the given []string and assigns it to the FilterRule field.
func (o *ConnectorServiceDescribeSchemaTableBody) SetFilterRule(v []string) {
	o.FilterRule = v
}

func (o ConnectorServiceDescribeSchemaTableBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorServiceDescribeSchemaTableBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterRule) {
		toSerialize["filterRule"] = o.FilterRule
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectorServiceDescribeSchemaTableBody) UnmarshalJSON(data []byte) (err error) {
	varConnectorServiceDescribeSchemaTableBody := _ConnectorServiceDescribeSchemaTableBody{}

	err = json.Unmarshal(data, &varConnectorServiceDescribeSchemaTableBody)

	if err != nil {
		return err
	}

	*o = ConnectorServiceDescribeSchemaTableBody(varConnectorServiceDescribeSchemaTableBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filterRule")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectorServiceDescribeSchemaTableBody struct {
	value *ConnectorServiceDescribeSchemaTableBody
	isSet bool
}

func (v NullableConnectorServiceDescribeSchemaTableBody) Get() *ConnectorServiceDescribeSchemaTableBody {
	return v.value
}

func (v *NullableConnectorServiceDescribeSchemaTableBody) Set(val *ConnectorServiceDescribeSchemaTableBody) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorServiceDescribeSchemaTableBody) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorServiceDescribeSchemaTableBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorServiceDescribeSchemaTableBody(val *ConnectorServiceDescribeSchemaTableBody) *NullableConnectorServiceDescribeSchemaTableBody {
	return &NullableConnectorServiceDescribeSchemaTableBody{value: val, isSet: true}
}

func (v NullableConnectorServiceDescribeSchemaTableBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorServiceDescribeSchemaTableBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
