/*
TiDB Cloud Serverless CDC Open API

TiDB Cloud Serverless CDC Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdc

import (
	"encoding/json"
)

// checks if the Changefeeds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Changefeeds{}

// Changefeeds struct for Changefeeds
type Changefeeds struct {
	// The list of changefeeds.
	Changefeeds []Changefeed `json:"changefeeds,omitempty"`
	// The token provided to retrieve the next page of results.
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// The total number of changefeeds.
	TotalSize            *int64 `json:"totalSize,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Changefeeds Changefeeds

// NewChangefeeds instantiates a new Changefeeds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangefeeds() *Changefeeds {
	this := Changefeeds{}
	return &this
}

// NewChangefeedsWithDefaults instantiates a new Changefeeds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangefeedsWithDefaults() *Changefeeds {
	this := Changefeeds{}
	return &this
}

// GetChangefeeds returns the Changefeeds field value if set, zero value otherwise.
func (o *Changefeeds) GetChangefeeds() []Changefeed {
	if o == nil || IsNil(o.Changefeeds) {
		var ret []Changefeed
		return ret
	}
	return o.Changefeeds
}

// GetChangefeedsOk returns a tuple with the Changefeeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Changefeeds) GetChangefeedsOk() ([]Changefeed, bool) {
	if o == nil || IsNil(o.Changefeeds) {
		return nil, false
	}
	return o.Changefeeds, true
}

// HasChangefeeds returns a boolean if a field has been set.
func (o *Changefeeds) HasChangefeeds() bool {
	if o != nil && !IsNil(o.Changefeeds) {
		return true
	}

	return false
}

// SetChangefeeds gets a reference to the given []Changefeed and assigns it to the Changefeeds field.
func (o *Changefeeds) SetChangefeeds(v []Changefeed) {
	o.Changefeeds = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *Changefeeds) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Changefeeds) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *Changefeeds) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *Changefeeds) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *Changefeeds) GetTotalSize() int64 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int64
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Changefeeds) GetTotalSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *Changefeeds) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int64 and assigns it to the TotalSize field.
func (o *Changefeeds) SetTotalSize(v int64) {
	o.TotalSize = &v
}

func (o Changefeeds) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Changefeeds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Changefeeds) {
		toSerialize["changefeeds"] = o.Changefeeds
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.TotalSize) {
		toSerialize["totalSize"] = o.TotalSize
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Changefeeds) UnmarshalJSON(data []byte) (err error) {
	varChangefeeds := _Changefeeds{}

	err = json.Unmarshal(data, &varChangefeeds)

	if err != nil {
		return err
	}

	*o = Changefeeds(varChangefeeds)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "changefeeds")
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "totalSize")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChangefeeds struct {
	value *Changefeeds
	isSet bool
}

func (v NullableChangefeeds) Get() *Changefeeds {
	return v.value
}

func (v *NullableChangefeeds) Set(val *Changefeeds) {
	v.value = val
	v.isSet = true
}

func (v NullableChangefeeds) IsSet() bool {
	return v.isSet
}

func (v *NullableChangefeeds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangefeeds(val *Changefeeds) *NullableChangefeeds {
	return &NullableChangefeeds{value: val, isSet: true}
}

func (v NullableChangefeeds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangefeeds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
