/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package imp

import (
	"encoding/json"
	"time"
)

// checks if the Import type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Import{}

// Import struct for Import
type Import struct {
	// The ID of the import. DEPRECATED, use import_id instead.
	Id *string `json:"id,omitempty"`
	// The name of the import.
	Name *string `json:"name,omitempty"`
	// The ID of the cluster to import into.
	ClusterId *string `json:"clusterId,omitempty"`
	// The total size of the data imported.
	TotalSize *string `json:"totalSize,omitempty"`
	// The time the import was created.
	CreateTime *time.Time `json:"createTime,omitempty"`
	// The time the import was completed.
	CompleteTime NullableTime `json:"completeTime,omitempty"`
	// The state of the import.
	State *ImportStateEnum `json:"state,omitempty"`
	// The process in percent of the import job, but doesn't include the post-processing progress.
	CompletePercent *int64 `json:"completePercent,omitempty"`
	// The output message of the import.
	Message *string `json:"message,omitempty"`
	// The user who created the import.
	CreatedBy *string `json:"createdBy,omitempty"`
	// The creation details of the import.
	CreationDetails *CreationDetails `json:"creationDetails,omitempty"`
	// The ID of the import.
	ImportId             *string `json:"importId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Import Import

// NewImport instantiates a new Import object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImport() *Import {
	this := Import{}
	return &this
}

// NewImportWithDefaults instantiates a new Import object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportWithDefaults() *Import {
	this := Import{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Import) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Import) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Import) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Import) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Import) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Import) SetName(v string) {
	o.Name = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *Import) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *Import) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *Import) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *Import) GetTotalSize() string {
	if o == nil || IsNil(o.TotalSize) {
		var ret string
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetTotalSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *Import) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given string and assigns it to the TotalSize field.
func (o *Import) SetTotalSize(v string) {
	o.TotalSize = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *Import) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *Import) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *Import) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetCompleteTime returns the CompleteTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Import) GetCompleteTime() time.Time {
	if o == nil || IsNil(o.CompleteTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CompleteTime.Get()
}

// GetCompleteTimeOk returns a tuple with the CompleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Import) GetCompleteTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompleteTime.Get(), o.CompleteTime.IsSet()
}

// HasCompleteTime returns a boolean if a field has been set.
func (o *Import) HasCompleteTime() bool {
	if o != nil && o.CompleteTime.IsSet() {
		return true
	}

	return false
}

// SetCompleteTime gets a reference to the given NullableTime and assigns it to the CompleteTime field.
func (o *Import) SetCompleteTime(v time.Time) {
	o.CompleteTime.Set(&v)
}

// SetCompleteTimeNil sets the value for CompleteTime to be an explicit nil
func (o *Import) SetCompleteTimeNil() {
	o.CompleteTime.Set(nil)
}

// UnsetCompleteTime ensures that no value is present for CompleteTime, not even an explicit nil
func (o *Import) UnsetCompleteTime() {
	o.CompleteTime.Unset()
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Import) GetState() ImportStateEnum {
	if o == nil || IsNil(o.State) {
		var ret ImportStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetStateOk() (*ImportStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Import) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given ImportStateEnum and assigns it to the State field.
func (o *Import) SetState(v ImportStateEnum) {
	o.State = &v
}

// GetCompletePercent returns the CompletePercent field value if set, zero value otherwise.
func (o *Import) GetCompletePercent() int64 {
	if o == nil || IsNil(o.CompletePercent) {
		var ret int64
		return ret
	}
	return *o.CompletePercent
}

// GetCompletePercentOk returns a tuple with the CompletePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCompletePercentOk() (*int64, bool) {
	if o == nil || IsNil(o.CompletePercent) {
		return nil, false
	}
	return o.CompletePercent, true
}

// HasCompletePercent returns a boolean if a field has been set.
func (o *Import) HasCompletePercent() bool {
	if o != nil && !IsNil(o.CompletePercent) {
		return true
	}

	return false
}

// SetCompletePercent gets a reference to the given int64 and assigns it to the CompletePercent field.
func (o *Import) SetCompletePercent(v int64) {
	o.CompletePercent = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Import) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Import) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Import) SetMessage(v string) {
	o.Message = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Import) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Import) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Import) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreationDetails returns the CreationDetails field value if set, zero value otherwise.
func (o *Import) GetCreationDetails() CreationDetails {
	if o == nil || IsNil(o.CreationDetails) {
		var ret CreationDetails
		return ret
	}
	return *o.CreationDetails
}

// GetCreationDetailsOk returns a tuple with the CreationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCreationDetailsOk() (*CreationDetails, bool) {
	if o == nil || IsNil(o.CreationDetails) {
		return nil, false
	}
	return o.CreationDetails, true
}

// HasCreationDetails returns a boolean if a field has been set.
func (o *Import) HasCreationDetails() bool {
	if o != nil && !IsNil(o.CreationDetails) {
		return true
	}

	return false
}

// SetCreationDetails gets a reference to the given CreationDetails and assigns it to the CreationDetails field.
func (o *Import) SetCreationDetails(v CreationDetails) {
	o.CreationDetails = &v
}

// GetImportId returns the ImportId field value if set, zero value otherwise.
func (o *Import) GetImportId() string {
	if o == nil || IsNil(o.ImportId) {
		var ret string
		return ret
	}
	return *o.ImportId
}

// GetImportIdOk returns a tuple with the ImportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetImportIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImportId) {
		return nil, false
	}
	return o.ImportId, true
}

// HasImportId returns a boolean if a field has been set.
func (o *Import) HasImportId() bool {
	if o != nil && !IsNil(o.ImportId) {
		return true
	}

	return false
}

// SetImportId gets a reference to the given string and assigns it to the ImportId field.
func (o *Import) SetImportId(v string) {
	o.ImportId = &v
}

func (o Import) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Import) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	if !IsNil(o.TotalSize) {
		toSerialize["totalSize"] = o.TotalSize
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.CompleteTime.IsSet() {
		toSerialize["completeTime"] = o.CompleteTime.Get()
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.CompletePercent) {
		toSerialize["completePercent"] = o.CompletePercent
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreationDetails) {
		toSerialize["creationDetails"] = o.CreationDetails
	}
	if !IsNil(o.ImportId) {
		toSerialize["importId"] = o.ImportId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Import) UnmarshalJSON(data []byte) (err error) {
	varImport := _Import{}

	err = json.Unmarshal(data, &varImport)

	if err != nil {
		return err
	}

	*o = Import(varImport)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "clusterId")
		delete(additionalProperties, "totalSize")
		delete(additionalProperties, "createTime")
		delete(additionalProperties, "completeTime")
		delete(additionalProperties, "state")
		delete(additionalProperties, "completePercent")
		delete(additionalProperties, "message")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "creationDetails")
		delete(additionalProperties, "importId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableImport struct {
	value *Import
	isSet bool
}

func (v NullableImport) Get() *Import {
	return v.value
}

func (v *NullableImport) Set(val *Import) {
	v.value = val
	v.isSet = true
}

func (v NullableImport) IsSet() bool {
	return v.isSet
}

func (v *NullableImport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImport(val *Import) *NullableImport {
	return &NullableImport{value: val, isSet: true}
}

func (v NullableImport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
