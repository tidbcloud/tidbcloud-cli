/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package imp

import (
	"encoding/json"
	"fmt"
)

// ImportSourceTypeEnum the model 'ImportSourceTypeEnum'
type ImportSourceTypeEnum string

// List of ImportSourceType.Enum
const (
	IMPORTSOURCETYPEENUM_LOCAL      ImportSourceTypeEnum = "LOCAL"
	IMPORTSOURCETYPEENUM_S3         ImportSourceTypeEnum = "S3"
	IMPORTSOURCETYPEENUM_GCS        ImportSourceTypeEnum = "GCS"
	IMPORTSOURCETYPEENUM_AZURE_BLOB ImportSourceTypeEnum = "AZURE_BLOB"

	// Unknown value for handling new enum values gracefully
	ImportSourceTypeEnum_UNKNOWN ImportSourceTypeEnum = "unknown"
)

// All allowed values of ImportSourceTypeEnum enum
var AllowedImportSourceTypeEnumEnumValues = []ImportSourceTypeEnum{
	"LOCAL",
	"S3",
	"GCS",
	"AZURE_BLOB",
	ImportSourceTypeEnum_UNKNOWN, // Include unknown
}

func (v *ImportSourceTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ImportSourceTypeEnum(value)
	for _, existing := range AllowedImportSourceTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	// Instead of returning an error, assign UNKNOWN value
	*v = ImportSourceTypeEnum_UNKNOWN
	return nil
}

// NewImportSourceTypeEnumFromValue returns a pointer to a valid ImportSourceTypeEnum
// for the value passed as argument, or UNKNOWN if the value is not in the enum list
func NewImportSourceTypeEnumFromValue(v string) *ImportSourceTypeEnum {
	ev := ImportSourceTypeEnum(v)
	if ev.IsValid() {
		return &ev
	}
	unknown := ImportSourceTypeEnum_UNKNOWN
	return &unknown
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImportSourceTypeEnum) IsValid() bool {
	for _, existing := range AllowedImportSourceTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ImportSourceType.Enum value
func (v ImportSourceTypeEnum) Ptr() *ImportSourceTypeEnum {
	return &v
}

type NullableImportSourceTypeEnum struct {
	value *ImportSourceTypeEnum
	isSet bool
}

func (v NullableImportSourceTypeEnum) Get() *ImportSourceTypeEnum {
	return v.value
}

func (v *NullableImportSourceTypeEnum) Set(val *ImportSourceTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableImportSourceTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableImportSourceTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportSourceTypeEnum(val *ImportSourceTypeEnum) *NullableImportSourceTypeEnum {
	return &NullableImportSourceTypeEnum{value: val, isSet: true}
}

func (v NullableImportSourceTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportSourceTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
