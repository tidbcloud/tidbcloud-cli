/*
TiDB Cloud Serverless Open API

TiDB Cloud Serverless Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package imp

import (
	"encoding/json"
)

// ImportOSSAuthTypeEnum  - ACCESS_KEY: The access method is access key.
type ImportOSSAuthTypeEnum string

// List of ImportOSSAuthType.Enum
const (
	IMPORTOSSAUTHTYPEENUM_ACCESS_KEY ImportOSSAuthTypeEnum = "ACCESS_KEY"
)

// All allowed values of ImportOSSAuthTypeEnum enum
var AllowedImportOSSAuthTypeEnumEnumValues = []ImportOSSAuthTypeEnum{
	"ACCESS_KEY",
}

func (v *ImportOSSAuthTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ImportOSSAuthTypeEnum(value)
	for _, existing := range AllowedImportOSSAuthTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = ImportOSSAuthTypeEnum(value)
	return nil
}

// NewImportOSSAuthTypeEnumFromValue returns a pointer to a valid ImportOSSAuthTypeEnum for the value passed as argument
func NewImportOSSAuthTypeEnumFromValue(v string) *ImportOSSAuthTypeEnum {
	ev := ImportOSSAuthTypeEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImportOSSAuthTypeEnum) IsValid() bool {
	for _, existing := range AllowedImportOSSAuthTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ImportOSSAuthType.Enum value
func (v ImportOSSAuthTypeEnum) Ptr() *ImportOSSAuthTypeEnum {
	return &v
}

type NullableImportOSSAuthTypeEnum struct {
	value *ImportOSSAuthTypeEnum
	isSet bool
}

func (v NullableImportOSSAuthTypeEnum) Get() *ImportOSSAuthTypeEnum {
	return v.value
}

func (v *NullableImportOSSAuthTypeEnum) Set(val *ImportOSSAuthTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableImportOSSAuthTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableImportOSSAuthTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportOSSAuthTypeEnum(val *ImportOSSAuthTypeEnum) *NullableImportOSSAuthTypeEnum {
	return &NullableImportOSSAuthTypeEnum{value: val, isSet: true}
}

func (v NullableImportOSSAuthTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportOSSAuthTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
