/*
TiDB Cloud Serverless Export Open API

TiDB Cloud Serverless Export Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// checks if the ListExportsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListExportsResponse{}

// ListExportsResponse struct for ListExportsResponse
type ListExportsResponse struct {
	// A list of exports.
	Exports []Export `json:"exports,omitempty"`
	// Token provided to retrieve the next page of results.
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// Total number of exports.
	TotalSize            *int64 `json:"totalSize,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListExportsResponse ListExportsResponse

// NewListExportsResponse instantiates a new ListExportsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListExportsResponse() *ListExportsResponse {
	this := ListExportsResponse{}
	return &this
}

// NewListExportsResponseWithDefaults instantiates a new ListExportsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListExportsResponseWithDefaults() *ListExportsResponse {
	this := ListExportsResponse{}
	return &this
}

// GetExports returns the Exports field value if set, zero value otherwise.
func (o *ListExportsResponse) GetExports() []Export {
	if o == nil || IsNil(o.Exports) {
		var ret []Export
		return ret
	}
	return o.Exports
}

// GetExportsOk returns a tuple with the Exports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListExportsResponse) GetExportsOk() ([]Export, bool) {
	if o == nil || IsNil(o.Exports) {
		return nil, false
	}
	return o.Exports, true
}

// HasExports returns a boolean if a field has been set.
func (o *ListExportsResponse) HasExports() bool {
	if o != nil && !IsNil(o.Exports) {
		return true
	}

	return false
}

// SetExports gets a reference to the given []Export and assigns it to the Exports field.
func (o *ListExportsResponse) SetExports(v []Export) {
	o.Exports = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListExportsResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListExportsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListExportsResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListExportsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *ListExportsResponse) GetTotalSize() int64 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int64
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListExportsResponse) GetTotalSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *ListExportsResponse) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int64 and assigns it to the TotalSize field.
func (o *ListExportsResponse) SetTotalSize(v int64) {
	o.TotalSize = &v
}

func (o ListExportsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListExportsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exports) {
		toSerialize["exports"] = o.Exports
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.TotalSize) {
		toSerialize["totalSize"] = o.TotalSize
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListExportsResponse) UnmarshalJSON(data []byte) (err error) {
	varListExportsResponse := _ListExportsResponse{}

	err = json.Unmarshal(data, &varListExportsResponse)

	if err != nil {
		return err
	}

	*o = ListExportsResponse(varListExportsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "exports")
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "totalSize")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListExportsResponse struct {
	value *ListExportsResponse
	isSet bool
}

func (v NullableListExportsResponse) Get() *ListExportsResponse {
	return v.value
}

func (v *NullableListExportsResponse) Set(val *ListExportsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListExportsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListExportsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListExportsResponse(val *ListExportsResponse) *NullableListExportsResponse {
	return &NullableListExportsResponse{value: val, isSet: true}
}

func (v NullableListExportsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListExportsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
