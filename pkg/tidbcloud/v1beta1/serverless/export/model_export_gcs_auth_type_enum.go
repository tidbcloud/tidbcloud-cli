/*
TiDB Cloud Serverless Export Open API

TiDB Cloud Serverless Export Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
	"fmt"
)

// ExportGcsAuthTypeEnum  - SERVICE_ACCOUNT_KEY: The access method is service account key.
type ExportGcsAuthTypeEnum string

// List of ExportGcsAuthType.Enum
const (
	EXPORTGCSAUTHTYPEENUM_SERVICE_ACCOUNT_KEY ExportGcsAuthTypeEnum = "SERVICE_ACCOUNT_KEY"

	// Unknown value for handling new enum values gracefully
	ExportGcsAuthTypeEnum_UNKNOWN ExportGcsAuthTypeEnum = "unknown"
)

// All allowed values of ExportGcsAuthTypeEnum enum
var AllowedExportGcsAuthTypeEnumEnumValues = []ExportGcsAuthTypeEnum{
	"SERVICE_ACCOUNT_KEY",
	ExportGcsAuthTypeEnum_UNKNOWN, // Include unknown
}

func (v *ExportGcsAuthTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExportGcsAuthTypeEnum(value)
	for _, existing := range AllowedExportGcsAuthTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	// Instead of returning an error, assign UNKNOWN value
	*v = ExportGcsAuthTypeEnum_UNKNOWN
	return nil
}

// NewExportGcsAuthTypeEnumFromValue returns a pointer to a valid ExportGcsAuthTypeEnum
// for the value passed as argument, or UNKNOWN if the value is not in the enum list
func NewExportGcsAuthTypeEnumFromValue(v string) *ExportGcsAuthTypeEnum {
	ev := ExportGcsAuthTypeEnum(v)
	if ev.IsValid() {
		return &ev
	}
	unknown := ExportGcsAuthTypeEnum_UNKNOWN
	return &unknown
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExportGcsAuthTypeEnum) IsValid() bool {
	for _, existing := range AllowedExportGcsAuthTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExportGcsAuthType.Enum value
func (v ExportGcsAuthTypeEnum) Ptr() *ExportGcsAuthTypeEnum {
	return &v
}

type NullableExportGcsAuthTypeEnum struct {
	value *ExportGcsAuthTypeEnum
	isSet bool
}

func (v NullableExportGcsAuthTypeEnum) Get() *ExportGcsAuthTypeEnum {
	return v.value
}

func (v *NullableExportGcsAuthTypeEnum) Set(val *ExportGcsAuthTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableExportGcsAuthTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableExportGcsAuthTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportGcsAuthTypeEnum(val *ExportGcsAuthTypeEnum) *NullableExportGcsAuthTypeEnum {
	return &NullableExportGcsAuthTypeEnum{value: val, isSet: true}
}

func (v NullableExportGcsAuthTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportGcsAuthTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
