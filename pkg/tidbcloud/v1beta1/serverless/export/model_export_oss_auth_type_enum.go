/*
TiDB Cloud Serverless Export Open API

TiDB Cloud Serverless Export Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// ExportOSSAuthTypeEnum  - ACCESS_KEY: The access method is access key.
type ExportOSSAuthTypeEnum string

// List of ExportOSSAuthType.Enum
const (
	EXPORTOSSAUTHTYPEENUM_ACCESS_KEY ExportOSSAuthTypeEnum = "ACCESS_KEY"
)

// All allowed values of ExportOSSAuthTypeEnum enum
var AllowedExportOSSAuthTypeEnumEnumValues = []ExportOSSAuthTypeEnum{
	"ACCESS_KEY",
}

func (v *ExportOSSAuthTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExportOSSAuthTypeEnum(value)
	for _, existing := range AllowedExportOSSAuthTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = ExportOSSAuthTypeEnum(value)
	return nil
}

// NewExportOSSAuthTypeEnumFromValue returns a pointer to a valid ExportOSSAuthTypeEnum for the value passed as argument
func NewExportOSSAuthTypeEnumFromValue(v string) *ExportOSSAuthTypeEnum {
	ev := ExportOSSAuthTypeEnum(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExportOSSAuthTypeEnum) IsValid() bool {
	for _, existing := range AllowedExportOSSAuthTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExportOSSAuthType.Enum value
func (v ExportOSSAuthTypeEnum) Ptr() *ExportOSSAuthTypeEnum {
	return &v
}

type NullableExportOSSAuthTypeEnum struct {
	value *ExportOSSAuthTypeEnum
	isSet bool
}

func (v NullableExportOSSAuthTypeEnum) Get() *ExportOSSAuthTypeEnum {
	return v.value
}

func (v *NullableExportOSSAuthTypeEnum) Set(val *ExportOSSAuthTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableExportOSSAuthTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableExportOSSAuthTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportOSSAuthTypeEnum(val *ExportOSSAuthTypeEnum) *NullableExportOSSAuthTypeEnum {
	return &NullableExportOSSAuthTypeEnum{value: val, isSet: true}
}

func (v NullableExportOSSAuthTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportOSSAuthTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
