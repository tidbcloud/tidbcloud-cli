/*
TiDB Cloud Serverless Export Open API

TiDB Cloud Serverless Export Open API

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// checks if the DownloadExportsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadExportsResponse{}

// DownloadExportsResponse struct for DownloadExportsResponse
type DownloadExportsResponse struct {
	// The download urls of the export.
	Downloads []DownloadUrl `json:"downloads,omitempty"`
}

// NewDownloadExportsResponse instantiates a new DownloadExportsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadExportsResponse() *DownloadExportsResponse {
	this := DownloadExportsResponse{}
	return &this
}

// NewDownloadExportsResponseWithDefaults instantiates a new DownloadExportsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadExportsResponseWithDefaults() *DownloadExportsResponse {
	this := DownloadExportsResponse{}
	return &this
}

// GetDownloads returns the Downloads field value if set, zero value otherwise.
func (o *DownloadExportsResponse) GetDownloads() []DownloadUrl {
	if o == nil || IsNil(o.Downloads) {
		var ret []DownloadUrl
		return ret
	}
	return o.Downloads
}

// GetDownloadsOk returns a tuple with the Downloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadExportsResponse) GetDownloadsOk() ([]DownloadUrl, bool) {
	if o == nil || IsNil(o.Downloads) {
		return nil, false
	}
	return o.Downloads, true
}

// HasDownloads returns a boolean if a field has been set.
func (o *DownloadExportsResponse) HasDownloads() bool {
	if o != nil && !IsNil(o.Downloads) {
		return true
	}

	return false
}

// SetDownloads gets a reference to the given []DownloadUrl and assigns it to the Downloads field.
func (o *DownloadExportsResponse) SetDownloads(v []DownloadUrl) {
	o.Downloads = v
}

func (o DownloadExportsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadExportsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Downloads) {
		toSerialize["downloads"] = o.Downloads
	}
	return toSerialize, nil
}

type NullableDownloadExportsResponse struct {
	value *DownloadExportsResponse
	isSet bool
}

func (v NullableDownloadExportsResponse) Get() *DownloadExportsResponse {
	return v.value
}

func (v *NullableDownloadExportsResponse) Set(val *DownloadExportsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadExportsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadExportsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadExportsResponse(val *DownloadExportsResponse) *NullableDownloadExportsResponse {
	return &NullableDownloadExportsResponse{value: val, isSet: true}
}

func (v NullableDownloadExportsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadExportsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
