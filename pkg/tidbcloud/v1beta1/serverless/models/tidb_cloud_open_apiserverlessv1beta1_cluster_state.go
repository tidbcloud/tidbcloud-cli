// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TidbCloudOpenApiserverlessv1beta1ClusterState Enum for current state of a cluster.
//
//   - STATE_UNSPECIFIED: Unspecified state.
//   - CREATING: Cluster is being created.
//   - DELETING: Cluster is being deleted.
//   - ACTIVE: Cluster is active for use.
//   - RESTORING: Cluster data is being restored.
//   - MAINTENANCE: Cluster is under maintenance.
//   - DELETED: Cluster has been deleted.
//
// swagger:model tidb_cloud_open_apiserverlessv1beta1ClusterState
type TidbCloudOpenApiserverlessv1beta1ClusterState string

func NewTidbCloudOpenApiserverlessv1beta1ClusterState(value TidbCloudOpenApiserverlessv1beta1ClusterState) *TidbCloudOpenApiserverlessv1beta1ClusterState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated TidbCloudOpenApiserverlessv1beta1ClusterState.
func (m TidbCloudOpenApiserverlessv1beta1ClusterState) Pointer() *TidbCloudOpenApiserverlessv1beta1ClusterState {
	return &m
}

const (

	// TidbCloudOpenApiserverlessv1beta1ClusterStateSTATEUNSPECIFIED captures enum value "STATE_UNSPECIFIED"
	TidbCloudOpenApiserverlessv1beta1ClusterStateSTATEUNSPECIFIED TidbCloudOpenApiserverlessv1beta1ClusterState = "STATE_UNSPECIFIED"

	// TidbCloudOpenApiserverlessv1beta1ClusterStateCREATING captures enum value "CREATING"
	TidbCloudOpenApiserverlessv1beta1ClusterStateCREATING TidbCloudOpenApiserverlessv1beta1ClusterState = "CREATING"

	// TidbCloudOpenApiserverlessv1beta1ClusterStateDELETING captures enum value "DELETING"
	TidbCloudOpenApiserverlessv1beta1ClusterStateDELETING TidbCloudOpenApiserverlessv1beta1ClusterState = "DELETING"

	// TidbCloudOpenApiserverlessv1beta1ClusterStateACTIVE captures enum value "ACTIVE"
	TidbCloudOpenApiserverlessv1beta1ClusterStateACTIVE TidbCloudOpenApiserverlessv1beta1ClusterState = "ACTIVE"

	// TidbCloudOpenApiserverlessv1beta1ClusterStateRESTORING captures enum value "RESTORING"
	TidbCloudOpenApiserverlessv1beta1ClusterStateRESTORING TidbCloudOpenApiserverlessv1beta1ClusterState = "RESTORING"

	// TidbCloudOpenApiserverlessv1beta1ClusterStateMAINTENANCE captures enum value "MAINTENANCE"
	TidbCloudOpenApiserverlessv1beta1ClusterStateMAINTENANCE TidbCloudOpenApiserverlessv1beta1ClusterState = "MAINTENANCE"

	// TidbCloudOpenApiserverlessv1beta1ClusterStateDELETED captures enum value "DELETED"
	TidbCloudOpenApiserverlessv1beta1ClusterStateDELETED TidbCloudOpenApiserverlessv1beta1ClusterState = "DELETED"
)

// for schema
var tidbCloudOpenApiserverlessv1beta1ClusterStateEnum []interface{}

func init() {
	var res []TidbCloudOpenApiserverlessv1beta1ClusterState
	if err := json.Unmarshal([]byte(`["STATE_UNSPECIFIED","CREATING","DELETING","ACTIVE","RESTORING","MAINTENANCE","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tidbCloudOpenApiserverlessv1beta1ClusterStateEnum = append(tidbCloudOpenApiserverlessv1beta1ClusterStateEnum, v)
	}
}

func (m TidbCloudOpenApiserverlessv1beta1ClusterState) validateTidbCloudOpenApiserverlessv1beta1ClusterStateEnum(path, location string, value TidbCloudOpenApiserverlessv1beta1ClusterState) error {
	if err := validate.EnumCase(path, location, value, tidbCloudOpenApiserverlessv1beta1ClusterStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this tidb cloud open apiserverlessv1beta1 cluster state
func (m TidbCloudOpenApiserverlessv1beta1ClusterState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTidbCloudOpenApiserverlessv1beta1ClusterStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this tidb cloud open apiserverlessv1beta1 cluster state based on context it is used
func (m TidbCloudOpenApiserverlessv1beta1ClusterState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
