// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1beta1CSVFormat v1beta1 c s v format
//
// swagger:model v1beta1CSVFormat
type V1beta1CSVFormat struct {

	// Whether to escape backslashes in CSV files. Default is true.
	BackslashEscape *bool `json:"backslashEscape,omitempty"`

	// Delimiter of string type variables in CSV files. Default is '"'.
	Delimiter *string `json:"delimiter,omitempty"`

	// Import CSV files of the tables with header. Default is true.
	Header *bool `json:"header,omitempty"`

	// Whether the columns in CSV files can be null. Default is false.
	NotNull *bool `json:"notNull,omitempty"`

	// Representation of null values in CSV files. Default is "\N".
	Null *string `json:"null,omitempty"`

	// Separator of each value in CSV files. Default is ','.
	Separator string `json:"separator,omitempty"`

	// Whether to trim the last separator in CSV files. Default is false.
	TrimLastSeparator *bool `json:"trimLastSeparator,omitempty"`
}

// Validate validates this v1beta1 c s v format
func (m *V1beta1CSVFormat) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1beta1 c s v format based on context it is used
func (m *V1beta1CSVFormat) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1beta1CSVFormat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1beta1CSVFormat) UnmarshalBinary(b []byte) error {
	var res V1beta1CSVFormat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
