// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1beta1ImportSourceType  - TARGET_UNSPECIFIED: The target of the import is unknown.
//   - LOCAL: Local target.
//
// swagger:model v1beta1ImportSourceType
type V1beta1ImportSourceType string

func NewV1beta1ImportSourceType(value V1beta1ImportSourceType) *V1beta1ImportSourceType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1beta1ImportSourceType.
func (m V1beta1ImportSourceType) Pointer() *V1beta1ImportSourceType {
	return &m
}

const (

	// V1beta1ImportSourceTypeLOCAL captures enum value "LOCAL"
	V1beta1ImportSourceTypeLOCAL V1beta1ImportSourceType = "LOCAL"
)

// for schema
var v1beta1ImportSourceTypeEnum []interface{}

func init() {
	var res []V1beta1ImportSourceType
	if err := json.Unmarshal([]byte(`["LOCAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1beta1ImportSourceTypeEnum = append(v1beta1ImportSourceTypeEnum, v)
	}
}

func (m V1beta1ImportSourceType) validateV1beta1ImportSourceTypeEnum(path, location string, value V1beta1ImportSourceType) error {
	if err := validate.EnumCase(path, location, value, v1beta1ImportSourceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1beta1 import source type
func (m V1beta1ImportSourceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1beta1ImportSourceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1beta1 import source type based on context it is used
func (m V1beta1ImportSourceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
