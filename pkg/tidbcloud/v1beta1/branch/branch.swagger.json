{
  "swagger": "2.0",
  "info": {
    "title": "TiDB Cloud Serverless Open API",
    "description": "TiDB Cloud Serverless Open API",
    "version": "v1beta1"
  },
  "tags": [
    {
      "name": "BranchService"
    }
  ],
  "host": "serverless.tidbapi.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/clusters/{clusterId}/branches": {
      "get": {
        "summary": "Lists information about branches.",
        "operationId": "BranchService_ListBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListBranchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The ID of the project to which the clusters belong.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Optional. Requested page size. Server may return fewer items than\nrequested. If unspecified, server will pick an appropriate default.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Optional. A token identifying a page of results the server should return.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BranchService"
        ]
      },
      "post": {
        "summary": "Creates a branch.",
        "operationId": "BranchService_CreateBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1Branch"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The cluster ID of the branch",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "branch",
            "description": "Required. The resource being created",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1Branch",
              "required": [
                "branch"
              ]
            }
          }
        ],
        "tags": [
          "BranchService"
        ]
      }
    },
    "/v1beta1/clusters/{clusterId}/branches/{branchId}": {
      "get": {
        "summary": "Gets information about a branch.",
        "operationId": "BranchService_GetBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1Branch"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The cluster ID of the branch",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "branchId",
            "description": "Required. The branch ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Optional. The view of the branch to return. Defaults to FULL\n\n - BRANCH_VIEW_UNSPECIFIED: BRANCH_VIEW_UNSPECIFIED Not specified, equivalent to BASIC.\n - BASIC: Basic response contains basic information for a branch.\n - FULL: FULL response contains all detailed information for a branch.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ]
          }
        ],
        "tags": [
          "BranchService"
        ]
      },
      "delete": {
        "summary": "Deletes a branch.",
        "operationId": "BranchService_DeleteBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1Branch"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "Required. The cluster ID of the branch",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "branchId",
            "description": "Required. The branch ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BranchService"
        ]
      }
    }
  },
  "definitions": {
    "BranchEndpoints": {
      "type": "object",
      "properties": {
        "public": {
          "$ref": "#/definitions/EndpointsPublic",
          "x-nullable": true,
          "description": "Optional . Public Endpoint for this branch."
        },
        "private": {
          "$ref": "#/definitions/EndpointsPrivate",
          "x-nullable": true,
          "description": "Optional . Private Endpoint for this branch."
        }
      },
      "description": "Message for the Endpoints for this branch."
    },
    "BranchUsage": {
      "type": "object",
      "properties": {
        "requestUnit": {
          "type": "string",
          "format": "int64",
          "description": "Output Only. The latest value of Request Unit Metric for this cluster.",
          "readOnly": true
        },
        "rowStorage": {
          "type": "number",
          "format": "double",
          "description": "Output Only. The latest value of Row Storage Metric for this cluster.",
          "readOnly": true
        },
        "columnarStorage": {
          "type": "number",
          "format": "double",
          "description": "Output Only. The latest value of Columnar Storage Metric for this cluster.",
          "readOnly": true
        }
      },
      "description": "Message for usage metrics for this cluster."
    },
    "EndpointsPrivate": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Output Only. Host Name of Public Endpoint.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Output Only. Port of Public Endpoint.",
          "readOnly": true
        },
        "aws": {
          "$ref": "#/definitions/PrivateAWS",
          "title": "Message for AWS",
          "readOnly": true
        },
        "gcp": {
          "$ref": "#/definitions/PrivateGCP",
          "title": "Message for GCP",
          "readOnly": true
        }
      },
      "description": "Message for Private Endpoint for this branch."
    },
    "EndpointsPublic": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "title": "Output Only. Host name of Public Endpoint",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Output Only. Port of Public Endpoint",
          "readOnly": true
        },
        "disabled": {
          "type": "boolean",
          "title": "Output, Disable Public Endpoint"
        }
      },
      "description": "Message for Public Endpoint for this branch."
    },
    "PrivateAWS": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "title": "Output Only. Service Name for Private Link Service.\n(-- api-linter: core::0122::name-suffix=disabled --)",
          "readOnly": true
        },
        "availabilityZone": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output Only. Availability Zone for Private Link Service.",
          "readOnly": true
        }
      },
      "description": "Message for AWS Private Link Service."
    },
    "PrivateGCP": {
      "type": "object",
      "properties": {
        "serviceAttachmentName": {
          "type": "string",
          "description": "Output Only. Target Service Account for Private Link Service.",
          "readOnly": true
        }
      },
      "description": "Message for GCP Private Link Service."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1Branch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output Only. The name of the resource.",
          "readOnly": true
        },
        "branchId": {
          "type": "string",
          "description": "Output only. The system-generated ID of the resource.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Required. User-settable and human-readable display name for the branch."
        },
        "clusterId": {
          "type": "string",
          "description": "Output only. The cluster ID of this branch.",
          "readOnly": true
        },
        "parentId": {
          "type": "string",
          "description": "OPTIONAL. The parent ID of this branch."
        },
        "createdBy": {
          "type": "string",
          "description": "Output only. The creator of the branch.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/v1beta1BranchState",
          "description": "Output only. The state of this branch.",
          "readOnly": true
        },
        "endpoints": {
          "$ref": "#/definitions/BranchEndpoints",
          "x-nullable": true,
          "description": "Optional. The endpoints of this branch. Only display in FULL view."
        },
        "userPrefix": {
          "type": "string",
          "x-nullable": true,
          "description": "Output only. User name prefix of this branch. Only display in FULL view. For each TiDB Serverless branch,\nTiDB Cloud generates a unique prefix to distinguish it from other branches.\nWhenever you use or set a database user name, you must include the prefix in the user name.",
          "readOnly": true
        },
        "usage": {
          "$ref": "#/definitions/BranchUsage",
          "x-nullable": true,
          "description": "OPTIONAL. Usage metrics of this branch. Only display in FULL view."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "title": "Output only. Create timestamp",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "title": "Output only. Update timestamp",
          "readOnly": true
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The annotations of this branch. Only display in FULL view."
        },
        "parentDisplayName": {
          "type": "string",
          "description": "OPTIONAL. The parent display name of this branch."
        }
      },
      "title": "Message for branch",
      "required": [
        "displayName"
      ]
    },
    "v1beta1BranchState": {
      "type": "string",
      "enum": [
        "CREATING",
        "ACTIVE",
        "DELETED",
        "MAINTENANCE"
      ],
      "description": "Output Only. Branch State.\n\n - STATE_UNSPECIFIED: The state of the branch is unknown.\n - CREATING: The branch is being created.\n - ACTIVE: The branch is active and running.\n - DELETED: The branch is being deleted.\n - MAINTENANCE: The branch is under maintenance."
    },
    "v1beta1BranchView": {
      "type": "string",
      "enum": [
        "BASIC",
        "FULL"
      ],
      "description": "View on branch. Pass this enum to control which subsets of fields to get.\n\n - BRANCH_VIEW_UNSPECIFIED: BRANCH_VIEW_UNSPECIFIED Not specified, equivalent to BASIC.\n - BASIC: Basic response contains basic information for a branch.\n - FULL: FULL response contains all detailed information for a branch."
    },
    "v1beta1ListBranchesResponse": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Branch"
          },
          "title": "The list of branches"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "totalSize": {
          "type": "integer",
          "format": "int64",
          "title": "Total number of branches"
        }
      },
      "title": "Message for response to list branches"
    }
  }
}