{
  "swagger": "2.0",
  "info": {
    "title": "TiDB Cloud Dedicated API",
    "description": "*TiDB Cloud API is in beta.*\n\nThis API manages [TiDB Cloud Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier/#tidb-cloud-dedicated) clusters. For TiDB Cloud Starter or TiDB Cloud Essential clusters, use the [TiDB Cloud Starter and Essential API](). For more information about TiDB Cloud API, see [TiDB Cloud API Overview](https://docs.pingcap.com/tidbcloud/api-overview/).\n\n# Overview\n\nThe TiDB Cloud API is a [REST interface](https://en.wikipedia.org/wiki/Representational_state_transfer) that provides you with programmatic access to manage clusters and related resources within TiDB Cloud.\n\nThe API has the following features:\n\n- **JSON entities.** All entities are expressed in JSON.\n- **HTTPS-only.** You can only access the API via HTTPS, ensuring all the data sent over the network is encrypted with TLS.\n- **Key-based access and digest authentication.** Before you access TiDB Cloud API, you must generate an API key. All requests are authenticated through [HTTP Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication), ensuring the API key is never sent over the network.\n\n# Get Started\n\nThis guide helps you make your first API call to TiDB Cloud API. You'll learn how to authenticate a request, build a request, and interpret the response.\n\n## Prerequisites\n\nTo complete this guide, you need to perform the following tasks:\n\n- Create a [TiDB Cloud account](https://tidbcloud.com/free-trial)\n- Install [curl](https://curl.se/)\n\n## Step 1. Create an API key\n\nTo create an API key, log in to your TiDB Cloud console. Navigate to the [**API Keys**](https://tidbcloud.com/org-settings/api-keys) page of your organization, and create an API key.\n\nAn API key contains a public key and a private key. Copy and save them in a secure location. You will need to use the API key later in this guide.\n\nFor more details about creating API key, refer to [API Key Management](#section/Authentication/API-Key-Management).\n\n## Step 2. Make your first API call\n\n### Build an API call\n\nTiDB Cloud API call consists of the following components:\n\n- **A host**. The host for TiDB Cloud API is \u003chttps://dedicated.tidbapi.com\u003e.\n- **An API Key**. The public key and the private key are required for authentication.\n- **A request**. When submitting data to a resource via `POST`, `PATCH`, or `PUT`, you must submit your payload in JSON.\n\nIn this guide, you call the [List clusters](#tag/Cluster/operation/ClusterService_ListClusters) endpoint. For the detailed description of the endpoint, see the [API reference](#tag/Cluster/operation/ClusterService_ListClusters).\n\n### Call an API endpoint\n\nTo get all clusters in your organization, run the following command in your terminal. Remember to change `YOUR_PUBLIC_KEY` to your public key and `YOUR_PRIVATE_KEY` to your private key.\n\n```shell\ncurl --digest \\\n --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \\\n --request GET \\\n --url 'https://dedicated.tidbapi.com/v1beta1/clusters'\n```\n\n## Step 3. Check the response\n\nAfter making the API call, if the status code in response is `200` and you see details about all clusters in your organization, your request is successful.\n\n# Authentication\n\nThe TiDB Cloud API uses [HTTP Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication). It protects your private key from being sent over the network. For more details about HTTP Digest Authentication, refer to the [IETF RFC](https://datatracker.ietf.org/doc/html/rfc7616).\n\n## API key overview\n\n- The API key contains a public key and a private key, which act as the username and password required in the HTTP Digest Authentication. The private key only displays upon the key creation.\n- The API key belongs to your organization and acts as the `Organization Owner` role. You can check [permissions of owner](https://docs.pingcap.com/tidbcloud/manage-user-access#configure-member-roles).\n- You must provide the correct API key in every request. Otherwise, the TiDB Cloud responds with a `401` error.\n\n## API key management\n\n### Create an API key\n\nOnly the **owner** of an organization can create an API key.\n\nTo create an API key in an organization, perform the following steps:\n\n1. In the [TiDB Cloud console](https://tidbcloud.com), switch to your target organization using the combo box in the upper-left corner.\n2. In the left navigation pane, click **Organization Settings** \u003e **API Keys**.\n3. On the **API Keys** page, click **Create API Key**.\n4. Enter a description for your API key. The role of the API key is always `Organization Owner` currently.\n5. Click **Next**. Copy and save the public key and the private key.\n6. Make sure that you have copied and saved the private key in a secure location. The private key only displays upon the creation. After leaving this page, you will not be able to get the full private key again.\n7. Click **Done**.\n\n### View details of an API key\n\nTo view details of an API key, perform the following steps:\n\n1. In the [TiDB Cloud console](https://tidbcloud.com), switch to your target organization using the combo box in the upper-left corner.\n2. In the left navigation pane, click **Organization Settings** \u003e **API Keys**.\n3. You can view the details of the API keys on the page.\n\n### Edit an API key\n\nOnly the **owner** of an organization can modify an API key.\n\nTo edit an API key in an organization, perform the following steps:\n\n1. In the [TiDB Cloud console](https://tidbcloud.com), switch to your target organization using the combo box in the upper-left corner.\n2. In the left navigation pane, click **Organization Settings** \u003e **API Keys**.\n3. On the **API Keys** page, click **...** in the API key row that you want to change, and then click **Edit**.\n4. You can update the API key description.\n5. Click **Update**.\n\n### Delete an API key\n\nOnly the **owner** of an organization can delete an API key.\n\nTo delete an API key in an organization, perform the following steps:\n\n1. In the [TiDB Cloud console](https://tidbcloud.com), switch to your target organization using the combo box in the upper-left corner.\n2. In the left navigation pane, click **Organization Settings** \u003e **API Keys**.\n3. On the **API Keys** page, click **...** in the API key row that you want to delete, and then click **Delete**.\n4. Click **I understand, delete it.**\n\n# Rate Limiting\n\nThe TiDB Cloud API allows up to 100 requests per minute per API key. If you exceed the rate limit, the API returns a `429` error. For more quota, you can [submit a request](https://support.pingcap.com/hc/en-us/requests/new?ticket_form_id=7800003722519) to contact our support team.\n\nEach API request returns the following headers about the limit.\n\n- `X-Ratelimit-Limit-Minute`: The number of requests allowed per minute. It is 100 currently.\n- `X-Ratelimit-Remaining-Minute`: The number of remaining requests in the current minute. When it reaches `0`, the API returns a `429` error and indicates that you exceed the rate limit.\n- `X-Ratelimit-Reset`: The time in seconds at which the current rate limit resets.\n\nIf you exceed the rate limit, an error response returns like this.\n\n```\n\u003e HTTP/2 429\n\u003e date: Fri, 22 Jul 2022 05:28:37 GMT\n\u003e content-type: application/json\n\u003e content-length: 66\n\u003e x-ratelimit-reset: 23\n\u003e x-ratelimit-remaining-minute: 0\n\u003e x-ratelimit-limit-minute: 100\n\u003e x-kong-response-latency: 2\n\u003e server: kong/2.8.1\n\n\u003e {\"details\":[],\"code\":49900007,\"message\":\"The request exceeded the limit of 100 times per apikey per minute. For more quota, please contact us: https://support.pingcap.com/hc/en-us/requests/new?ticket_form_id=7800003722519\"}\n```\n\n# API Changelog\n\nThis changelog lists all changes to the TiDB Cloud API.\n\n\u003c!-- In reverse chronological order --\u003e\n\n## 20250812\n\n- Initial release of the TiDB Cloud Dedicated API, including the following resources and endpoints:\n\t* Cluster\r\n\t\t* [List clusters](#tag/Cluster/operation/ClusterService_ListClusters)\r\n\t\t* [Create a cluster](#tag/Cluster/operation/ClusterService_CreateCluster)\r\n\t\t* [Get a cluster](#tag/Cluster/operation/ClusterService_GetCluster)\r\n\t\t* [Delete a cluster](#tag/Cluster/operation/ClusterService_DeleteCluster)\r\n\t\t* [Update a cluster](#tag/Cluster/operation/ClusterService_UpdateCluster)\r\n\t\t* [Pause a cluster](#tag/Cluster/operation/ClusterService_PauseCluster)\r\n\t\t* [Resume a cluster](#tag/Cluster/operation/ClusterService_ResumeCluster)\r\n\t\t* [Reset the root password of a cluster](#tag/Cluster/operation/ClusterService_ResetRootPassword)\r\n\t\t* [List node quotas for your organization](#tag/Cluster/operation/ClusterService_ShowNodeQuota)\r\n\t\t* [Get log redaction policy](#tag/Cluster/operation/ClusterService_GetLogRedactionPolicy)\r\n\t* Region\r\n\t\t* [List regions](#tag/Region/operation/RegionService_ListRegions)\r\n\t\t* [Get a region](#tag/Region/operation/RegionService_GetRegion)\r\n\t\t* [List cloud providers](#tag/Region/operation/RegionService_ShowCloudProviders)\r\n\t\t* [List node specs](#tag/Region/operation/RegionService_ListNodeSpecs)\r\n\t\t* [Get a node spec](#tag/Region/operation/RegionService_GetNodeSpec)\r\n\t* Private Endpoint Connection\r\n\t\t* [Get private link service for a TiDB node group](#tag/Private-Endpoint-Connection/operation/PrivateEndpointConnectionService_GetPrivateLinkService)\r\n\t\t* [Create a private endpoint connection](#tag/Private-Endpoint-Connection/operation/PrivateEndpointConnectionService_CreatePrivateEndpointConnection)\r\n\t\t* [List private endpoint connections](#tag/Private-Endpoint-Connection/operation/PrivateEndpointConnectionService_ListPrivateEndpointConnections)\r\n\t\t* [Get a private endpoint connection](#tag/Private-Endpoint-Connection/operation/PrivateEndpointConnectionService_GetPrivateEndpointConnection)\r\n\t\t* [Delete a private endpoint connection](#tag/Private-Endpoint-Connection/operation/PrivateEndpointConnectionService_DeletePrivateEndpointConnection)\r\n\t* Import\r\n\t\t* [List import tasks](#tag/Import/operation/ListImports)\r\n\t\t* [Create an import task](#tag/Import/operation/CreateImport)\r\n\t\t* [Get an import task](#tag/Import/operation/GetImport)\r\n\t\t* [Cancel an import task](#tag/Import/operation/CancelImport)\r\n",
    "version": "v1beta1"
  },
  "tags": [
    {
      "name": "ClusterService"
    },
    {
      "name": "RegionService"
    },
    {
      "name": "TidbNodeGroupService"
    },
    {
      "name": "PrivateEndpointConnectionService"
    },
    {
      "name": "NetworkContainerService"
    },
    {
      "name": "MaintenanceService"
    },
    {
      "name": "DatabaseAuditLogService"
    }
  ],
  "host": "dedicated.tidbapi.com",
  "basePath": "/v1beta1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/clusters": {
      "get": {
        "summary": "List clusters",
        "description": "Lists all clusters in your organization. You can filter results by project, region, cluster state, or specific cluster IDs.",
        "operationId": "ClusterService_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1ListClustersResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "The ID of the project. If not specified, the project ID of the default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterIds",
            "description": "A list of cluster IDs. If specified, only clusters matching these IDs are returned.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "regionIds",
            "description": "A list of region IDs. If specified, only clusters in these regions are returned.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "clusterStates",
            "description": "A list of cluster states. If specified, only clusters in these states are returned.\n\n`\"UPGRADING\"`, `\"IMPORTING\"`, `\"MODIFYING\"`, `\"PAUSING\"`, `\"PAUSED\"`, and `\"RESUMING\"` states are only available for [TiDB Cloud Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier/#tidb-cloud-dedicated) clusters.\n\n - CREATING: Cluster is being created.\n - DELETING: Cluster is being deleted.\n - ACTIVE: Cluster is active for use.\n - RESTORING: Cluster data is being restored.\n - MAINTENANCE: Cluster is under maintenance.\n - DELETED: Cluster has been deleted.\n - INACTIVE: Cluster is not active, but not being deleted.\n - UPGRADING: Cluster is being updated.\nOnly for Dedicated Cluster.\n - IMPORTING: Cluster is being imported.\nOnly for Dedicated Cluster.\n - MODIFYING: Cluster is being modified.\nOnly for Dedicated Cluster.\n - PAUSING: Cluster is being paused.\nOnly for Dedicated Cluster.\n - PAUSED: Cluster is paused.\nOnly for Dedicated Cluster.\n - RESUMING: Cluster is resuming.\nOnly for Dedicated Cluster.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CREATING",
                "DELETING",
                "ACTIVE",
                "RESTORING",
                "MAINTENANCE",
                "DELETED",
                "INACTIVE",
                "UPGRADING",
                "IMPORTING",
                "MODIFYING",
                "PAUSING",
                "PAUSED",
                "RESUMING"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of clusters to return. If not specified, at most 10 clusters will be returned. The maximum value is `100`. Values greater than `100` are set to `100`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": "10"
          },
          {
            "name": "pageToken",
            "description": "The pagination token received from a previous [List clusters](#tag/ClusterService/operation/ClusterService_ListClusters) request. Use this token to retrieve the next page of results.\n\n**Note**: When paginating, all other parameters must match the original request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of clusters to skip before returning results. If the value exceeds the total number of clusters, the response is `200` with an empty list and no `nextPageToken`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "post": {
        "summary": "Create a cluster",
        "description": "Creates a new [TiDB Cloud Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier/#tidb-cloud-dedicated) cluster. Before creating a TiDB Cloud Dedicated cluster, you must set a [Project CIDR on TiDB Cloud console](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections/#prerequisite-set-a-cidr-for-a-region).",
        "operationId": "ClusterService_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster",
              "description": "The cluster to create.",
              "required": [
                "cluster"
              ]
            }
          },
          {
            "name": "validateOnly",
            "description": "If set to `true`, the request is validated but not executed. Defaults to `false`.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}": {
      "get": {
        "summary": "Get a cluster",
        "description": "Retrieves details of a specific cluster.",
        "operationId": "ClusterService_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "delete": {
        "summary": "Delete a cluster",
        "description": "Deletes a cluster by `clusterId`.",
        "operationId": "ClusterService_DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validateOnly",
            "description": "If set to `true`, the request is validated but not executed. Defaults to `false`.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{cluster.clusterId}": {
      "patch": {
        "summary": "Update a cluster",
        "description": "Updates the configuration of a specific cluster. You can modify the following fields: `tidbNodeSetting`, `tikvNodeSetting`, `tiflashNodeSetting` and `displayName`.",
        "operationId": "ClusterService_UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster.clusterId",
            "description": "The ID of the cluster to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "The updated cluster configuration.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tidbNodeSetting": {
                  "description": "The TiDB node setting for updating cluster. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/v1beta1UpdateClusterRequestTidbNodeSetting"
                    }
                  ]
                },
                "tikvNodeSetting": {
                  "description": "The TiKV node setting for updating cluster. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/v1beta1UpdateClusterRequestStorageNodeSetting"
                    }
                  ]
                },
                "tiflashNodeSetting": {
                  "example": {
                    "nodeCount": 3,
                    "nodeSpecKey": "16C128G",
                    "storageSizeGi": 500,
                    "storageType": "Basic"
                  },
                  "description": "The TiFlash node setting for updating cluster. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/v1beta1UpdateClusterRequestStorageNodeSetting"
                    }
                  ]
                },
                "displayName": {
                  "type": "string",
                  "example": "My Cluster",
                  "description": "The display name of the cluster."
                },
                "labels": {
                  "type": "object",
                  "example": {},
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The labels of the cluster. \n\n**Note**: Currently, does not support `labels` updates.",
                  "title": "map\u003cstring, string\u003e"
                }
              },
              "title": "The updated cluster configuration."
            }
          },
          {
            "name": "validateOnly",
            "description": "If set to `true`, the request is validated but not executed. Defaults to `false`.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}:pauseCluster": {
      "post": {
        "summary": "Pause a cluster",
        "description": "Pauses a cluster by ID.",
        "operationId": "ClusterService_PauseCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1PauseClusterResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster to pause.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}:resumeCluster": {
      "post": {
        "summary": "Resume a cluster",
        "description": "Resumes a paused cluster. Only clusters in the `PAUSED` state can be resumed.",
        "operationId": "ClusterService_ResumeCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ResumeClusterResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster to resume.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}:resetRootPassword": {
      "post": {
        "summary": "Reset the root password of a cluster",
        "description": "Sets a new password for the cluster's root user. The new password is not returned in the response for security reasons, so save your password in a secure location.\n\nThe cluster must be in the `READY` state. If the cluster is not `READY`, wait until it is before retrying.",
        "operationId": "ClusterService_ResetRootPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ResetRootPasswordResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to reset the root password.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterServiceResetRootPasswordBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}/nodeInstances": {
      "get": {
        "summary": "List node instances in a cluster",
        "description": "Lists node instances in a cluster.",
        "operationId": "ClusterService_ListNodeInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListNodeInstancesResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to list node instances.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentType",
            "description": "The component type of the node instances. If specified, only node instances of the specified component type will be returned.\n- `TIDB`: TiDB node component.\n- `TIKV`: TiKV node instances.\n- `TIFLASH`: TiFlash node instances.\n- `PD`: PD node instances.\n- `PROXY`: Proxy node instances.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TIKV",
              "TIDB",
              "TIFLASH",
              "PD",
              "TIPROXY"
            ]
          },
          {
            "name": "pageSize",
            "description": "The maximum number of node instances to return. The service may return fewer than this value.\nIf unspecified, at most X node instances will be returned.\nThe maximum value is X; values above X will be coerced to X.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListNodeInstances` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListNodeInstances` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}/nodeInstances/{instanceId}": {
      "get": {
        "summary": "Get a node instance",
        "description": "Retrieves a node instance in a cluster.",
        "operationId": "ClusterService_GetNodeInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1NodeInstance"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to get the node instance.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "description": "The ID of the node instance to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters:showNodeQuota": {
      "get": {
        "summary": "List node quotas for your organization",
        "description": "Lists the node quotas for your organization, including the maximum number of nodes allowed for each component type.",
        "operationId": "ClusterService_ShowNodeQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ShowNodeQuotaResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{clusterId}/logRedactionPolicy": {
      "get": {
        "summary": "Get log redaction policy",
        "description": "Gets the log redaction policy for a cluster.",
        "operationId": "ClusterService_GetLogRedactionPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1LogRedactionPolicy"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to get the log redaction policy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/clusters/{logRedactionPolicy.clusterId}/logRedactionPolicy": {
      "patch": {
        "summary": "Update log redaction policy",
        "description": "Updates the log redaction policy for the specified cluster. The log redaction policy determines whether sensitive information is redacted from logs. The default policy is to redact sensitive information from logs.",
        "operationId": "ClusterService_UpdateLogRedactionPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1LogRedactionPolicy"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "logRedactionPolicy.clusterId",
            "description": "The ID of the cluster to which the log redaction policy applies.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "logRedactionPolicy",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "redactLog": {
                  "type": "boolean",
                  "x-nullable": true,
                  "example": true,
                  "default": "true",
                  "description": "Indicates whether to redact sensitive information in logs.\n\nThe default policy is `true`, which means sensitive data is redacted in logs.\n\n**Note**: Disabling log redaction might expose sensitive information and increase the risk of data leakage. Ensure that you understand and acknowledge this risk before proceeding. Remember to re-enable it as soon as you complete your diagnostic or maintenance task."
                }
              }
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/regions": {
      "get": {
        "summary": "List regions",
        "description": "Lists the regions where you can create a cluster, across all supported cloud providers.",
        "operationId": "RegionService_ListRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1ListRegionsResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cloudProvider",
            "description": "The cloud provider where the region is located. If specified, only regions of the specified cloud provider are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "description": "The ID of the project to list regions for. If not specified, the project ID of the default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of regions to return. If not specified, at most 20 regions will be returned. The maximum value is `100`. Values greater than `100` are set to `100`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": "20"
          },
          {
            "name": "pageToken",
            "description": "The pagination token received from a previous [List regions](#tag/Region/operation/RegionService_ListRegions) request. Use this token to retrieve the next page of results.\n\n**Note**: When paginating, all other parameters must match the original request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of regions to skip before returning results. If the value exceeds the total number of clusters, the response is `200` with an empty list and no `nextPageToken`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "RegionService"
        ]
      }
    },
    "/regions/{regionId}": {
      "get": {
        "summary": "Get a region",
        "description": "Retrieves details of a specific region by region ID.",
        "operationId": "RegionService_GetRegion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonv1beta1Region"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "regionId",
            "description": "The ID of the region to retrieve, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-east-1`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "description": "The ID of the project for which to retrieve the region. If not specified, the project ID of the default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegionService"
        ]
      }
    },
    "/regions:showCloudProviders": {
      "get": {
        "summary": "List cloud providers",
        "description": "Lists the cloud providers available for creating a cluster.",
        "operationId": "RegionService_ShowCloudProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ShowCloudProvidersResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "The ID of the project. If not specified, the project ID of the default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegionService"
        ]
      }
    },
    "/regions/{regionId}/nodeSpecs": {
      "get": {
        "summary": "List node specs",
        "description": "Retrieves a paginated list of node specifications (specs) available for creating or scaling a cluster in the specified region. You can filter the results using the `componentType`, `projectId`, or `clusterId` parameter.",
        "operationId": "RegionService_ListNodeSpecs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListNodeSpecsResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "regionId",
            "description": "The ID of the region, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-east-1`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentType",
            "description": "Filters the results to include only node specs for the specified component type.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TIKV",
              "TIDB",
              "TIFLASH",
              "PD",
              "TIPROXY"
            ]
          },
          {
            "name": "projectId",
            "description": "Filters the results to include only node specs available to the specified project. If not specified, the project ID of the default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "Filters the results to include only node specs available to the specified cluster. If not specified, all available node specs are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of node specs to return. If not specified, at most 10 node specs will be returned. The maximum value is `100`. Values greater than `100` are set to `100`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": "10"
          },
          {
            "name": "pageToken",
            "description": "The pagination token received from a previous [List node specs](#tag/Region/operation/RegionService_ListNodeSpecs) request. Use this token to retrieve the next page of results.\n\n**Note**: When paginating, all other parameters must match the original request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of node specs to skip before returning results. If the value exceeds the total number of clusters, the response is `200` with an empty list and no `nextPageToken`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "RegionService"
        ]
      }
    },
    "/regions/{regionId}/componentTypes/{componentType}/nodeSpecs/{nodeSpecKey}": {
      "get": {
        "summary": "Get a node spec",
        "description": "Retrieves details of a node spec used for creating or scaling a cluster.",
        "operationId": "RegionService_GetNodeSpec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1NodeSpec"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "regionId",
            "description": "The region ID of the node spec to retrieve, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-east-1`. If not specified, the default region ID is used.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentType",
            "description": "Filters the results to include only node specs for the specified component type.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "TIKV",
              "TIDB",
              "TIFLASH",
              "PD",
              "TIPROXY"
            ]
          },
          {
            "name": "nodeSpecKey",
            "description": "The key of the node spec to retrieve. For example, `8C32G`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "description": "The ID of the project for which to retrieve the node spec. If not specified, the project ID of the default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The ID of the cluster. If specified, only node specs that are available to the specified cluster are returned. If not specified, all available node specs are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegionService"
        ]
      }
    },
    "/clusters/{tidbNodeGroup.clusterId}/tidbNodeGroups": {
      "post": {
        "summary": "Create a TiDB Node Group",
        "description": "Creates a new TiDB Node Group in the specified cluster. The TiDB Node Group is used to scale the TiDB nodes in the cluster.",
        "operationId": "TidbNodeGroupService_CreateTidbNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroup"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tidbNodeGroup.clusterId",
            "description": "The ID of the cluster that the TiDB node group belongs to.\n\n- This field is **optional** when creating a cluster with the default TiDB group.\n\n- This field is **required** when creating a non-default TiDB group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroup",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "tidbNodeGroups/1",
                  "description": "The resource name of the TiDB group, in the format of `tidbNodeGroups/{tidb_node_group_id}`.",
                  "readOnly": true
                },
                "tidbNodeGroupId": {
                  "type": "string",
                  "example": "1",
                  "description": "The unique ID of the TiDB group.",
                  "readOnly": true
                },
                "displayName": {
                  "type": "string",
                  "example": "DefaultGroup",
                  "description": "The display name of the TiDB group."
                },
                "nodeCount": {
                  "type": "integer",
                  "format": "int32",
                  "example": 2,
                  "description": "The number of TiDB nodes in the TiDB group. It must be greater than or equal to `1`.",
                  "minimum": 1
                },
                "endpoints": {
                  "type": "array",
                  "example": [],
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupEndpoint"
                  },
                  "description": "The endpoints of the TiDB group.",
                  "title": "Endpoint",
                  "readOnly": true
                },
                "nodeSpecKey": {
                  "type": "string",
                  "example": "8C32G",
                  "description": "The node spec key of the TiDB group. For example, `8C32G`."
                },
                "nodeSpecVersion": {
                  "type": "string",
                  "description": "The version tag of the node spec resource. The performance and price of the component may vary based on the version tag.",
                  "readOnly": true
                },
                "nodeSpecDisplayName": {
                  "type": "string",
                  "example": "8 vCPU, 32 GiB",
                  "description": "The display name of the node spec of the TiDB group. For example, `8 vCPU, 32 GiB`.",
                  "readOnly": true
                },
                "isDefaultGroup": {
                  "type": "boolean",
                  "example": false,
                  "description": "Indicates whether this is the default TiDB node group.",
                  "readOnly": true
                },
                "state": {
                  "example": "ACTIVE",
                  "description": "The current state of the TiDB group.",
                  "readOnly": true,
                  "allOf": [
                    {
                      "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupState"
                    }
                  ]
                },
                "nodeChangingProgress": {
                  "description": "The progress of node configuration changes.",
                  "title": "NodeChangingProgress",
                  "readOnly": true,
                  "allOf": [
                    {
                      "$ref": "#/definitions/ClusterNodeChangingProgress"
                    }
                  ]
                },
                "tiproxySetting": {
                  "description": "Configures TiProxy settings for this TiDB group. If not specified, the default TiProxy settings is used.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupTiProxySetting"
                    }
                  ]
                },
                "tiproxyNodeChangingProgress": {
                  "description": "The progress of TiProxy node configuration changes.",
                  "readOnly": true,
                  "allOf": [
                    {
                      "$ref": "#/definitions/ClusterNodeChangingProgress"
                    }
                  ]
                }
              },
              "required": [
                "nodeCount"
              ]
            }
          },
          {
            "name": "validateOnly",
            "description": "Indicates whether the request is a dry run. If set to true, the request will be validated but not executed.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups": {
      "get": {
        "summary": "List TiDB Node Groups",
        "operationId": "TidbNodeGroupService_ListTidbNodeGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ListTidbNodeGroupsResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to list TiDB groups.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of TiDB groups to return. The service may return fewer than this value.\nIf unspecified, at most X TiDB groups will be returned.\nThe maximum value is X; values above X will be coerced to X.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListTidbNodeGroups` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListTidbNodeGroups` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no `nextPageToken`.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{tidbNodeGroupId}": {
      "get": {
        "summary": "Get a TiDB Node Group",
        "operationId": "TidbNodeGroupService_GetTidbNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroup"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to get the TiDB Node Group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "The ID of the TiDB Node Group to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      },
      "delete": {
        "summary": "Delete a TiDB Node Group",
        "operationId": "TidbNodeGroupService_DeleteTidbNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster from which to delete the TiDB Node Group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "The ID of the TiDB Node Group to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validateOnly",
            "description": "Indicates whether the request is a dry run. If set to true, the request will be validated but not executed.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      }
    },
    "/clusters/{tidbNodeGroup.clusterId}/tidbNodeGroups/{tidbNodeGroup.tidbNodeGroupId}": {
      "patch": {
        "summary": "Update a TiDB Node Group",
        "operationId": "TidbNodeGroupService_UpdateTidbNodeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroup"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tidbNodeGroup.clusterId",
            "description": "The ID of the cluster to which the TiDB Node Group belongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroup.tidbNodeGroupId",
            "description": "The ID of the TiDB Node Group to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroup",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "The display name of the TiDB Node Group."
                },
                "nodeCount": {
                  "type": "integer",
                  "format": "int32",
                  "x-nullable": true,
                  "description": "The node count of the TiDB Node Group."
                },
                "tiproxySetting": {
                  "description": "The TiProxy setting of the TiDB Node Group. If not specified, the default TiProxy setting will be used.",
                  "title": "TiProxySetting",
                  "allOf": [
                    {
                      "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupTiProxySetting"
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "validateOnly",
            "description": "Indicates whether the request is a dry run. If set to true, the request will be validated but not executed.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{tidbNodeGroupId}/publicEndpointSetting": {
      "get": {
        "summary": "Get the public endpoint setting of a TiDB Node Group",
        "operationId": "TidbNodeGroupService_GetPublicEndpointSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1PublicEndpointSetting"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to get the public endpoint setting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "The ID of the TiDB Node Group for which to get the public endpoint setting.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{publicEndpointSetting.tidbNodeGroupId}/publicEndpointSetting": {
      "patch": {
        "summary": "Update the public endpoint setting of a TiDB Node Group",
        "operationId": "TidbNodeGroupService_UpdatePublicEndpointSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1PublicEndpointSetting"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to update the public endpoint setting.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicEndpointSetting.tidbNodeGroupId",
            "description": "The ID of the TiDB group to which the public endpoint setting belongs. If set to \"-\", the default TiDB group will be used.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "publicEndpointSetting",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the public endpoint setting resource formatted as: `tidbNodeGroups/{tidb_node_group_id}/publicEndpointSetting`.",
                  "readOnly": true
                },
                "enabled": {
                  "type": "boolean",
                  "x-nullable": true,
                  "description": "Indicates whether the public endpoint is enabled for the TiDB group."
                },
                "ipAccessList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1beta1PublicEndpointSettingIpAccessList"
                  },
                  "description": "A list of IP access control lists for the public endpoint. If not set, all IPs are allowed to access the public endpoint.",
                  "title": "IpAccessList"
                }
              }
            }
          },
          {
            "name": "validateOnly",
            "description": "Indicates whether the request is a dry run. If set to true, the request will be validated but not executed.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TidbNodeGroupService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{tidbNodeGroupId}/privateLinkService": {
      "get": {
        "summary": "Get private link service for a TiDB node group",
        "description": "Retrieves the private link service configuration for a [TiDB node group](https://docs.pingcap.com/tidbcloud/tidb-node-group-overview/). You can the private link service to establish private endpoint connections to your TiDB cluster.",
        "operationId": "PrivateEndpointConnectionService_GetPrivateLinkService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1PrivateLinkService"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to get the private link service.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "The ID of the TiDB node group for which to get the private link service.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PrivateEndpointConnectionService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{privateEndpointConnection.tidbNodeGroupId}/privateEndpointConnections": {
      "post": {
        "summary": "Create a private endpoint connection",
        "description": "Creates a private endpoint connection for a TiDB node group. For more information, see the following documents:\n\n- [Connect via Private Endpoint with AWS](https://docs.pingcap.com/tidbcloud/set-up-private-endpoint-connections/) \n- [Connect via Private Endpoint with Azure](https://docs.pingcap.com/tidbcloud/set-up-private-endpoint-connections-on-azure/) \n- [Connect via Private Endpoint with Google Cloud](https://docs.pingcap.com/tidbcloud/set-up-private-endpoint-connections-on-google-cloud/)",
        "operationId": "PrivateEndpointConnectionService_CreatePrivateEndpointConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1PrivateEndpointConnection"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection.tidbNodeGroupId",
            "description": "The ID of the TiDB group to which the private endpoint connection belongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "tidbNodeGroups/1/privateEndpointConnections/1234567890",
                  "description": "The name of the private endpoint connection, in the format of `tidbNodeGroups/{tidb_node_group_id}/privateEndpointConnections/{private_endpoint_connection_id}`.",
                  "readOnly": true
                },
                "privateEndpointConnectionId": {
                  "type": "string",
                  "example": "1234567890",
                  "description": "The unique ID of the private endpoint connection.",
                  "readOnly": true
                },
                "clusterId": {
                  "type": "string",
                  "example": "1",
                  "description": "The ID of the cluster to which the private endpoint connection belongs.",
                  "readOnly": true
                },
                "clusterDisplayName": {
                  "type": "string",
                  "example": "my-cluster",
                  "description": "The display name of the cluster to which the private endpoint connection belongs.",
                  "readOnly": true
                },
                "labels": {
                  "type": "object",
                  "example": {
                    "tidb.cloud/project": "1"
                  },
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The labels of the private link connection, including the mandatory `tidb.cloud/project` label identifying the project it belongs to.",
                  "title": "map\u003cstring, string\u003e",
                  "readOnly": true
                },
                "endpointId": {
                  "type": "string",
                  "example": "vpce-0a1b2c3d4e5f6g7h8",
                  "description": "The endpoint ID of the private link connection.\n\n- AWS: the VPC endpoint ID for [AWS PrivateLink\n](https://aws.amazon.com/privatelink/).\n\n- Google Cloud: the endpoint ID for [Private Service Connect](https://cloud.google.com/vpc/docs/private-service-connect).\n\n- Azure: the resource ID for [Azure Private Link](https://learn.microsoft.com/en-us/azure/private-link/private-link-overview)."
                },
                "privateIpAddress": {
                  "type": "string",
                  "x-nullable": true,
                  "description": "(Azure only) The private IP address of the private endpoint in your virtual network. TiDB Cloud automatically creates a public DNS record that resolves to this IP address, enabling you to connect using the DNS name."
                },
                "endpointState": {
                  "example": "ACTIVE",
                  "description": "The state of the private endpoint connection.\n\n- `\"PENDING\"`: TiDB Cloud is asynchronously accepting the endpoint connection.\n\n- `\"ACTIVE\"`: the private endpoint connection is ready to use.\n\n- `\"DELETING\"`: the private endpoint connection is being deleted.\n\n- `\"FAILED\"`: the private endpoint connection has failed.\n- `\"DISCOVERED\"`: the endpoint is created in your VPC but not registered with TiDB Cloud.",
                  "readOnly": true,
                  "allOf": [
                    {
                      "$ref": "#/definitions/dedicatedv1beta1PrivateEndpointConnectionEndpointState"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "",
                  "description": "The detailed message when the `endpointState` field is `\"FAILED\"`.",
                  "readOnly": true
                },
                "regionId": {
                  "type": "string",
                  "example": "aws-us-east-1",
                  "description": "The ID of the region where the private endpoint connection is located, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-east-1`.",
                  "readOnly": true
                },
                "regionDisplayName": {
                  "type": "string",
                  "example": "N. Virginia (us-east-1)",
                  "description": "The display name of the region where the private endpoint connection is located. For example, `N. Virginia (us-east-1)`.",
                  "readOnly": true
                },
                "cloudProvider": {
                  "example": "aws",
                  "description": "The cloud provider where the private endpoint connection is located.\n\n- `\"aws\"`: Amazon Web Services\n\n- `\"gcp\"`: Google Cloud\n\n- `\"azure\"`: Microsoft Azure\n\n- `\"alicloud\"`: Alibaba Cloud",
                  "readOnly": true,
                  "allOf": [
                    {
                      "$ref": "#/definitions/v1beta1RegionCloudProvider"
                    }
                  ]
                },
                "privateLinkServiceName": {
                  "type": "string",
                  "example": "com.amazonaws.vpce.us-east-1.vpce-svc-1234567890",
                  "description": "The name of the private link service that the private endpoint connection is connected to.",
                  "readOnly": true
                },
                "privateLinkServiceState": {
                  "example": "ACTIVE",
                  "description": "The state of the private link service that the private endpoint connection is connected to.",
                  "readOnly": true,
                  "allOf": [
                    {
                      "$ref": "#/definitions/dedicatedv1beta1PrivateLinkServiceState"
                    }
                  ]
                },
                "tidbNodeGroupDisplayName": {
                  "type": "string",
                  "example": "DefaultGroup",
                  "description": "The display name of the TiDB node group that the private endpoint connection is connected to.",
                  "readOnly": true
                },
                "accountId": {
                  "type": "string",
                  "x-nullable": true,
                  "description": "(Google Cloud only) The project name used to identify the Google Cloud project that the private service connection belongs to.",
                  "readOnly": true
                },
                "host": {
                  "type": "string",
                  "example": "privatelink-1234567890.abcdefg.clusters.tidb-cloud.com",
                  "description": "The hostname for accessing the TiDB cluster through the private endpoint connection.",
                  "readOnly": true
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "example": 4000,
                  "description": "The port used to connect to the TiDB cluster through the private endpoint connection.",
                  "readOnly": true
                }
              },
              "required": [
                "endpointId"
              ]
            }
          },
          {
            "name": "validateOnly",
            "description": "(Azure only) If set to `true`, the request is validated but not executed. Defaults to `false`.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PrivateEndpointConnectionService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{tidbNodeGroupId}/privateEndpointConnections": {
      "get": {
        "summary": "List private endpoint connections",
        "description": "Lists private endpoint connections for a cluster and TiDB node group. To list private link connections across different clusters and TiDB groups, set cluster_id and tidb_node_group_id to \"-\". If you want to list private link connections under a project across different clusters and TiDB groups, set both cluster_id and tidb_node_group_id to \"-\", and pass the project_id in the query parameter.",
        "operationId": "PrivateEndpointConnectionService_ListPrivateEndpointConnections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ListPrivateEndpointConnectionsResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The id of the cluster for which to list private link connections. To list private link connections across different clusters and TiDB groups, set as `-``.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "To list private link connections across different clusters and TiDB groups, set tidb_node_group_id to \"-\".",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+"
          },
          {
            "name": "projectId",
            "description": "Pass this project_id only when listing under a project across different clusters and TiDB groups.\nBoth cluster_id and tidb_node_group_id should be set to \"-\" in this case.\nIf unspecified, the project ID of the cluster is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProvider",
            "description": "If specified, only private link connections of the specified cloud provider will be returned.\n\n - aws: Amazon Web Services.\n - gcp: Google Cloud Platform.\n - azure: Microsoft Azure.\n - alicloud: Alibaba Cloud",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "aws",
              "gcp",
              "azure",
              "alicloud"
            ]
          },
          {
            "name": "pageSize",
            "description": "The maximum number of private link connections to return. The service may return fewer than this value.\nIf unspecified, at most 10 private link connections will be returned.\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListPrivateLinkConnections` call.\nProvide this to retrieve the subsequent page.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PrivateEndpointConnectionService"
        ]
      }
    },
    "/clusters/{clusterId}/tidbNodeGroups/{tidbNodeGroupId}/privateEndpointConnections/{privateEndpointConnectionId}": {
      "get": {
        "summary": "Get a private endpoint connection",
        "description": "Retrieves a private endpoint connection for a TiDB node group.",
        "operationId": "PrivateEndpointConnectionService_GetPrivateEndpointConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1PrivateEndpointConnection"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster for which to get the private endpoint connection.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "The ID of the TiDB node group for which to get the private endpoint connection.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionId",
            "description": "The ID of the private endpoint connection to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PrivateEndpointConnectionService"
        ]
      },
      "delete": {
        "summary": "Delete a private endpoint connection",
        "description": "Deletes a private endpoint connection for a TiDB node group.",
        "operationId": "PrivateEndpointConnectionService_DeletePrivateEndpointConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "description": "The ID of the cluster from which to delete the private endpoint connection.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tidbNodeGroupId",
            "description": "The ID of the TiDB node group from which to delete the private endpoint connection.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionId",
            "description": "The ID of the private endpoint connection to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PrivateEndpointConnectionService"
        ]
      }
    },
    "/networkContainers": {
      "get": {
        "summary": "List network containers",
        "operationId": "NetworkContainerService_ListNetworkContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListNetworkContainersResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "If unspecified, the project ID of default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProvider",
            "description": " - aws: Amazon Web Services.\n - gcp: Google Cloud Platform.\n - azure: Microsoft Azure.\n - alicloud: Alibaba Cloud",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "aws",
              "gcp",
              "azure",
              "alicloud"
            ]
          },
          {
            "name": "pageSize",
            "description": "The maximum number of network containers to return. The service may return fewer than this value.\nIf unspecified, at most X network containers will be returned.\nThe maximum value is X; values above X will be coerced to X.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListNetworkContainers` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListNetworkContainers` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      },
      "post": {
        "summary": "Create a network container",
        "operationId": "NetworkContainerService_CreateNetworkContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1NetworkContainer"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "networkContainer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1NetworkContainer",
              "required": [
                "networkContainer"
              ]
            }
          },
          {
            "name": "validateOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      }
    },
    "/networkContainers/{networkContainerId}": {
      "get": {
        "summary": "Get a network container",
        "operationId": "NetworkContainerService_GetNetworkContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1NetworkContainer"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "networkContainerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      },
      "delete": {
        "summary": "Delete a network container",
        "operationId": "NetworkContainerService_DeleteNetworkContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "networkContainerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      }
    },
    "/vpcPeerings": {
      "get": {
        "summary": "List VPC peerings",
        "operationId": "NetworkContainerService_ListVpcPeerings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ListVpcPeeringsResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "If unspecified, the project ID of default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProvider",
            "description": "If specified, only VPC peerings of the specified cloud provider will be returned.\n\n - aws: Amazon Web Services.\n - gcp: Google Cloud Platform.\n - azure: Microsoft Azure.\n - alicloud: Alibaba Cloud",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "aws",
              "gcp",
              "azure",
              "alicloud"
            ]
          },
          {
            "name": "pageSize",
            "description": "The maximum number of VPC peerings to return. The service may return fewer than this value.\nIf unspecified, at most X VPC peerings will be returned.\nThe maximum value is X; values above X will be coerced to X.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListVpcPeerings` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListVpcPeerings` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      },
      "post": {
        "summary": "Create a VPC peering",
        "operationId": "NetworkContainerService_CreateVpcPeering",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1VpcPeering"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vpcPeering",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1VpcPeering",
              "required": [
                "vpcPeering"
              ]
            }
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      }
    },
    "/vpcPeerings/{vpcPeeringId}": {
      "get": {
        "summary": "Get a VPC peering",
        "operationId": "NetworkContainerService_GetVpcPeering",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1VpcPeering"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vpcPeeringId",
            "description": "Format {cloud_provider}-{random_suffix}",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      },
      "delete": {
        "summary": "Delete a VPC peering",
        "operationId": "NetworkContainerService_DeleteVpcPeering",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vpcPeeringId",
            "description": "Format {cloud_provider}-{random_suffix}",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NetworkContainerService"
        ]
      }
    },
    "/maintenanceWindows/{maintenanceWindowId}": {
      "get": {
        "summary": "Get a maintenance window",
        "operationId": "MaintenanceService_GetMaintenanceWindow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1MaintenanceWindow"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maintenanceWindowId",
            "description": "Format: project-{project_id}",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MaintenanceService"
        ]
      }
    },
    "/maintenanceWindows": {
      "get": {
        "summary": "List maintenance windows",
        "operationId": "MaintenanceService_ListMaintenanceWindows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ListMaintenanceWindowsResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "If unspecified, the project ID of default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of maintenance windows to return. The service may return fewer than this value.\nIf unspecified, at most X maintenance windows will be returned.\nThe maximum value is X; values above X will be coerced to X.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListMaintenanceWindows` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListMaintenanceWindows` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MaintenanceService"
        ]
      }
    },
    "/maintenanceWindows/{maintenanceWindow.maintenanceWindowId}": {
      "patch": {
        "summary": "Update a maintenance window",
        "operationId": "MaintenanceService_UpdateMaintenanceWindow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1MaintenanceWindow"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maintenanceWindow.maintenanceWindowId",
            "description": "Format: project-{project_id}",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "maintenanceWindow",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "weekDay": {
                  "type": "integer",
                  "format": "int32"
                },
                "dayHour": {
                  "type": "integer",
                  "format": "int32"
                },
                "hourMinute": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "MaintenanceService"
        ]
      }
    },
    "/maintenanceTasks": {
      "get": {
        "summary": "List maintenance tasks",
        "operationId": "MaintenanceService_ListMaintenanceTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ListMaintenanceTasksResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "description": "If unspecified, the project ID of default project is used.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of maintenance tasks to return. The service may return fewer than this value.\nIf unspecified, at most X maintenance tasks will be returned.\nThe maximum value is X; values above X will be coerced to X.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListMaintenanceTasks` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListMaintenanceTasks` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MaintenanceService"
        ]
      }
    },
    "/maintenanceTasks/{maintenanceTaskId}": {
      "get": {
        "summary": "Get a maintenance task",
        "operationId": "MaintenanceService_GetMaintenanceTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1MaintenanceTask"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maintenanceTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MaintenanceService"
        ]
      }
    },
    "/maintenanceTasks/{maintenanceTask.maintenanceTaskId}": {
      "patch": {
        "summary": "Update a maintenance task",
        "operationId": "MaintenanceService_UpdateMaintenanceTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1MaintenanceTask"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maintenanceTask.maintenanceTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "maintenanceTask",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "scheduledApplyTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the task run."
                }
              },
              "required": [
                "scheduledApplyTime"
              ]
            }
          }
        ],
        "tags": [
          "MaintenanceService"
        ]
      }
    },
    "/clusters/{clusterId}/auditLogConfig": {
      "get": {
        "summary": "Get the audit log config of a cluster",
        "operationId": "DatabaseAuditLogService_GetAuditLogConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1AuditLogConfig"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{auditLogConfig.clusterId}/auditLogConfig": {
      "patch": {
        "summary": "Update the audit log config of a cluster",
        "operationId": "DatabaseAuditLogService_UpdateAuditLogConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1AuditLogConfig"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "auditLogConfig.clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogConfig",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "x-nullable": true
                },
                "bucketUri": {
                  "type": "string"
                },
                "bucketRegionId": {
                  "type": "string",
                  "title": "Format: {cloud_provider}-{region_code}"
                },
                "awsRoleArn": {
                  "type": "string"
                },
                "azureSasToken": {
                  "type": "string"
                },
                "bucketManager": {
                  "$ref": "#/definitions/AuditLogConfigBucketManager"
                },
                "unredacted": {
                  "type": "boolean",
                  "x-nullable": true
                },
                "format": {
                  "$ref": "#/definitions/v1beta1AuditLogConfigFormat"
                },
                "rotationPolicy": {
                  "$ref": "#/definitions/v1beta1AuditLogConfigRotationPolicy"
                }
              }
            }
          },
          {
            "name": "validateOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{auditLogFilterRule.clusterId}/auditLogFilterRules": {
      "post": {
        "summary": "Create an audit log filter rule",
        "operationId": "DatabaseAuditLogService_CreateAuditLogFilterRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRule"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "auditLogFilterRule.clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogFilterRule",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Format: auditLogFilterRules/{audit_log_filter_rule_id}",
                  "readOnly": true
                },
                "auditLogFilterRuleId": {
                  "type": "string",
                  "description": "audit_log_filter_rule_id is a unique identifier for the rule. Currently, the value is the same as user_expr.\nFor legacy, the audit_log_filter_rule_id is a number.",
                  "readOnly": true
                },
                "userExpr": {
                  "type": "string",
                  "description": "Format: \u003cuser\u003e@\u003chost\u003e.\nThe audit user \u003cuser\u003e@\u003chost\u003e consists of the username and hostname with @ as separator, where @ and \u003chost\u003e are optional.\nBoth username and hostname can be identifiers with wildcards:\n  - % for matching any username/hostname.\n  - _ for matching any character.\nFor multiple filter rules, if their user_expr fields match the same username, that matches the longest username takes effect.\nIn general, this field is required. Only when `AuditLogConfig.legacy` is true, this field is optional.\nFor legacy, the express is a regex."
                },
                "disabled": {
                  "type": "boolean",
                  "description": "Default is enabled."
                },
                "eventTypes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRuleEventType"
                  },
                  "description": "If empty, it means all events."
                },
                "displayName": {
                  "type": "string",
                  "description": "If not set, default to the value of `user_expr`."
                },
                "dbExpr": {
                  "type": "string",
                  "description": "Deprecated. Only available when `AuditLogConfig.legacy` is true.\nThe express is a glob pattern. Refer to https://github.com/pingcap/tidb/blob/master/pkg/util/table-filter/README.md#wildcards."
                },
                "tableExpr": {
                  "type": "string",
                  "description": "Deprecated. Only available when `AuditLogConfig.legacy` is true.\nThe express is a glob pattern. Refer to https://github.com/pingcap/tidb/blob/master/pkg/util/table-filter/README.md#wildcards."
                },
                "accessTypeList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Deprecated. Only available when `AuditLogConfig.legacy` is true."
                }
              }
            }
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{auditLogFilterRule.clusterId}/auditLogFilterRules/{auditLogFilterRule.auditLogFilterRuleId}:replaceAuditLogFilterRule": {
      "post": {
        "summary": "Replace an audit log filter rule. All fields of the rule will be replaced with the provided values.",
        "operationId": "DatabaseAuditLogService_ReplaceAuditLogFilterRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ReplaceAuditLogFilterRuleResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "auditLogFilterRule.clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogFilterRule.auditLogFilterRuleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogFilterRule",
            "description": "Required. The audit log filter rule to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userExpr": {
                  "type": "string"
                },
                "disabled": {
                  "type": "boolean"
                },
                "eventTypes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRuleEventType"
                  }
                },
                "displayName": {
                  "type": "string"
                }
              },
              "title": "Required. The audit log filter rule to update."
            }
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{clusterId}/auditLogFilterRules/{auditLogFilterRuleId}": {
      "get": {
        "summary": "Get an audit log filter rule",
        "operationId": "DatabaseAuditLogService_GetAuditLogFilterRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRule"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogFilterRuleId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      },
      "delete": {
        "summary": "Delete an audit log filter rule",
        "operationId": "DatabaseAuditLogService_DeleteAuditLogFilterRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogFilterRuleId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{clusterId}/auditLogFilterRules": {
      "get": {
        "summary": "List audit log filter rules",
        "operationId": "DatabaseAuditLogService_ListAuditLogFilterRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1ListAuditLogFilterRulesResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{clusterId}/auditLogConfig:showObjectStorageAccessIamPrincipal": {
      "get": {
        "summary": "Show IAM principal of TiDB Cloud for accessing customer's object storage",
        "operationId": "DatabaseAuditLogService_ShowObjectStorageAccessIamPrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ShowObjectStorageAccessIamPrincipalResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{clusterId}/auditLogConfig:queryAuditLogFiles": {
      "get": {
        "summary": "Query audit log files",
        "operationId": "DatabaseAuditLogService_QueryAuditLogFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1QueryAuditLogFilesResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "description": "the start time of the audit logs created time range.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "the end time of the audit logs created time range.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of individual resources to skip before starting to return results.\nIf the skip value causes the cursor to move past the end of the collection,\nthe response will be 200 OK with an empty result set and no next_page_token.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    },
    "/clusters/{clusterId}/auditLogConfig:generateAuditLogFileDownloadAddress": {
      "post": {
        "summary": "Generate the download address for an audit log file, the address have an 15 minutes expiration time",
        "operationId": "DatabaseAuditLogService_GenerateAuditLogFileDownloadAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dedicatedv1beta1GenerateAuditLogFileDownloadAddressResponse"
            }
          },
          "400": {
            "description": "A request field is invalid.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "401": {
            "description": "The API key cannot be authenticated.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "403": {
            "description": "The API key does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "429": {
            "description": "You have exceed the rate limit.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "auditLogFileUri",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatabaseAuditLogService"
        ]
      }
    }
  },
  "definitions": {
    "AuditLogConfigBucketManager": {
      "type": "string",
      "enum": [
        "CUSTOMER",
        "PINGCAP"
      ]
    },
    "ClusterNodeChangingProgress": {
      "type": "object",
      "properties": {
        "matchingNodeSpecNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes that match the specified node spec.",
          "readOnly": true
        },
        "remainingDeletionNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes pending deletion. This value appears only during node deletion operations.",
          "readOnly": true
        }
      }
    },
    "ClusterStorageNodeSettingStorageType": {
      "type": "string",
      "enum": [
        "Basic",
        "Standard",
        "Performance",
        "Plus"
      ],
      "description": " - Basic: Data disk: gp3; Raft log disk: none.\n - Standard: Data disk: gp3; Raft log disk: gp3.\n - Performance: Data disk: gp3; Raft log disk: io2.\n - Plus: Data disk: io2; Raft log disk: none."
    },
    "ShowNodeQuotaResponseComponentQuota": {
      "type": "object",
      "properties": {
        "componentType": {
          "description": "The component type. The value options are:\n\n- `TIDB`: [TiDB node](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#tidb-node).\n\n- `TIKV`: [TiKV node](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#tikv-node).\n\n- `TIFLASH`: [TiFlash node](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#tiflash-node).",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1ComponentType"
            }
          ]
        },
        "quota": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of nodes allowed for this component type."
        }
      }
    },
    "UpdateClusterRequestTidbNodeSettingTidbNodeGroup": {
      "type": "object",
      "properties": {
        "tidbNodeGroupId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the TiDB node group. If empty, it means to scale the default TiDB group."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "example": 2,
          "description": "The number of TiDB nodes in the TiDB group. It must be greater than or equal to 1.",
          "minimum": 1
        },
        "tiproxySetting": {
          "description": "The TiProxy setting for the TiDB group. If not specified, the default TiProxy setting will be used.",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupTiProxySetting"
            }
          ]
        },
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the TiDB group. For example, `8C32G`."
        }
      }
    },
    "commonv1beta1ClusterState": {
      "type": "string",
      "enum": [
        "CREATING",
        "DELETING",
        "ACTIVE",
        "RESTORING",
        "MAINTENANCE",
        "DELETED",
        "INACTIVE",
        "UPGRADING",
        "IMPORTING",
        "MODIFYING",
        "PAUSING",
        "PAUSED",
        "RESUMING"
      ],
      "description": "Enum of possible states of a cluster.\n\n - CREATING: Cluster is being created.\n - DELETING: Cluster is being deleted.\n - ACTIVE: Cluster is active for use.\n - RESTORING: Cluster data is being restored.\n - MAINTENANCE: Cluster is under maintenance.\n - DELETED: Cluster has been deleted.\n - INACTIVE: Cluster is not active, but not being deleted.\n - UPGRADING: Cluster is being updated.\nOnly for Dedicated Cluster.\n - IMPORTING: Cluster is being imported.\nOnly for Dedicated Cluster.\n - MODIFYING: Cluster is being modified.\nOnly for Dedicated Cluster.\n - PAUSING: Cluster is being paused.\nOnly for Dedicated Cluster.\n - PAUSED: Cluster is paused.\nOnly for Dedicated Cluster.\n - RESUMING: Cluster is resuming.\nOnly for Dedicated Cluster."
    },
    "commonv1beta1Region": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "regions/aws-us-west-2",
          "description": "The unique name of the region, in the format of `regions/{region_id}`. For example, `regions/aws-us-west-2`.",
          "pattern": "^regions/(aws|gcp|azure)-(.+)$"
        },
        "regionId": {
          "type": "string",
          "example": "aws-us-west-2",
          "description": "The unique identifier for the region, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-west-2`.",
          "readOnly": true,
          "pattern": "^(aws|gcp|azure|alicloud)-[a-z0-9-]+$"
        },
        "cloudProvider": {
          "example": "aws",
          "description": "The cloud provider that offers the region.\n\n- `\"aws\"`: Amazon Web Services\n\n- `\"gcp\"`: Google Cloud\n\n- `\"azure\"`: Microsoft Azure\n\n- `\"alicloud\"`: Alibaba Cloud",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        },
        "displayName": {
          "type": "string",
          "example": "Oregon (us-west-2)",
          "description": "A human-readable name for the region. For example, `Oregon (us-west-2)`.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "x-nullable": true,
          "example": "aws",
          "description": "**Deprecated.** Use `cloudProvider` instead. The name of the cloud provider. For example, `aws`, `gcp`, `azure`, or `alicloud`.",
          "title": "Deprecated",
          "readOnly": true
        },
        "servicePlans": {
          "type": "array",
          "example": [
            "Starter",
            "Essential",
            "Premium"
          ],
          "items": {
            "$ref": "#/definitions/commonv1beta1ServicePlan"
          },
          "description": "The service plans available in this region.",
          "title": "ServicePlan",
          "readOnly": true
        }
      },
      "description": "A representation of a region for deploying TiDB clusters."
    },
    "commonv1beta1ServicePlan": {
      "type": "string",
      "enum": [
        "Starter",
        "Essential",
        "Premium",
        "BYOC"
      ]
    },
    "dedicatedv1beta1AuditLogConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Format: clusters/{cluster_id}/auditLogConfig",
          "readOnly": true
        },
        "clusterId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "description": "Default is disabled."
        },
        "bucketUri": {
          "type": "string",
          "description": "Required if bucket_manager is CUSTOMER."
        },
        "bucketRegionId": {
          "type": "string",
          "title": "Format: {cloud_provider}-{region_code}"
        },
        "awsRoleArn": {
          "type": "string"
        },
        "azureSasToken": {
          "type": "string"
        },
        "bucketManager": {
          "description": "The bucket_manager field is used to indicate who manages the bucket.\nIf this field is not set, the bucket is managed by the customer by default.",
          "allOf": [
            {
              "$ref": "#/definitions/AuditLogConfigBucketManager"
            }
          ]
        },
        "unredacted": {
          "type": "boolean",
          "description": "Default is redacted."
        },
        "format": {
          "description": "If unset, default to TEXT.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1AuditLogConfigFormat"
            }
          ]
        },
        "rotationPolicy": {
          "description": "If unset, default to max_size_mib=10, max_age_second=86400 (1 day).",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1AuditLogConfigRotationPolicy"
            }
          ]
        },
        "bucketWriteCheck": {
          "description": "Available only when write check failed.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1AuditLogConfigBucketWriteCheck"
            }
          ]
        },
        "legacy": {
          "type": "boolean",
          "x-nullable": true,
          "description": "Default to false (and not shown), which means the legacy audit log implementation are not used.",
          "readOnly": true
        }
      },
      "required": [
        "clusterId"
      ]
    },
    "dedicatedv1beta1AuditLogFilterRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Format: auditLogFilterRules/{audit_log_filter_rule_id}",
          "readOnly": true
        },
        "auditLogFilterRuleId": {
          "type": "string",
          "description": "audit_log_filter_rule_id is a unique identifier for the rule. Currently, the value is the same as user_expr.\nFor legacy, the audit_log_filter_rule_id is a number.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string"
        },
        "userExpr": {
          "type": "string",
          "description": "Format: \u003cuser\u003e@\u003chost\u003e.\nThe audit user \u003cuser\u003e@\u003chost\u003e consists of the username and hostname with @ as separator, where @ and \u003chost\u003e are optional.\nBoth username and hostname can be identifiers with wildcards:\n  - % for matching any username/hostname.\n  - _ for matching any character.\nFor multiple filter rules, if their user_expr fields match the same username, that matches the longest username takes effect.\nIn general, this field is required. Only when `AuditLogConfig.legacy` is true, this field is optional.\nFor legacy, the express is a regex."
        },
        "disabled": {
          "type": "boolean",
          "description": "Default is enabled."
        },
        "eventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRuleEventType"
          },
          "description": "If empty, it means all events."
        },
        "displayName": {
          "type": "string",
          "description": "If not set, default to the value of `user_expr`."
        },
        "dbExpr": {
          "type": "string",
          "description": "Deprecated. Only available when `AuditLogConfig.legacy` is true.\nThe express is a glob pattern. Refer to https://github.com/pingcap/tidb/blob/master/pkg/util/table-filter/README.md#wildcards."
        },
        "tableExpr": {
          "type": "string",
          "description": "Deprecated. Only available when `AuditLogConfig.legacy` is true.\nThe express is a glob pattern. Refer to https://github.com/pingcap/tidb/blob/master/pkg/util/table-filter/README.md#wildcards."
        },
        "accessTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deprecated. Only available when `AuditLogConfig.legacy` is true."
        }
      },
      "required": [
        "clusterId"
      ]
    },
    "dedicatedv1beta1AuditLogFilterRuleEventType": {
      "type": "string",
      "enum": [
        "CONNECTION",
        "CONNECT",
        "DISCONNECT",
        "CHANGE_USER",
        "QUERY",
        "TRANSACTION",
        "EXECUTE",
        "QUERY_DML",
        "INSERT",
        "REPLACE",
        "UPDATE",
        "DELETE",
        "LOAD_DATA",
        "SELECT",
        "QUERY_DDL"
      ],
      "title": "DB audit logging includes the following event types:\n - CONNECTION\n   - CONNECT\n   - DISCONNECT\n   - CHANGE_USER\n - QUERY\n   - TRANSACTION\n   - EXECUTE\n   - QUERY_DML\n     - INSERT\n     - REPLACE\n     - UPDATE\n     - DELETE\n     - LOAD DATA\n   - SELECT\n   - QUERY_DDL"
    },
    "dedicatedv1beta1ClusterPausePlan": {
      "type": "object",
      "properties": {
        "pauseType": {
          "description": "The type of the pause plan.\n\n- `\"NORMAL\"`: the default pause plan.\n- `\"DEPRECATE\"`: the legacy pause plan and will be removed in a future release.",
          "title": "PausePlanType",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1ClusterPausePlanType"
            }
          ]
        },
        "scheduledResumeTime": {
          "type": "string",
          "format": "date-time",
          "description": "The scheduled time for the cluster to automatically resume from the `PAUSED` state, in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "readOnly": true
        }
      },
      "required": [
        "pauseType"
      ]
    },
    "dedicatedv1beta1ClusterPausePlanType": {
      "type": "string",
      "enum": [
        "NORMAL",
        "DEPRECATE"
      ],
      "title": "- NORMAL: default pause plan\n - DEPRECATE: old pause plan, will be removed"
    },
    "dedicatedv1beta1ComponentType": {
      "type": "string",
      "enum": [
        "TIKV",
        "TIDB",
        "TIFLASH",
        "PD",
        "TIPROXY"
      ]
    },
    "dedicatedv1beta1GenerateAuditLogFileDownloadAddressResponse": {
      "type": "object",
      "properties": {
        "downloadAddress": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "dedicatedv1beta1ListAuditLogFilterRulesResponse": {
      "type": "object",
      "properties": {
        "auditLogFilterRules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRule"
          }
        },
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "dedicatedv1beta1ListMaintenanceTasksResponse": {
      "type": "object",
      "properties": {
        "maintenanceTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1MaintenanceTask"
          }
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of maintenance tasks that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "dedicatedv1beta1ListMaintenanceWindowsResponse": {
      "type": "object",
      "properties": {
        "maintenanceWindows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1MaintenanceWindow"
          }
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of maintenance windows that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "dedicatedv1beta1ListPrivateEndpointConnectionsResponse": {
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1PrivateEndpointConnection"
          },
          "description": "A list of private endpoint connections that match the query.",
          "title": "PrivateEndpointConnection"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "The total number of private link connections that match the query."
        },
        "nextPageToken": {
          "type": "string",
          "example": "next_page_token",
          "description": "The token to retrieve the next page of results. Use this value as the `pageToken` parameter in the next request. This field is empty when there are no more pages."
        }
      }
    },
    "dedicatedv1beta1ListTidbNodeGroupsResponse": {
      "type": "object",
      "properties": {
        "tidbNodeGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroup"
          },
          "description": "A list of TiDB Node Groups that matched the query.",
          "title": "TidbNodeGroup"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of TiDB groups that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `pageToken` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "dedicatedv1beta1ListVpcPeeringsResponse": {
      "type": "object",
      "properties": {
        "vpcPeerings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1VpcPeering"
          }
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of VPC peerings that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "dedicatedv1beta1LogRedactionPolicy": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the cluster to which the log redaction policy applies."
        },
        "redactLog": {
          "type": "boolean",
          "x-nullable": true,
          "example": true,
          "default": "true",
          "description": "Indicates whether to redact sensitive information in logs.\n\nThe default policy is `true`, which means sensitive data is redacted in logs.\n\n**Note**: Disabling log redaction might expose sensitive information and increase the risk of data leakage. Ensure that you understand and acknowledge this risk before proceeding. Remember to re-enable it as soon as you complete your diagnostic or maintenance task."
        }
      },
      "required": [
        "clusterId"
      ]
    },
    "dedicatedv1beta1MaintenanceTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Format: maintenanceTasks/{maintenance_task_id}"
        },
        "maintenanceTaskId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/dedicatedv1beta1MaintenanceTaskState"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the task was created."
        },
        "scheduledApplyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the task run."
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the task will be expired."
        }
      },
      "description": "All fields are output only."
    },
    "dedicatedv1beta1MaintenanceTaskState": {
      "type": "string",
      "enum": [
        "PENDING",
        "RUNNING",
        "DONE"
      ]
    },
    "dedicatedv1beta1MaintenanceWindow": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Format: maintenanceWindows/{maintenance_window_id}",
          "readOnly": true
        },
        "maintenanceWindowId": {
          "type": "string",
          "title": "Format: project-{project_id}",
          "readOnly": true
        },
        "projectId": {
          "type": "string"
        },
        "weekDay": {
          "type": "integer",
          "format": "int32",
          "description": "0-6, 0 is Sunday."
        },
        "dayHour": {
          "type": "integer",
          "format": "int32",
          "description": "0-23 in UTC."
        },
        "hourMinute": {
          "type": "integer",
          "format": "int32",
          "description": "0-59 in UTC."
        },
        "nextMaintenanceDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "unchangedMaintenanceTasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1MaintenanceTask"
          },
          "readOnly": true
        }
      },
      "description": "MaintenanceWindow is a singleton resource that represents the maintenance window under a project.",
      "required": [
        "projectId",
        "weekDay",
        "dayHour",
        "hourMinute"
      ]
    },
    "dedicatedv1beta1PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "tidbNodeGroups/1/privateEndpointConnections/1234567890",
          "description": "The name of the private endpoint connection, in the format of `tidbNodeGroups/{tidb_node_group_id}/privateEndpointConnections/{private_endpoint_connection_id}`.",
          "readOnly": true
        },
        "tidbNodeGroupId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the TiDB group to which the private endpoint connection belongs."
        },
        "privateEndpointConnectionId": {
          "type": "string",
          "example": "1234567890",
          "description": "The unique ID of the private endpoint connection.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the cluster to which the private endpoint connection belongs.",
          "readOnly": true
        },
        "clusterDisplayName": {
          "type": "string",
          "example": "my-cluster",
          "description": "The display name of the cluster to which the private endpoint connection belongs.",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "example": {
            "tidb.cloud/project": "1"
          },
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels of the private link connection, including the mandatory `tidb.cloud/project` label identifying the project it belongs to.",
          "title": "map\u003cstring, string\u003e",
          "readOnly": true
        },
        "endpointId": {
          "type": "string",
          "example": "vpce-0a1b2c3d4e5f6g7h8",
          "description": "The endpoint ID of the private link connection.\n\n- AWS: the VPC endpoint ID for [AWS PrivateLink\n](https://aws.amazon.com/privatelink/).\n\n- Google Cloud: the endpoint ID for [Private Service Connect](https://cloud.google.com/vpc/docs/private-service-connect).\n\n- Azure: the resource ID for [Azure Private Link](https://learn.microsoft.com/en-us/azure/private-link/private-link-overview)."
        },
        "privateIpAddress": {
          "type": "string",
          "x-nullable": true,
          "description": "(Azure only) The private IP address of the private endpoint in your virtual network. TiDB Cloud automatically creates a public DNS record that resolves to this IP address, enabling you to connect using the DNS name."
        },
        "endpointState": {
          "example": "ACTIVE",
          "description": "The state of the private endpoint connection.\n\n- `\"PENDING\"`: TiDB Cloud is asynchronously accepting the endpoint connection.\n\n- `\"ACTIVE\"`: the private endpoint connection is ready to use.\n\n- `\"DELETING\"`: the private endpoint connection is being deleted.\n\n- `\"FAILED\"`: the private endpoint connection has failed.\n- `\"DISCOVERED\"`: the endpoint is created in your VPC but not registered with TiDB Cloud.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1PrivateEndpointConnectionEndpointState"
            }
          ]
        },
        "message": {
          "type": "string",
          "example": "",
          "description": "The detailed message when the `endpointState` field is `\"FAILED\"`.",
          "readOnly": true
        },
        "regionId": {
          "type": "string",
          "example": "aws-us-east-1",
          "description": "The ID of the region where the private endpoint connection is located, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-east-1`.",
          "readOnly": true
        },
        "regionDisplayName": {
          "type": "string",
          "example": "N. Virginia (us-east-1)",
          "description": "The display name of the region where the private endpoint connection is located. For example, `N. Virginia (us-east-1)`.",
          "readOnly": true
        },
        "cloudProvider": {
          "example": "aws",
          "description": "The cloud provider where the private endpoint connection is located.\n\n- `\"aws\"`: Amazon Web Services\n\n- `\"gcp\"`: Google Cloud\n\n- `\"azure\"`: Microsoft Azure\n\n- `\"alicloud\"`: Alibaba Cloud",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        },
        "privateLinkServiceName": {
          "type": "string",
          "example": "com.amazonaws.vpce.us-east-1.vpce-svc-1234567890",
          "description": "The name of the private link service that the private endpoint connection is connected to.",
          "readOnly": true
        },
        "privateLinkServiceState": {
          "example": "ACTIVE",
          "description": "The state of the private link service that the private endpoint connection is connected to.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1PrivateLinkServiceState"
            }
          ]
        },
        "tidbNodeGroupDisplayName": {
          "type": "string",
          "example": "DefaultGroup",
          "description": "The display name of the TiDB node group that the private endpoint connection is connected to.",
          "readOnly": true
        },
        "accountId": {
          "type": "string",
          "x-nullable": true,
          "description": "(Google Cloud only) The project name used to identify the Google Cloud project that the private service connection belongs to.",
          "readOnly": true
        },
        "host": {
          "type": "string",
          "example": "privatelink-1234567890.abcdefg.clusters.tidb-cloud.com",
          "description": "The hostname for accessing the TiDB cluster through the private endpoint connection.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "example": 4000,
          "description": "The port used to connect to the TiDB cluster through the private endpoint connection.",
          "readOnly": true
        }
      },
      "required": [
        "tidbNodeGroupId",
        "endpointId"
      ]
    },
    "dedicatedv1beta1PrivateEndpointConnectionEndpointState": {
      "type": "string",
      "enum": [
        "PENDING",
        "ACTIVE",
        "DELETING",
        "FAILED",
        "DISCOVERED"
      ],
      "description": "The state of the private endpoint connection.\n\n - PENDING: TiDB Cloud is asynchronously accepting the endpoint connection.\n - ACTIVE: The private endpoint connection is ready to use.\n - DELETING: The private endpoint connection is being deleted.\n - FAILED: The private endpoint connection has failed.\n - DISCOVERED: The endpoint is created in your VPC but not registered with TiDB Cloud."
    },
    "dedicatedv1beta1PrivateLinkService": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "tidbNodeGroups/1/privateLinkService",
          "description": "The name of the private link service."
        },
        "tidbNodeGroupId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the TiDB group to which the private link service belongs."
        },
        "serviceName": {
          "type": "string",
          "example": "com.amazonaws.vpce.us-east-1.vpce-svc-1234567890",
          "description": "The service name of the private link service, which varies by cloud provider:\n\n- AWS: the service name of the private link service.\n\n- Google Cloud: the resource name of the service attachment.\n\n- Azure: the resource ID of the private link service."
        },
        "serviceDnsName": {
          "type": "string",
          "example": "privatelink-1234567890.muznnz1umf3p.clusters.staging.tidb-cloud.com",
          "description": "The DNS name of the private link service, which varies by cloud provider:\n\n- AWS: the fully qualified domain name (FQDN) shared across all private endpoints, regardless of VPC location.\n\n- Google Cloud: the zone name (suffix of the FQDN) shared across all private endpoints in a single VPC network. The format of FQDN is `\u003cendpoint_name\u003e.\u003cservice_dns_name\u003e`.\n\n- Azure: the zone name shared across public internet. The format of FQDN is `\u003cendpoint_name\u003e-\u003crandom_hash\u003e.\u003cservice_dns_name\u003e`."
        },
        "availableZones": {
          "type": "array",
          "example": [
            "use1-az1",
            "use1-az4",
            "use1-az6"
          ],
          "items": {
            "type": "string"
          },
          "description": "(AWS only) The availability zones where the private link service is available. For more information, see [`DescribeVpcEndpointServices`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html)."
        },
        "state": {
          "example": "ACTIVE",
          "description": "The state of the private link service.\n\n- `\"CREATING\"`: the private link service is being created.\n\n- `\"ACTIVE\"`: the private link service is ready to use.\n\n- `\"DELETING\"`: the private link service is being deleted.",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1PrivateLinkServiceState"
            }
          ]
        },
        "regionId": {
          "type": "string",
          "example": "aws-us-east-1",
          "description": "The ID of the region where the private link service is located, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-east-1`."
        },
        "regionDisplayName": {
          "type": "string",
          "example": "N. Virginia (us-east-1)",
          "description": "The display name of the region where the private link service is located. For example, `N. Virginia (us-east-1)`."
        },
        "cloudProvider": {
          "example": "aws",
          "description": "The cloud provider where the private link service is located.\n\n- `\"aws\"`: Amazon Web Services\n\n- `\"gcp\"`: Google Cloud\n\n- `\"azure\"`: Microsoft Azure\n\n- `\"alicloud\"`: Alibaba Cloud",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        }
      },
      "description": "All fields are output only."
    },
    "dedicatedv1beta1PrivateLinkServiceState": {
      "type": "string",
      "enum": [
        "CREATING",
        "ACTIVE",
        "DELETING"
      ],
      "description": " - CREATING: The private link service is being created.\n - ACTIVE: The private link service is active and ready for use.\n - DELETING: The private link service is being deleted."
    },
    "dedicatedv1beta1QueryAuditLogFilesResponse": {
      "type": "object",
      "properties": {
        "auditLogFiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1QueryAuditLogFilesResponseAuditLogFile"
          }
        },
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "dedicatedv1beta1QueryAuditLogFilesResponseAuditLogFile": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "sizeByte": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dedicatedv1beta1ResetRootPasswordResponse": {
      "type": "object"
    },
    "dedicatedv1beta1TidbNodeGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "tidbNodeGroups/1",
          "description": "The resource name of the TiDB group, in the format of `tidbNodeGroups/{tidb_node_group_id}`.",
          "readOnly": true
        },
        "tidbNodeGroupId": {
          "type": "string",
          "example": "1",
          "description": "The unique ID of the TiDB group.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the cluster that the TiDB node group belongs to.\n\n- This field is **optional** when creating a cluster with the default TiDB group.\n\n- This field is **required** when creating a non-default TiDB group."
        },
        "displayName": {
          "type": "string",
          "example": "DefaultGroup",
          "description": "The display name of the TiDB group."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "The number of TiDB nodes in the TiDB group. It must be greater than or equal to `1`.",
          "minimum": 1
        },
        "endpoints": {
          "type": "array",
          "example": [],
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupEndpoint"
          },
          "description": "The endpoints of the TiDB group.",
          "title": "Endpoint",
          "readOnly": true
        },
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the TiDB group. For example, `8C32G`."
        },
        "nodeSpecVersion": {
          "type": "string",
          "description": "The version tag of the node spec resource. The performance and price of the component may vary based on the version tag.",
          "readOnly": true
        },
        "nodeSpecDisplayName": {
          "type": "string",
          "example": "8 vCPU, 32 GiB",
          "description": "The display name of the node spec of the TiDB group. For example, `8 vCPU, 32 GiB`.",
          "readOnly": true
        },
        "isDefaultGroup": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether this is the default TiDB node group.",
          "readOnly": true
        },
        "state": {
          "example": "ACTIVE",
          "description": "The current state of the TiDB group.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupState"
            }
          ]
        },
        "nodeChangingProgress": {
          "description": "The progress of node configuration changes.",
          "title": "NodeChangingProgress",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ClusterNodeChangingProgress"
            }
          ]
        },
        "tiproxySetting": {
          "description": "Configures TiProxy settings for this TiDB group. If not specified, the default TiProxy settings is used.",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupTiProxySetting"
            }
          ]
        },
        "tiproxyNodeChangingProgress": {
          "description": "The progress of TiProxy node configuration changes.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ClusterNodeChangingProgress"
            }
          ]
        }
      },
      "required": [
        "nodeCount"
      ]
    },
    "dedicatedv1beta1TidbNodeGroupEndpoint": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "The hostname or IP address of the endpoint. For `PRIVATE_ENDPOINT` connection types, availability varies by cloud provider:\n\n- For clusters deployed on AWS, the `host` field is available after the private link service is ready.\n\n- For clusters deployed on Google Cloud or Azure, the `host` field is available after you create a `PrivateEndpointConnection`.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port of the endpoint connection.",
          "readOnly": true
        },
        "connectionType": {
          "example": "PRIVATE_ENDPOINT",
          "description": "The connection type for TiDB node group endpoints.\n\n- `\"PUBLIC\"`: indicates that the endpoint is accessible over the public network.\n\n- `\"VPC_PEERING\"`: indicates that the endpoint is accessible over [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#vpc-peering).\n\n- `\"PRIVATE_ENDPOINT\"`: indicates that the endpoint is accessible over a private link.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1TidbNodeGroupEndpointConnectionType"
            }
          ]
        }
      }
    },
    "dedicatedv1beta1TidbNodeGroupState": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "MODIFYING",
        "PAUSED"
      ],
      "description": " - ACTIVE: Indicates the TiDB group is active and ready for use.\n - MODIFYING: Indicates the TiDB group is being modified.\n - PAUSED: Indicates the TiDB group is paused."
    },
    "dedicatedv1beta1TidbNodeGroupTiProxySetting": {
      "type": "object",
      "properties": {
        "nodeSpecKey": {
          "type": "string",
          "example": "2C4G",
          "description": "The node spec key of the TiProxy nodes in the cluster. For example, `2C4G`.\n\nTo view available node specs, use the [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) endpoint."
        },
        "nodeSpecVersion": {
          "type": "string",
          "readOnly": true
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "example": 2,
          "description": "The number of TiProxy nodes in the TiDB group. If not specified or set to `0`, TiProxy is disabled."
        },
        "nodeSpecDisplayName": {
          "type": "string",
          "example": "2 vCPU, 4 GiB",
          "description": "The display name of the TiProxy node spec. For example, `2 vCPU, 4 GiB`.",
          "readOnly": true
        }
      },
      "required": [
        "nodeSpecKey"
      ]
    },
    "dedicatedv1beta1VpcPeering": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Format: vpcPeerings/{vpc_peering_id}",
          "readOnly": true
        },
        "vpcPeeringId": {
          "type": "string",
          "title": "Format {cloud_provider}-{random_suffix}",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels of the vpc peering. It always contains the `project_id` label.",
          "readOnly": true
        },
        "tidbCloudRegionId": {
          "type": "string",
          "title": "Format: {cloud_provider}-{region_code}"
        },
        "customerRegionId": {
          "type": "string",
          "description": "Format: {cloud_provider}-{region_code}\nFor AWS, it's required.\nFor GCP, it's optional. Since GCP does not require region_id when creating VPC peering."
        },
        "customerAccountId": {
          "type": "string",
          "description": "In AWS, it is the account ID.\nIn GCP, it is the project name."
        },
        "customerVpcId": {
          "type": "string",
          "description": "In AWS, it is the VPC ID.\nIn GCP, it is the network name."
        },
        "customerVpcCidr": {
          "type": "string"
        },
        "tidbCloudCloudProvider": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        },
        "tidbCloudAccountId": {
          "type": "string",
          "description": "In AWS, it is the account ID.\nIn GCP, it is the project name.",
          "readOnly": true
        },
        "tidbCloudVpcId": {
          "type": "string",
          "description": "In AWS, it is the VPC ID.\nIn GCP, it is the network name.",
          "readOnly": true
        },
        "tidbCloudVpcCidr": {
          "type": "string",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1VpcPeeringState"
            }
          ]
        },
        "awsVpcPeeringConnectionId": {
          "type": "string",
          "x-nullable": true,
          "description": "Only for AWS vpc peerings.",
          "readOnly": true
        }
      },
      "required": [
        "tidbCloudRegionId",
        "customerAccountId",
        "customerVpcId",
        "customerVpcCidr"
      ]
    },
    "dedicatedv1beta1VpcPeeringState": {
      "type": "string",
      "enum": [
        "PENDING",
        "FAILED",
        "ACTIVE"
      ]
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "tidb_cloud_open_apidedicatedv1beta1Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "clusters/1",
          "description": "The unique identifier for the TiDB cluster, which is generated by the API and follows the format `clusters/{clusterId}`.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the cluster.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "example": "foo-bar",
          "description": "The user-defined name of the cluster.",
          "maxLength": 64,
          "minLength": 4,
          "pattern": "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
        },
        "regionId": {
          "type": "string",
          "example": "aws-us-west-2",
          "description": "The region where the cluster is deployed, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-west-2`."
        },
        "labels": {
          "type": "object",
          "example": {
            "tidb.cloud/project": "1"
          },
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value pairs used to label the cluster. If the `tidb.cloud/project` label is not specified, the cluster is associated with the default project in the creator's organization. \n\n**Note**: Currently, only the `tidb.cloud/project` label key can be specified when creating a new cluster.",
          "title": "map\u003cstring, string\u003e"
        },
        "tidbNodeSetting": {
          "description": "The configuration for [TiDB nodes](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#tidb-node) in a TiDB Cloud Dedicated cluster.\n\nTo view available node specs for a specific region and cloud provider, use the [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) endpoint.",
          "title": "TidbNodeSetting",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterTidbNodeSetting"
            }
          ]
        },
        "tikvNodeSetting": {
          "description": "The configuration for [TiKV nodes](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#tikv-node) in a TiDB Cloud Dedicated cluster.\n\nTo view available node specs for a specific region and cloud provider, use the [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) endpoint.",
          "title": "StorageNodeSetting",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterStorageNodeSetting"
            }
          ]
        },
        "tiflashNodeSetting": {
          "example": {
            "nodeCount": 3,
            "nodeSpecKey": "16C128G",
            "storageSizeGi": 500,
            "storageType": "Basic"
          },
          "description": "The configuration for [TiFlash nodes](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#tiflash-node) in a TiDB Cloud Dedicated cluster. If not set, TiFlash is disabled.\n\nTo view available node specs for a specific region and cloud provider, use the [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) endpoint.",
          "title": "StorageNodeSetting",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1ClusterStorageNodeSetting"
            }
          ]
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "example": 4000,
          "default": "4000",
          "description": "The port for cluster connections. All network endpoints in the cluster use this port.",
          "maximum": 65535,
          "minimum": 1024
        },
        "rootPassword": {
          "type": "string",
          "example": "my-shining-password",
          "description": "The root password of the cluster. It must be between 8 and 64 characters long and can contain letters, numbers, and special characters.",
          "maxLength": 64,
          "minLength": 8,
          "pattern": "^.{8,64}$"
        },
        "state": {
          "example": "ACTIVE",
          "description": "The current state of the cluster.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/commonv1beta1ClusterState"
            }
          ]
        },
        "version": {
          "type": "string",
          "example": "8.5.2",
          "description": "The TiDB version of the cluster.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "test@example.com",
          "description": "The email address or public API key of the user who create the cluster.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "example": "2023-10-01T12:00:00Z",
          "description": "The timestamp when the cluster was created, in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "example": "2023-10-01T12:00:00Z",
          "description": "The timestamp when the cluster was last updated, in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
          "readOnly": true
        },
        "pausePlan": {
          "description": "The pause plan configuration of the cluster.",
          "title": "PausePlan",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1ClusterPausePlan"
            }
          ]
        },
        "regionDisplayName": {
          "type": "string",
          "example": "N. Virginia (us-east-1)",
          "description": "The display name of the region where the cluster is located. For example, `N. Virginia (us-east-1)`.",
          "readOnly": true
        },
        "cloudProvider": {
          "example": "aws",
          "description": "The cloud provider where the cluster is located.\n\n- `\"aws\"`: Amazon Web Services\n\n- `\"gcp\"`: Google Cloud\n\n- `\"azure\"`: Microsoft Azure\n\n- `\"alicloud\"`: Alibaba Cloud",
          "title": "CloudProvider",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        },
        "annotations": {
          "type": "object",
          "example": {
            "tidb.cloud/has-set-password": "false"
          },
          "additionalProperties": {
            "type": "string"
          },
          "description": "The annotations for the cluster. The following lists some predefined annotations:\n- `tidb.cloud/has-set-password`: indicates whether the cluster has a root password set.\n- `tidb.cloud/available-features`: lists available features of the cluster.\n- `tidb.cloud/insufficient-vm-resource`: indicates insufficient virtual machine resources during during cluster creation or modification.",
          "title": "map\u003cstring, string\u003e",
          "readOnly": true
        }
      },
      "description": "Cluster represents a dedicated TiDB cluster.",
      "required": [
        "displayName",
        "regionId",
        "tidbNodeSetting",
        "tikvNodeSetting",
        "port"
      ]
    },
    "tidb_cloud_open_apidedicatedv1beta1ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
          },
          "description": "A list of clusters that match the query."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "The total number of clusters that match the query."
        },
        "nextPageToken": {
          "type": "string",
          "example": "next_page_token",
          "description": "The token to retrieve the next page of results. Use this value as the `pageToken` parameter in the next request. This field is empty when there are no more pages."
        }
      }
    },
    "tidb_cloud_open_apidedicatedv1beta1ListRegionsResponse": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonv1beta1Region"
          },
          "description": "A list of regions that match the query.",
          "title": "Region"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of regions that match the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of results. Use this value as the `pageToken` parameter in the next request. This field is empty when there are no more pages."
        }
      }
    },
    "v1beta1AuditLogConfigBucketWriteCheck": {
      "type": "object",
      "properties": {
        "writable": {
          "type": "boolean",
          "readOnly": true
        },
        "errorReason": {
          "type": "string",
          "description": "The reason why the bucket is not writable. Output only when `writable` is false.",
          "readOnly": true
        }
      }
    },
    "v1beta1AuditLogConfigFormat": {
      "type": "string",
      "enum": [
        "TEXT",
        "JSON"
      ]
    },
    "v1beta1AuditLogConfigRotationPolicy": {
      "type": "object",
      "properties": {
        "maxSizeMib": {
          "type": "integer",
          "format": "int32",
          "default": "10",
          "description": "Set the file size limitation for audit logs. A log rotation is triggered if the log file exceeds this limitation.\nIn the current version, If you set this variable to 0, TiDB automatically changes it to 10.",
          "maximum": 100,
          "minimum": 1
        },
        "maxAgeSecond": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "default": "86400",
          "description": "Set the time limitation for audit logs. A log rotation is triggered if the log file exceeds this limitation.\nSetting this variable to 0 means to disable automatic log rotation by time.",
          "maximum": 2592000
        }
      }
    },
    "v1beta1ClusterServiceResetRootPasswordBody": {
      "type": "object",
      "properties": {
        "rootPassword": {
          "type": "string",
          "example": "new_password",
          "description": "The new root password for the cluster. The password must be between 8 and 64 characters long and can contain letters, numbers, and special characters."
        }
      },
      "required": [
        "rootPassword"
      ]
    },
    "v1beta1ClusterStorageNodeSetting": {
      "type": "object",
      "properties": {
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "The number of nodes in the cluster."
        },
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the nodes in the cluster. For example, `8C32G`."
        },
        "nodeSpecVersion": {
          "type": "string",
          "example": "v1",
          "description": "The version tag of the node spec resource. The performance and price of the component may vary based on the version tag.",
          "readOnly": true
        },
        "storageSizeGi": {
          "type": "integer",
          "format": "int32",
          "example": 500,
          "description": "The storage size of each node in gibibytes (GiB). To view supported storage size ranges, use the [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) or [Get a node spec](#tag/RegionService/operation/RegionService_GetNodeSpec) endpoint."
        },
        "storageType": {
          "example": "Standard",
          "description": "The storage type of the node. For more information, see [TiKV node storage types](https://docs.pingcap.com/tidbcloud/size-your-cluster/#tikv-node-storage-types) and [TiFlash node storage types](https://docs.pingcap.com/tidbcloud/size-your-cluster/#tiflash-node-storage-types).",
          "allOf": [
            {
              "$ref": "#/definitions/ClusterStorageNodeSettingStorageType"
            }
          ]
        },
        "raftStoreIops": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "example": 3000,
          "description": "The IOPS (input/output operations per second) of the Raft store for the node. If not specified, the default IOPS of Raft store is used. It is recommended to leave it blank to use the default settings for optimal performance."
        },
        "nodeSpecDisplayName": {
          "type": "string",
          "example": "8 vCPU, 32 GiB",
          "description": "The display name of the node spec. For example, `8 vCPU, 32 GiB`.",
          "readOnly": true
        },
        "nodeChangingProgress": {
          "description": "The progress of the node changing.",
          "title": "NodeChangingProgress",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ClusterNodeChangingProgress"
            }
          ]
        }
      },
      "required": [
        "nodeCount",
        "nodeSpecKey",
        "storageSizeGi"
      ]
    },
    "v1beta1ClusterTidbNodeSetting": {
      "type": "object",
      "properties": {
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the TiDB nodes in the cluster. For example, `8C32G`. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API."
        },
        "nodeSpecDisplayName": {
          "type": "string",
          "example": "8 vCPU, 32 GiB",
          "description": "The display name of the node spec. For example, `8 vCPU, 32 GiB`.",
          "readOnly": true
        },
        "nodeSpecVersion": {
          "type": "string",
          "example": "v1",
          "description": "The version tag of the node spec resource. The performance and price of the component may vary based on the version tag.",
          "readOnly": true
        },
        "tidbNodeGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroup"
          },
          "description": "The [TiDB node groups](https://docs.pingcap.com/tidbcloud/tidb-node-group-overview/) in the cluster.\n\nWhen you create a cluster, this array must contain exactly one `TidbNodeGroup` object, and the `nodeCount` field must be set.",
          "title": "TidbNodeGroup"
        }
      },
      "required": [
        "tidbNodeGroups"
      ]
    },
    "v1beta1ListNetworkContainersResponse": {
      "type": "object",
      "properties": {
        "networkContainers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1NetworkContainer"
          }
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of network containers that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "v1beta1ListNodeInstancesResponse": {
      "type": "object",
      "properties": {
        "nodeInstances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1NodeInstance"
          },
          "description": "A list of node instances that matched the query.",
          "title": "NodeInstance"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "The total number of node instances that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "example": "next_page_token",
          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "v1beta1ListNodeSpecsResponse": {
      "type": "object",
      "properties": {
        "nodeSpecs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1NodeSpec"
          },
          "description": "A list of node specs that match the query."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of node specs that match the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of results. Use this value as the `pageToken` parameter in the next request. This field is empty when there are no more pages."
        }
      }
    },
    "v1beta1NetworkContainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Format: networkContainers/{network_container_id}",
          "readOnly": true
        },
        "networkContainerId": {
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels of the cluster.\nIf there is no \"project_id\" in labels, resource should be in the default project of the creator's organization."
        },
        "regionId": {
          "type": "string",
          "title": "Format: {cloud_provider}-{region_code}"
        },
        "cidrNotation": {
          "type": "string",
          "description": "If not set, the default cidr of the region will be used."
        },
        "cloudProvider": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1RegionCloudProvider"
            }
          ]
        },
        "state": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1NetworkContainerState"
            }
          ]
        },
        "regionDisplayName": {
          "type": "string",
          "readOnly": true
        },
        "vpcId": {
          "type": "string",
          "description": "For AWS, it is the vpc id.\nFor GCP, it is the network name.\nFor Azure, it is the vnet name.",
          "readOnly": true
        }
      },
      "required": [
        "regionId"
      ]
    },
    "v1beta1NetworkContainerState": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "v1beta1NodeInstance": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "clusters/1/nodeInstances/tidb-0",
          "description": "The name of the node instance resource which is formatted as: `clusters/{cluster_id}/nodeInstances/{instance_id}`."
        },
        "clusterId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the cluster to which the node instance belongs."
        },
        "instanceId": {
          "type": "string",
          "example": "tidb-0",
          "description": "The ID of the node instance. It is formatted as:\n- `tidb-{index}` for TiDB instances in the default TiDB group\n- `{tidb_group_name}-tidb-{index}` for TiDB instances in non-default TiDB groups\n- `{component_type}-{index}` for other instances."
        },
        "componentType": {
          "example": "TIDB",
          "description": "The component type of the node instance. It can be one of the following values:\n- `TIDB`: TiDB node instance.\n- `TIKV`: TiKV node instances.\n- `TIFLASH`: TiFlash node instances.\n- `PD`: PD node instances.\n- `PROXY`: Proxy node instances.",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1ComponentType"
            }
          ]
        },
        "state": {
          "example": "AVAILABLE",
          "description": "The state of the node instance.\n- `CREATING`: indicates the node instance is being created.\n- `AVAILABLE`: indicates the node instance is available for use.\n- `DELETING`: indicates the node instance is being deleted.\n- `UNAVAILABLE`: indicates the node instance is not available.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1NodeInstanceState"
            }
          ]
        },
        "vCpu": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "The number of vCPUs of the node instance. e.g. `8`."
        },
        "memorySizeGi": {
          "type": "integer",
          "format": "int32",
          "example": 32,
          "description": "The memory size of the node instance in GiB. e.g. `32`."
        },
        "availabilityZone": {
          "type": "string",
          "example": "us-west-2a",
          "description": "The availability zone of the node instance, e.g. `us-west-2a`.",
          "readOnly": true
        },
        "storageSizeGi": {
          "type": "integer",
          "format": "int32",
          "example": 200,
          "description": "The storage size of the node instance in GiB. e.g. `200`."
        },
        "tidbNodeGroupId": {
          "type": "string",
          "x-nullable": true,
          "example": "node_group_id",
          "description": "The ID of the TiDB node group that the node instance belongs to."
        },
        "tidbNodeGroupDisplayName": {
          "type": "string",
          "x-nullable": true,
          "example": "DefaultGroup",
          "description": "The display name of the TiDB node group that the node instance belongs to."
        },
        "isDefaultTidbNodeGroup": {
          "type": "boolean",
          "x-nullable": true,
          "example": true,
          "description": "Indicates whether the TiDB node group that the node instance belongs to is the default one."
        },
        "raftStoreIops": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "description": "The IOPS of the raft store of the node instance. Only available for instances which have storage. If not set, the default IOPS of raft store will be used."
        },
        "storageType": {
          "example": "Standard",
          "description": "The storage type of the node instance. Only available for instances which have storage.",
          "allOf": [
            {
              "$ref": "#/definitions/ClusterStorageNodeSettingStorageType"
            }
          ]
        },
        "nodeSpecDisplayName": {
          "type": "string",
          "example": "8 vCPU, 32 GiB",
          "description": "The display name of the node spec of the node instance. e.g. `8 vCPU, 32 GiB`."
        },
        "nodeSpecVersion": {
          "type": "string",
          "description": "The version tag of the node spec resource. The performance and price of the component may vary based on the version tag."
        },
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the node instance. e.g. `8C32G`."
        }
      },
      "description": "All fields are output only."
    },
    "v1beta1NodeInstanceState": {
      "type": "string",
      "enum": [
        "CREATING",
        "AVAILABLE",
        "DELETING",
        "UNAVAILABLE"
      ]
    },
    "v1beta1NodeSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the node spec resource, in the format of `regions/{region_id}/componentTypes/{component_type}/nodeSpecs/{node_spec_key}`. For example, `regions/aws-us-west-2/componentTypes/TIKV/nodeSpecs/8C32G`."
        },
        "regionId": {
          "type": "string",
          "description": "The region ID of the node spec resource, in the format of `{cloud_provider}-{region_code}`. For example, `aws-us-west-2`."
        },
        "componentType": {
          "description": "The component type of the node spec.",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1ComponentType"
            }
          ]
        },
        "nodeSpecKey": {
          "type": "string",
          "description": "The key of the node spec. For example, `8C32G`."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the node spec. For example, `8 vCPU, 32 GiB`."
        },
        "vCpu": {
          "type": "integer",
          "format": "int32",
          "description": "The number of virtual CPUs (vCPUs) allocated to the node spec. For example, `8`."
        },
        "memorySizeGi": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of memory in gibibytes (GiB) allocated to the node spec. For example, `32`."
        },
        "defaultStorageSizeGi": {
          "type": "integer",
          "format": "int32",
          "description": "The default storage size of the node spec resource in GiB."
        },
        "maxStorageSizeGi": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum storage size of the node spec resource in GiB."
        },
        "minStorageSizeGi": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum storage size of the node spec resource in GiB."
        },
        "defaultNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The default number of nodes for the node spec resource."
        },
        "storageTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterStorageNodeSettingStorageType"
          },
          "description": "The storage types supported by the node spec resource."
        },
        "maxRaftStoreIops": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "description": "The maximum IOPS for Raft log storage of the node spec resource. Currently, this parameter is only useful when overriding IOPS for Raft log storage."
        },
        "minRaftStoreIops": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "description": "The minimum IOPS for Raft log storage of the node spec resource. Currently, this parameter is only useful when overriding IOPS for Raft log storage."
        },
        "defaultRaftStoreIops": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "example": 3000,
          "description": "The default IOPS for Raft log storage of the node spec resource. Currently, this parameter is only useful when overriding IOPS for Raft log storage."
        },
        "version": {
          "type": "string",
          "example": "v1",
          "description": "The version tag of the node spec resource. The performance and price of the component may vary based on the version tag."
        },
        "default": {
          "type": "boolean",
          "description": "Indicates whether this is the default node spec."
        }
      },
      "description": "All fields are output only."
    },
    "v1beta1PauseClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "description": "The cluster details after it is paused.",
          "title": "Cluster",
          "allOf": [
            {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
            }
          ]
        }
      },
      "required": [
        "cluster"
      ]
    },
    "v1beta1PublicEndpointSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the public endpoint setting resource formatted as: `tidbNodeGroups/{tidb_node_group_id}/publicEndpointSetting`.",
          "readOnly": true
        },
        "tidbNodeGroupId": {
          "type": "string",
          "description": "The ID of the TiDB group to which the public endpoint setting belongs. If set to \"-\", the default TiDB group will be used."
        },
        "enabled": {
          "type": "boolean",
          "x-nullable": true,
          "description": "Indicates whether the public endpoint is enabled for the TiDB group."
        },
        "ipAccessList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1PublicEndpointSettingIpAccessList"
          },
          "description": "A list of IP access control lists for the public endpoint. If not set, all IPs are allowed to access the public endpoint.",
          "title": "IpAccessList"
        }
      },
      "required": [
        "tidbNodeGroupId"
      ]
    },
    "v1beta1PublicEndpointSettingIpAccessList": {
      "type": "object",
      "properties": {
        "cidrNotation": {
          "type": "string",
          "description": "The CIDR notation of the IP access control list."
        },
        "description": {
          "type": "string",
          "description": "The description of the IP access control list."
        }
      },
      "required": [
        "cidrNotation"
      ]
    },
    "v1beta1RegionCloudProvider": {
      "type": "string",
      "enum": [
        "aws",
        "gcp",
        "azure",
        "alicloud"
      ],
      "description": "Enum of cloud provider names.\n\n - aws: Amazon Web Services.\n - gcp: Google Cloud Platform.\n - azure: Microsoft Azure.\n - alicloud: Alibaba Cloud"
    },
    "v1beta1ReplaceAuditLogFilterRuleRequestAuditLogFilterRule": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "auditLogFilterRuleId": {
          "type": "string"
        },
        "userExpr": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "eventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRuleEventType"
          }
        },
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "clusterId",
        "auditLogFilterRuleId"
      ]
    },
    "v1beta1ReplaceAuditLogFilterRuleResponse": {
      "type": "object",
      "properties": {
        "auditLogFilterRule": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1AuditLogFilterRule"
            }
          ]
        }
      }
    },
    "v1beta1ResumeClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "description": "The cluster details after it is resumed.",
          "title": "Cluster",
          "allOf": [
            {
              "$ref": "#/definitions/tidb_cloud_open_apidedicatedv1beta1Cluster"
            }
          ]
        }
      },
      "required": [
        "cluster"
      ]
    },
    "v1beta1ShowCloudProvidersResponse": {
      "type": "object",
      "properties": {
        "cloudProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1RegionCloudProvider"
          },
          "description": "A list of cloud providers that are available for the project.\n\n- `\"aws\"`: Amazon Web Services\n\n- `\"gcp\"`: Google Cloud\n\n- `\"azure\"`: Microsoft Azure\n\n- `\"alicloud\"`: Alibaba Cloud"
        }
      }
    },
    "v1beta1ShowNodeQuotaResponse": {
      "type": "object",
      "properties": {
        "componentQuotas": {
          "type": "array",
          "example": [
            {
              "componentType": "TIDB",
              "quota": 200
            },
            {
              "componentType": "TIKV",
              "quota": 200
            },
            {
              "componentType": "TIFLASH",
              "quota": 50
            }
          ],
          "items": {
            "type": "object",
            "$ref": "#/definitions/ShowNodeQuotaResponseComponentQuota"
          },
          "description": "A list of quotas for each component type. Each quota specifies the maximum number of nodes allowed for that component.",
          "title": "ComponentQuota"
        }
      }
    },
    "v1beta1ShowObjectStorageAccessIamPrincipalResponse": {
      "type": "object",
      "properties": {
        "iamPrincipal": {
          "type": "string"
        }
      }
    },
    "v1beta1TidbNodeGroupEndpointConnectionType": {
      "type": "string",
      "enum": [
        "PUBLIC",
        "VPC_PEERING",
        "PRIVATE_ENDPOINT"
      ],
      "description": "The connection type for TiDB node group endpoints.\n\n - PUBLIC: Indicates that the endpoint is accessible over the public network.\n - VPC_PEERING: Indicates that the endpoint is accessible over [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary/#vpc-peering).\n - PRIVATE_ENDPOINT: Indicates that the endpoint is accessible over a private link."
    },
    "v1beta1UpdateAuditLogConfigRequestAuditLogConfig": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "x-nullable": true
        },
        "bucketUri": {
          "type": "string"
        },
        "bucketRegionId": {
          "type": "string",
          "title": "Format: {cloud_provider}-{region_code}"
        },
        "awsRoleArn": {
          "type": "string"
        },
        "azureSasToken": {
          "type": "string"
        },
        "bucketManager": {
          "$ref": "#/definitions/AuditLogConfigBucketManager"
        },
        "unredacted": {
          "type": "boolean",
          "x-nullable": true
        },
        "format": {
          "$ref": "#/definitions/v1beta1AuditLogConfigFormat"
        },
        "rotationPolicy": {
          "$ref": "#/definitions/v1beta1AuditLogConfigRotationPolicy"
        }
      },
      "required": [
        "clusterId"
      ]
    },
    "v1beta1UpdateClusterRequestCluster": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "example": "1",
          "description": "The ID of the cluster to update."
        },
        "tidbNodeSetting": {
          "description": "The TiDB node setting for updating cluster. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1UpdateClusterRequestTidbNodeSetting"
            }
          ]
        },
        "tikvNodeSetting": {
          "description": "The TiKV node setting for updating cluster. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1UpdateClusterRequestStorageNodeSetting"
            }
          ]
        },
        "tiflashNodeSetting": {
          "example": {
            "nodeCount": 3,
            "nodeSpecKey": "16C128G",
            "storageSizeGi": 500,
            "storageType": "Basic"
          },
          "description": "The TiFlash node setting for updating cluster. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/RegionService/operation/RegionService_ListNodeSpecs) API.",
          "allOf": [
            {
              "$ref": "#/definitions/v1beta1UpdateClusterRequestStorageNodeSetting"
            }
          ]
        },
        "displayName": {
          "type": "string",
          "example": "My Cluster",
          "description": "The display name of the cluster."
        },
        "labels": {
          "type": "object",
          "example": {},
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels of the cluster. \n\n**Note**: Currently, does not support `labels` updates.",
          "title": "map\u003cstring, string\u003e"
        }
      },
      "required": [
        "clusterId"
      ]
    },
    "v1beta1UpdateClusterRequestStorageNodeSetting": {
      "type": "object",
      "properties": {
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the nodes in the cluster. For example, `8C32G`."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "example": 3,
          "description": "The number of nodes in the cluster. \nWhen update TiFlash node setting: \n- If the node count is set to 0, the TiFlash node will be removed.\n- If the node count is null, the TiFlash node count won't change.\nFor other components, if the node count is set to 0, server will ignore the node count."
        },
        "storageSizeGi": {
          "type": "integer",
          "format": "int32",
          "example": 500,
          "description": "The storage size of the node in GiB. To get the supported storage size range, please refer to the `NodeSpec` resource."
        },
        "storageType": {
          "example": "Standard",
          "description": "The type of storage for the node. Default to `Basic`. For more information, see [TiKV node storage types](https://docs.pingcap.com/tidbcloud/size-your-cluster/#tikv-node-storage-types) and [TiFlash node storage types](https://docs.pingcap.com/tidbcloud/size-your-cluster/#tiflash-node-storage-types).",
          "allOf": [
            {
              "$ref": "#/definitions/ClusterStorageNodeSettingStorageType"
            }
          ]
        },
        "raftStoreIops": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "example": 3000,
          "description": "The IOPS of the raft store for the node. If not set, the default IOPS of raft store will be used."
        }
      }
    },
    "v1beta1UpdateClusterRequestTidbNodeSetting": {
      "type": "object",
      "properties": {
        "nodeSpecKey": {
          "type": "string",
          "example": "8C32G",
          "description": "The node spec key of the TiDB nodes in the cluster. For example, `8C32G`. \n\nTo get the node spec available configurations of a specific region for a cloud provider, please refer to [List node specs](#tag/Cluster/operation/RegionService_ListNodeSpecs) API."
        },
        "tidbNodeGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UpdateClusterRequestTidbNodeSettingTidbNodeGroup"
          },
          "description": "The TiDB node groups of the cluster.",
          "title": "TidbNodeGroup"
        }
      }
    },
    "v1beta1UpdateMaintenanceTaskRequestMaintenanceTask": {
      "type": "object",
      "properties": {
        "maintenanceTaskId": {
          "type": "string"
        },
        "scheduledApplyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the task run."
        }
      },
      "required": [
        "maintenanceTaskId",
        "scheduledApplyTime"
      ]
    },
    "v1beta1UpdateMaintenanceWindowRequestMaintenanceWindow": {
      "type": "object",
      "properties": {
        "maintenanceWindowId": {
          "type": "string",
          "title": "Format: project-{project_id}"
        },
        "weekDay": {
          "type": "integer",
          "format": "int32"
        },
        "dayHour": {
          "type": "integer",
          "format": "int32"
        },
        "hourMinute": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "maintenanceWindowId"
      ]
    },
    "v1beta1UpdateTidbNodeGroupRequestTidbNodeGroup": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "The ID of the cluster to which the TiDB Node Group belongs."
        },
        "tidbNodeGroupId": {
          "type": "string",
          "description": "The ID of the TiDB Node Group to update."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the TiDB Node Group."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "description": "The node count of the TiDB Node Group."
        },
        "tiproxySetting": {
          "description": "The TiProxy setting of the TiDB Node Group. If not specified, the default TiProxy setting will be used.",
          "title": "TiProxySetting",
          "allOf": [
            {
              "$ref": "#/definitions/dedicatedv1beta1TidbNodeGroupTiProxySetting"
            }
          ]
        }
      },
      "required": [
        "clusterId",
        "tidbNodeGroupId"
      ]
    }
  }
}