/*
Acccount OPENAPI

This is account open api.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the ApiOpenApiMspCustomer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOpenApiMspCustomer{}

// ApiOpenApiMspCustomer struct for ApiOpenApiMspCustomer
type ApiOpenApiMspCustomer struct {
	// The effected time of the MSP customer.
	EffectedTime *string `json:"effectedTime,omitempty"`
	// The email of the MSP customer.
	Email *string `json:"email,omitempty"`
	// The expired time of the MSP customer.
	ExpiredTime *string `json:"expiredTime,omitempty"`
	// The ID of the MSP customer.
	Id *string `json:"id,omitempty"`
	// The ID of the MSP customer.
	OrgId *string `json:"orgId,omitempty"`
	// The org name of the MSP customer.
	OrgName *string `json:"orgName,omitempty"`
	// The state of the MSP customer.
	State                *string `json:"state,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiOpenApiMspCustomer ApiOpenApiMspCustomer

// NewApiOpenApiMspCustomer instantiates a new ApiOpenApiMspCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOpenApiMspCustomer() *ApiOpenApiMspCustomer {
	this := ApiOpenApiMspCustomer{}
	return &this
}

// NewApiOpenApiMspCustomerWithDefaults instantiates a new ApiOpenApiMspCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOpenApiMspCustomerWithDefaults() *ApiOpenApiMspCustomer {
	this := ApiOpenApiMspCustomer{}
	return &this
}

// GetEffectedTime returns the EffectedTime field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetEffectedTime() string {
	if o == nil || IsNil(o.EffectedTime) {
		var ret string
		return ret
	}
	return *o.EffectedTime
}

// GetEffectedTimeOk returns a tuple with the EffectedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetEffectedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EffectedTime) {
		return nil, false
	}
	return o.EffectedTime, true
}

// HasEffectedTime returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasEffectedTime() bool {
	if o != nil && !IsNil(o.EffectedTime) {
		return true
	}

	return false
}

// SetEffectedTime gets a reference to the given string and assigns it to the EffectedTime field.
func (o *ApiOpenApiMspCustomer) SetEffectedTime(v string) {
	o.EffectedTime = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiOpenApiMspCustomer) SetEmail(v string) {
	o.Email = &v
}

// GetExpiredTime returns the ExpiredTime field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetExpiredTime() string {
	if o == nil || IsNil(o.ExpiredTime) {
		var ret string
		return ret
	}
	return *o.ExpiredTime
}

// GetExpiredTimeOk returns a tuple with the ExpiredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetExpiredTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiredTime) {
		return nil, false
	}
	return o.ExpiredTime, true
}

// HasExpiredTime returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasExpiredTime() bool {
	if o != nil && !IsNil(o.ExpiredTime) {
		return true
	}

	return false
}

// SetExpiredTime gets a reference to the given string and assigns it to the ExpiredTime field.
func (o *ApiOpenApiMspCustomer) SetExpiredTime(v string) {
	o.ExpiredTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiOpenApiMspCustomer) SetId(v string) {
	o.Id = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ApiOpenApiMspCustomer) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *ApiOpenApiMspCustomer) SetOrgName(v string) {
	o.OrgName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomer) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomer) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomer) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ApiOpenApiMspCustomer) SetState(v string) {
	o.State = &v
}

func (o ApiOpenApiMspCustomer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOpenApiMspCustomer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EffectedTime) {
		toSerialize["effectedTime"] = o.EffectedTime
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ExpiredTime) {
		toSerialize["expiredTime"] = o.ExpiredTime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiOpenApiMspCustomer) UnmarshalJSON(data []byte) (err error) {
	varApiOpenApiMspCustomer := _ApiOpenApiMspCustomer{}

	err = json.Unmarshal(data, &varApiOpenApiMspCustomer)

	if err != nil {
		return err
	}

	*o = ApiOpenApiMspCustomer(varApiOpenApiMspCustomer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "effectedTime")
		delete(additionalProperties, "email")
		delete(additionalProperties, "expiredTime")
		delete(additionalProperties, "id")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "orgName")
		delete(additionalProperties, "state")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiOpenApiMspCustomer struct {
	value *ApiOpenApiMspCustomer
	isSet bool
}

func (v NullableApiOpenApiMspCustomer) Get() *ApiOpenApiMspCustomer {
	return v.value
}

func (v *NullableApiOpenApiMspCustomer) Set(val *ApiOpenApiMspCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOpenApiMspCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOpenApiMspCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOpenApiMspCustomer(val *ApiOpenApiMspCustomer) *NullableApiOpenApiMspCustomer {
	return &NullableApiOpenApiMspCustomer{value: val, isSet: true}
}

func (v NullableApiOpenApiMspCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOpenApiMspCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
