/*
Acccount OPENAPI

This is account open api.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the ApiProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiProject{}

// ApiProject struct for ApiProject
type ApiProject struct {
	// The AwsCmekEnabled of the project.
	AwsCmekEnabled *bool `json:"aws_cmek_enabled,omitempty"`
	// Number of cluster_ in the project.
	ClusterCount *int32 `json:"cluster_count,omitempty"`
	// The create time key of the project.
	CreateTimestamp *string `json:"create_timestamp,omitempty"`
	// The id of the project.
	Id *string `json:"id,omitempty"`
	// The name of the API key.
	Name *string `json:"name,omitempty"`
	// The org id  of the project.
	OrgId *string `json:"org_id,omitempty"`
	// Number of users in the project.
	UserCount            *int32 `json:"user_count,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiProject ApiProject

// NewApiProject instantiates a new ApiProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiProject() *ApiProject {
	this := ApiProject{}
	return &this
}

// NewApiProjectWithDefaults instantiates a new ApiProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiProjectWithDefaults() *ApiProject {
	this := ApiProject{}
	return &this
}

// GetAwsCmekEnabled returns the AwsCmekEnabled field value if set, zero value otherwise.
func (o *ApiProject) GetAwsCmekEnabled() bool {
	if o == nil || IsNil(o.AwsCmekEnabled) {
		var ret bool
		return ret
	}
	return *o.AwsCmekEnabled
}

// GetAwsCmekEnabledOk returns a tuple with the AwsCmekEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetAwsCmekEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AwsCmekEnabled) {
		return nil, false
	}
	return o.AwsCmekEnabled, true
}

// HasAwsCmekEnabled returns a boolean if a field has been set.
func (o *ApiProject) HasAwsCmekEnabled() bool {
	if o != nil && !IsNil(o.AwsCmekEnabled) {
		return true
	}

	return false
}

// SetAwsCmekEnabled gets a reference to the given bool and assigns it to the AwsCmekEnabled field.
func (o *ApiProject) SetAwsCmekEnabled(v bool) {
	o.AwsCmekEnabled = &v
}

// GetClusterCount returns the ClusterCount field value if set, zero value otherwise.
func (o *ApiProject) GetClusterCount() int32 {
	if o == nil || IsNil(o.ClusterCount) {
		var ret int32
		return ret
	}
	return *o.ClusterCount
}

// GetClusterCountOk returns a tuple with the ClusterCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetClusterCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ClusterCount) {
		return nil, false
	}
	return o.ClusterCount, true
}

// HasClusterCount returns a boolean if a field has been set.
func (o *ApiProject) HasClusterCount() bool {
	if o != nil && !IsNil(o.ClusterCount) {
		return true
	}

	return false
}

// SetClusterCount gets a reference to the given int32 and assigns it to the ClusterCount field.
func (o *ApiProject) SetClusterCount(v int32) {
	o.ClusterCount = &v
}

// GetCreateTimestamp returns the CreateTimestamp field value if set, zero value otherwise.
func (o *ApiProject) GetCreateTimestamp() string {
	if o == nil || IsNil(o.CreateTimestamp) {
		var ret string
		return ret
	}
	return *o.CreateTimestamp
}

// GetCreateTimestampOk returns a tuple with the CreateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetCreateTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTimestamp) {
		return nil, false
	}
	return o.CreateTimestamp, true
}

// HasCreateTimestamp returns a boolean if a field has been set.
func (o *ApiProject) HasCreateTimestamp() bool {
	if o != nil && !IsNil(o.CreateTimestamp) {
		return true
	}

	return false
}

// SetCreateTimestamp gets a reference to the given string and assigns it to the CreateTimestamp field.
func (o *ApiProject) SetCreateTimestamp(v string) {
	o.CreateTimestamp = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiProject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiProject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiProject) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiProject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiProject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiProject) SetName(v string) {
	o.Name = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ApiProject) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ApiProject) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ApiProject) SetOrgId(v string) {
	o.OrgId = &v
}

// GetUserCount returns the UserCount field value if set, zero value otherwise.
func (o *ApiProject) GetUserCount() int32 {
	if o == nil || IsNil(o.UserCount) {
		var ret int32
		return ret
	}
	return *o.UserCount
}

// GetUserCountOk returns a tuple with the UserCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProject) GetUserCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UserCount) {
		return nil, false
	}
	return o.UserCount, true
}

// HasUserCount returns a boolean if a field has been set.
func (o *ApiProject) HasUserCount() bool {
	if o != nil && !IsNil(o.UserCount) {
		return true
	}

	return false
}

// SetUserCount gets a reference to the given int32 and assigns it to the UserCount field.
func (o *ApiProject) SetUserCount(v int32) {
	o.UserCount = &v
}

func (o ApiProject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsCmekEnabled) {
		toSerialize["aws_cmek_enabled"] = o.AwsCmekEnabled
	}
	if !IsNil(o.ClusterCount) {
		toSerialize["cluster_count"] = o.ClusterCount
	}
	if !IsNil(o.CreateTimestamp) {
		toSerialize["create_timestamp"] = o.CreateTimestamp
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.UserCount) {
		toSerialize["user_count"] = o.UserCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiProject) UnmarshalJSON(data []byte) (err error) {
	varApiProject := _ApiProject{}

	err = json.Unmarshal(data, &varApiProject)

	if err != nil {
		return err
	}

	*o = ApiProject(varApiProject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aws_cmek_enabled")
		delete(additionalProperties, "cluster_count")
		delete(additionalProperties, "create_timestamp")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "user_count")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiProject struct {
	value *ApiProject
	isSet bool
}

func (v NullableApiProject) Get() *ApiProject {
	return v.value
}

func (v *NullableApiProject) Set(val *ApiProject) {
	v.value = val
	v.isSet = true
}

func (v NullableApiProject) IsSet() bool {
	return v.isSet
}

func (v *NullableApiProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiProject(val *ApiProject) *NullableApiProject {
	return &NullableApiProject{value: val, isSet: true}
}

func (v NullableApiProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
