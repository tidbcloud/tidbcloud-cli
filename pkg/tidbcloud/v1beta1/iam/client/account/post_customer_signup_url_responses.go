// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/v1beta1/iam/models"
)

// PostCustomerSignupURLReader is a Reader for the PostCustomerSignupURL structure.
type PostCustomerSignupURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCustomerSignupURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCustomerSignupURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCustomerSignupURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /customerSignupUrl] PostCustomerSignupURL", response, response.Code())
	}
}

// NewPostCustomerSignupURLOK creates a PostCustomerSignupURLOK with default headers values
func NewPostCustomerSignupURLOK() *PostCustomerSignupURLOK {
	return &PostCustomerSignupURLOK{}
}

/*
PostCustomerSignupURLOK describes a response with status code 200, with default header values.

OK
*/
type PostCustomerSignupURLOK struct {
	Payload *models.APIOpenAPIMspCustomerSignupURL
}

// IsSuccess returns true when this post customer signup Url o k response has a 2xx status code
func (o *PostCustomerSignupURLOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post customer signup Url o k response has a 3xx status code
func (o *PostCustomerSignupURLOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer signup Url o k response has a 4xx status code
func (o *PostCustomerSignupURLOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post customer signup Url o k response has a 5xx status code
func (o *PostCustomerSignupURLOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer signup Url o k response a status code equal to that given
func (o *PostCustomerSignupURLOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post customer signup Url o k response
func (o *PostCustomerSignupURLOK) Code() int {
	return 200
}

func (o *PostCustomerSignupURLOK) Error() string {
	return fmt.Sprintf("[POST /customerSignupUrl][%d] postCustomerSignupUrlOK  %+v", 200, o.Payload)
}

func (o *PostCustomerSignupURLOK) String() string {
	return fmt.Sprintf("[POST /customerSignupUrl][%d] postCustomerSignupUrlOK  %+v", 200, o.Payload)
}

func (o *PostCustomerSignupURLOK) GetPayload() *models.APIOpenAPIMspCustomerSignupURL {
	return o.Payload
}

func (o *PostCustomerSignupURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIOpenAPIMspCustomerSignupURL)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerSignupURLBadRequest creates a PostCustomerSignupURLBadRequest with default headers values
func NewPostCustomerSignupURLBadRequest() *PostCustomerSignupURLBadRequest {
	return &PostCustomerSignupURLBadRequest{}
}

/*
PostCustomerSignupURLBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostCustomerSignupURLBadRequest struct {
	Payload *models.APIOpenAPIError
}

// IsSuccess returns true when this post customer signup Url bad request response has a 2xx status code
func (o *PostCustomerSignupURLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post customer signup Url bad request response has a 3xx status code
func (o *PostCustomerSignupURLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post customer signup Url bad request response has a 4xx status code
func (o *PostCustomerSignupURLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post customer signup Url bad request response has a 5xx status code
func (o *PostCustomerSignupURLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post customer signup Url bad request response a status code equal to that given
func (o *PostCustomerSignupURLBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post customer signup Url bad request response
func (o *PostCustomerSignupURLBadRequest) Code() int {
	return 400
}

func (o *PostCustomerSignupURLBadRequest) Error() string {
	return fmt.Sprintf("[POST /customerSignupUrl][%d] postCustomerSignupUrlBadRequest  %+v", 400, o.Payload)
}

func (o *PostCustomerSignupURLBadRequest) String() string {
	return fmt.Sprintf("[POST /customerSignupUrl][%d] postCustomerSignupUrlBadRequest  %+v", 400, o.Payload)
}

func (o *PostCustomerSignupURLBadRequest) GetPayload() *models.APIOpenAPIError {
	return o.Payload
}

func (o *PostCustomerSignupURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIOpenAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
