// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/v1beta1/iam/models"
)

// NewPostV1beta1ClustersClusterIDSQLUsersParams creates a new PostV1beta1ClustersClusterIDSQLUsersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostV1beta1ClustersClusterIDSQLUsersParams() *PostV1beta1ClustersClusterIDSQLUsersParams {
	return &PostV1beta1ClustersClusterIDSQLUsersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1beta1ClustersClusterIDSQLUsersParamsWithTimeout creates a new PostV1beta1ClustersClusterIDSQLUsersParams object
// with the ability to set a timeout on a request.
func NewPostV1beta1ClustersClusterIDSQLUsersParamsWithTimeout(timeout time.Duration) *PostV1beta1ClustersClusterIDSQLUsersParams {
	return &PostV1beta1ClustersClusterIDSQLUsersParams{
		timeout: timeout,
	}
}

// NewPostV1beta1ClustersClusterIDSQLUsersParamsWithContext creates a new PostV1beta1ClustersClusterIDSQLUsersParams object
// with the ability to set a context for a request.
func NewPostV1beta1ClustersClusterIDSQLUsersParamsWithContext(ctx context.Context) *PostV1beta1ClustersClusterIDSQLUsersParams {
	return &PostV1beta1ClustersClusterIDSQLUsersParams{
		Context: ctx,
	}
}

// NewPostV1beta1ClustersClusterIDSQLUsersParamsWithHTTPClient creates a new PostV1beta1ClustersClusterIDSQLUsersParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostV1beta1ClustersClusterIDSQLUsersParamsWithHTTPClient(client *http.Client) *PostV1beta1ClustersClusterIDSQLUsersParams {
	return &PostV1beta1ClustersClusterIDSQLUsersParams{
		HTTPClient: client,
	}
}

/*
PostV1beta1ClustersClusterIDSQLUsersParams contains all the parameters to send to the API endpoint

	for the post v1beta1 clusters cluster ID SQL users operation.

	Typically these are written to a http.Request.
*/
type PostV1beta1ClustersClusterIDSQLUsersParams struct {

	/* ClusterID.

	   The id of the cluster.
	*/
	ClusterID string

	/* SQLUser.

	   create sql user request
	*/
	SQLUser *models.APICreateSQLUserReq

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post v1beta1 clusters cluster ID SQL users params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WithDefaults() *PostV1beta1ClustersClusterIDSQLUsersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post v1beta1 clusters cluster ID SQL users params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WithTimeout(timeout time.Duration) *PostV1beta1ClustersClusterIDSQLUsersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WithContext(ctx context.Context) *PostV1beta1ClustersClusterIDSQLUsersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WithHTTPClient(client *http.Client) *PostV1beta1ClustersClusterIDSQLUsersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WithClusterID(clusterID string) *PostV1beta1ClustersClusterIDSQLUsersParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithSQLUser adds the sQLUser to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WithSQLUser(sQLUser *models.APICreateSQLUserReq) *PostV1beta1ClustersClusterIDSQLUsersParams {
	o.SetSQLUser(sQLUser)
	return o
}

// SetSQLUser adds the sqlUser to the post v1beta1 clusters cluster ID SQL users params
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) SetSQLUser(sQLUser *models.APICreateSQLUserReq) {
	o.SQLUser = sQLUser
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1beta1ClustersClusterIDSQLUsersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}
	if o.SQLUser != nil {
		if err := r.SetBodyParam(o.SQLUser); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
