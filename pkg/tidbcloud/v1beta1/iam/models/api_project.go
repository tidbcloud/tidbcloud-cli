// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIProject api project
//
// swagger:model api.Project
type APIProject struct {

	// The AwsCmekEnabled of the project.
	// Example: false
	AwsCmekEnabled bool `json:"aws_cmek_enabled,omitempty"`

	// Number of cluster_ in the project.
	// Example: 7
	ClusterCount int64 `json:"cluster_count,omitempty"`

	// The create time key of the project.
	// Example: 1688460316
	CreateTimestamp string `json:"create_timestamp,omitempty"`

	// The id of the project.
	// Example: 1234566
	ID string `json:"id,omitempty"`

	// The name of the API key.
	// Example: project01
	Name string `json:"name,omitempty"`

	// The org id  of the project.
	// Example: 324234234
	OrgID string `json:"org_id,omitempty"`

	// Number of users in the project.
	// Example: 4
	UserCount int64 `json:"user_count,omitempty"`
}

// Validate validates this api project
func (m *APIProject) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api project based on context it is used
func (m *APIProject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIProject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIProject) UnmarshalBinary(b []byte) error {
	var res APIProject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
