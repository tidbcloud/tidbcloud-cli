/*
Acccount OPENAPI

This is account open api.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the ApiOpenApiMspCustomerSignupUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOpenApiMspCustomerSignupUrl{}

// ApiOpenApiMspCustomerSignupUrl struct for ApiOpenApiMspCustomerSignupUrl
type ApiOpenApiMspCustomerSignupUrl struct {
	// The signup URL of the MSP customer.
	CustomerSignupUrl *string `json:"customerSignupUrl,omitempty"`
	// The expired time of the MSP customer signup url.
	ExpiredAt            *string `json:"expiredAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiOpenApiMspCustomerSignupUrl ApiOpenApiMspCustomerSignupUrl

// NewApiOpenApiMspCustomerSignupUrl instantiates a new ApiOpenApiMspCustomerSignupUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOpenApiMspCustomerSignupUrl() *ApiOpenApiMspCustomerSignupUrl {
	this := ApiOpenApiMspCustomerSignupUrl{}
	return &this
}

// NewApiOpenApiMspCustomerSignupUrlWithDefaults instantiates a new ApiOpenApiMspCustomerSignupUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOpenApiMspCustomerSignupUrlWithDefaults() *ApiOpenApiMspCustomerSignupUrl {
	this := ApiOpenApiMspCustomerSignupUrl{}
	return &this
}

// GetCustomerSignupUrl returns the CustomerSignupUrl field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomerSignupUrl) GetCustomerSignupUrl() string {
	if o == nil || IsNil(o.CustomerSignupUrl) {
		var ret string
		return ret
	}
	return *o.CustomerSignupUrl
}

// GetCustomerSignupUrlOk returns a tuple with the CustomerSignupUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomerSignupUrl) GetCustomerSignupUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerSignupUrl) {
		return nil, false
	}
	return o.CustomerSignupUrl, true
}

// HasCustomerSignupUrl returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomerSignupUrl) HasCustomerSignupUrl() bool {
	if o != nil && !IsNil(o.CustomerSignupUrl) {
		return true
	}

	return false
}

// SetCustomerSignupUrl gets a reference to the given string and assigns it to the CustomerSignupUrl field.
func (o *ApiOpenApiMspCustomerSignupUrl) SetCustomerSignupUrl(v string) {
	o.CustomerSignupUrl = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *ApiOpenApiMspCustomerSignupUrl) GetExpiredAt() string {
	if o == nil || IsNil(o.ExpiredAt) {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOpenApiMspCustomerSignupUrl) GetExpiredAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiredAt) {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *ApiOpenApiMspCustomerSignupUrl) HasExpiredAt() bool {
	if o != nil && !IsNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *ApiOpenApiMspCustomerSignupUrl) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

func (o ApiOpenApiMspCustomerSignupUrl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOpenApiMspCustomerSignupUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerSignupUrl) {
		toSerialize["customerSignupUrl"] = o.CustomerSignupUrl
	}
	if !IsNil(o.ExpiredAt) {
		toSerialize["expiredAt"] = o.ExpiredAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiOpenApiMspCustomerSignupUrl) UnmarshalJSON(data []byte) (err error) {
	varApiOpenApiMspCustomerSignupUrl := _ApiOpenApiMspCustomerSignupUrl{}

	err = json.Unmarshal(data, &varApiOpenApiMspCustomerSignupUrl)

	if err != nil {
		return err
	}

	*o = ApiOpenApiMspCustomerSignupUrl(varApiOpenApiMspCustomerSignupUrl)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customerSignupUrl")
		delete(additionalProperties, "expiredAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiOpenApiMspCustomerSignupUrl struct {
	value *ApiOpenApiMspCustomerSignupUrl
	isSet bool
}

func (v NullableApiOpenApiMspCustomerSignupUrl) Get() *ApiOpenApiMspCustomerSignupUrl {
	return v.value
}

func (v *NullableApiOpenApiMspCustomerSignupUrl) Set(val *ApiOpenApiMspCustomerSignupUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOpenApiMspCustomerSignupUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOpenApiMspCustomerSignupUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOpenApiMspCustomerSignupUrl(val *ApiOpenApiMspCustomerSignupUrl) *NullableApiOpenApiMspCustomerSignupUrl {
	return &NullableApiOpenApiMspCustomerSignupUrl{value: val, isSet: true}
}

func (v NullableApiOpenApiMspCustomerSignupUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOpenApiMspCustomerSignupUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
