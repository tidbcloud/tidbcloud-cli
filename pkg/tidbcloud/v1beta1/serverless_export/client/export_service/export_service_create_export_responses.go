// Code generated by go-swagger; DO NOT EDIT.

package export_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"tidbcloud-cli/pkg/tidbcloud/v1beta1/serverless_export/models"
)

// ExportServiceCreateExportReader is a Reader for the ExportServiceCreateExport structure.
type ExportServiceCreateExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportServiceCreateExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportServiceCreateExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewExportServiceCreateExportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExportServiceCreateExportOK creates a ExportServiceCreateExportOK with default headers values
func NewExportServiceCreateExportOK() *ExportServiceCreateExportOK {
	return &ExportServiceCreateExportOK{}
}

/*
ExportServiceCreateExportOK describes a response with status code 200, with default header values.

A successful response.
*/
type ExportServiceCreateExportOK struct {
	Payload *models.V1beta1Export
}

// IsSuccess returns true when this export service create export o k response has a 2xx status code
func (o *ExportServiceCreateExportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export service create export o k response has a 3xx status code
func (o *ExportServiceCreateExportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export service create export o k response has a 4xx status code
func (o *ExportServiceCreateExportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export service create export o k response has a 5xx status code
func (o *ExportServiceCreateExportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export service create export o k response a status code equal to that given
func (o *ExportServiceCreateExportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export service create export o k response
func (o *ExportServiceCreateExportOK) Code() int {
	return 200
}

func (o *ExportServiceCreateExportOK) Error() string {
	return fmt.Sprintf("[POST /v1beta1/clusters/{clusterId}/exports][%d] exportServiceCreateExportOK  %+v", 200, o.Payload)
}

func (o *ExportServiceCreateExportOK) String() string {
	return fmt.Sprintf("[POST /v1beta1/clusters/{clusterId}/exports][%d] exportServiceCreateExportOK  %+v", 200, o.Payload)
}

func (o *ExportServiceCreateExportOK) GetPayload() *models.V1beta1Export {
	return o.Payload
}

func (o *ExportServiceCreateExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1Export)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportServiceCreateExportDefault creates a ExportServiceCreateExportDefault with default headers values
func NewExportServiceCreateExportDefault(code int) *ExportServiceCreateExportDefault {
	return &ExportServiceCreateExportDefault{
		_statusCode: code,
	}
}

/*
ExportServiceCreateExportDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ExportServiceCreateExportDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this export service create export default response has a 2xx status code
func (o *ExportServiceCreateExportDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this export service create export default response has a 3xx status code
func (o *ExportServiceCreateExportDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this export service create export default response has a 4xx status code
func (o *ExportServiceCreateExportDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this export service create export default response has a 5xx status code
func (o *ExportServiceCreateExportDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this export service create export default response a status code equal to that given
func (o *ExportServiceCreateExportDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the export service create export default response
func (o *ExportServiceCreateExportDefault) Code() int {
	return o._statusCode
}

func (o *ExportServiceCreateExportDefault) Error() string {
	return fmt.Sprintf("[POST /v1beta1/clusters/{clusterId}/exports][%d] ExportService_CreateExport default  %+v", o._statusCode, o.Payload)
}

func (o *ExportServiceCreateExportDefault) String() string {
	return fmt.Sprintf("[POST /v1beta1/clusters/{clusterId}/exports][%d] ExportService_CreateExport default  %+v", o._statusCode, o.Payload)
}

func (o *ExportServiceCreateExportDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ExportServiceCreateExportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ExportServiceCreateExportBody export service create export body
swagger:model ExportServiceCreateExportBody
*/
type ExportServiceCreateExportBody struct {

	// Optional. The options of the export.
	ExportOptions *models.V1beta1ExportOptions `json:"exportOptions,omitempty"`

	// Optional. The target of the export.
	Target *models.V1beta1Target `json:"target,omitempty"`
}

// Validate validates this export service create export body
func (o *ExportServiceCreateExportBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExportOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ExportServiceCreateExportBody) validateExportOptions(formats strfmt.Registry) error {
	if swag.IsZero(o.ExportOptions) { // not required
		return nil
	}

	if o.ExportOptions != nil {
		if err := o.ExportOptions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "exportOptions")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "exportOptions")
			}
			return err
		}
	}

	return nil
}

func (o *ExportServiceCreateExportBody) validateTarget(formats strfmt.Registry) error {
	if swag.IsZero(o.Target) { // not required
		return nil
	}

	if o.Target != nil {
		if err := o.Target.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "target")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "target")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this export service create export body based on the context it is used
func (o *ExportServiceCreateExportBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateExportOptions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTarget(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ExportServiceCreateExportBody) contextValidateExportOptions(ctx context.Context, formats strfmt.Registry) error {

	if o.ExportOptions != nil {

		if swag.IsZero(o.ExportOptions) { // not required
			return nil
		}

		if err := o.ExportOptions.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "exportOptions")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "exportOptions")
			}
			return err
		}
	}

	return nil
}

func (o *ExportServiceCreateExportBody) contextValidateTarget(ctx context.Context, formats strfmt.Registry) error {

	if o.Target != nil {

		if swag.IsZero(o.Target) { // not required
			return nil
		}

		if err := o.Target.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "target")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "target")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ExportServiceCreateExportBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExportServiceCreateExportBody) UnmarshalBinary(b []byte) error {
	var res ExportServiceCreateExportBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
