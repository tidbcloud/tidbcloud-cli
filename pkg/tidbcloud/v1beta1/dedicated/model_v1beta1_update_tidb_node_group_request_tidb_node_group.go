/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
	"fmt"
)

// checks if the V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup{}

// V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup struct for V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup
type V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup struct {
	ClusterId            string                                       `json:"clusterId"`
	TidbNodeGroupId      string                                       `json:"tidbNodeGroupId"`
	DisplayName          *string                                      `json:"displayName,omitempty"`
	NodeCount            NullableInt32                                `json:"nodeCount,omitempty"`
	TiproxySetting       *Dedicatedv1beta1TidbNodeGroupTiProxySetting `json:"tiproxySetting,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup

// NewV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup instantiates a new V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup(clusterId string, tidbNodeGroupId string) *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup {
	this := V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup{}
	this.ClusterId = clusterId
	this.TidbNodeGroupId = tidbNodeGroupId
	return &this
}

// NewV1beta1UpdateTidbNodeGroupRequestTidbNodeGroupWithDefaults instantiates a new V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1UpdateTidbNodeGroupRequestTidbNodeGroupWithDefaults() *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup {
	this := V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) SetClusterId(v string) {
	o.ClusterId = v
}

// GetTidbNodeGroupId returns the TidbNodeGroupId field value
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetTidbNodeGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TidbNodeGroupId
}

// GetTidbNodeGroupIdOk returns a tuple with the TidbNodeGroupId field value
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetTidbNodeGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TidbNodeGroupId, true
}

// SetTidbNodeGroupId sets field value
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) SetTidbNodeGroupId(v string) {
	o.TidbNodeGroupId = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// HasNodeCount returns a boolean if a field has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) HasNodeCount() bool {
	if o != nil && o.NodeCount.IsSet() {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given NullableInt32 and assigns it to the NodeCount field.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}

// SetNodeCountNil sets the value for NodeCount to be an explicit nil
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) SetNodeCountNil() {
	o.NodeCount.Set(nil)
}

// UnsetNodeCount ensures that no value is present for NodeCount, not even an explicit nil
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) UnsetNodeCount() {
	o.NodeCount.Unset()
}

// GetTiproxySetting returns the TiproxySetting field value if set, zero value otherwise.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetTiproxySetting() Dedicatedv1beta1TidbNodeGroupTiProxySetting {
	if o == nil || IsNil(o.TiproxySetting) {
		var ret Dedicatedv1beta1TidbNodeGroupTiProxySetting
		return ret
	}
	return *o.TiproxySetting
}

// GetTiproxySettingOk returns a tuple with the TiproxySetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) GetTiproxySettingOk() (*Dedicatedv1beta1TidbNodeGroupTiProxySetting, bool) {
	if o == nil || IsNil(o.TiproxySetting) {
		return nil, false
	}
	return o.TiproxySetting, true
}

// HasTiproxySetting returns a boolean if a field has been set.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) HasTiproxySetting() bool {
	if o != nil && !IsNil(o.TiproxySetting) {
		return true
	}

	return false
}

// SetTiproxySetting gets a reference to the given Dedicatedv1beta1TidbNodeGroupTiProxySetting and assigns it to the TiproxySetting field.
func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) SetTiproxySetting(v Dedicatedv1beta1TidbNodeGroupTiProxySetting) {
	o.TiproxySetting = &v
}

func (o V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterId"] = o.ClusterId
	toSerialize["tidbNodeGroupId"] = o.TidbNodeGroupId
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.NodeCount.IsSet() {
		toSerialize["nodeCount"] = o.NodeCount.Get()
	}
	if !IsNil(o.TiproxySetting) {
		toSerialize["tiproxySetting"] = o.TiproxySetting
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusterId",
		"tidbNodeGroupId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup := _V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup{}

	err = json.Unmarshal(data, &varV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup)

	if err != nil {
		return err
	}

	*o = V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup(varV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clusterId")
		delete(additionalProperties, "tidbNodeGroupId")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "nodeCount")
		delete(additionalProperties, "tiproxySetting")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup struct {
	value *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup
	isSet bool
}

func (v NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) Get() *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup {
	return v.value
}

func (v *NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) Set(val *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup(val *V1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) *NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup {
	return &NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup{value: val, isSet: true}
}

func (v NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1UpdateTidbNodeGroupRequestTidbNodeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
