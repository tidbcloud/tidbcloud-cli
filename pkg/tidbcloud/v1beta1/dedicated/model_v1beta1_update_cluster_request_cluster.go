/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
	"fmt"
)

// checks if the V1beta1UpdateClusterRequestCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1UpdateClusterRequestCluster{}

// V1beta1UpdateClusterRequestCluster struct for V1beta1UpdateClusterRequestCluster
type V1beta1UpdateClusterRequestCluster struct {
	ClusterId          string                                         `json:"clusterId"`
	TidbNodeSetting    *V1beta1UpdateClusterRequestTidbNodeSetting    `json:"tidbNodeSetting,omitempty"`
	TikvNodeSetting    *V1beta1UpdateClusterRequestStorageNodeSetting `json:"tikvNodeSetting,omitempty"`
	TiflashNodeSetting *V1beta1UpdateClusterRequestStorageNodeSetting `json:"tiflashNodeSetting,omitempty"`
	DisplayName        *string                                        `json:"displayName,omitempty"`
	// The project_id key cannot be updated. If the project_id key is specified, it will be ignored.
	Labels               *map[string]string `json:"labels,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1beta1UpdateClusterRequestCluster V1beta1UpdateClusterRequestCluster

// NewV1beta1UpdateClusterRequestCluster instantiates a new V1beta1UpdateClusterRequestCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1UpdateClusterRequestCluster(clusterId string) *V1beta1UpdateClusterRequestCluster {
	this := V1beta1UpdateClusterRequestCluster{}
	this.ClusterId = clusterId
	return &this
}

// NewV1beta1UpdateClusterRequestClusterWithDefaults instantiates a new V1beta1UpdateClusterRequestCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1UpdateClusterRequestClusterWithDefaults() *V1beta1UpdateClusterRequestCluster {
	this := V1beta1UpdateClusterRequestCluster{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *V1beta1UpdateClusterRequestCluster) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestCluster) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *V1beta1UpdateClusterRequestCluster) SetClusterId(v string) {
	o.ClusterId = v
}

// GetTidbNodeSetting returns the TidbNodeSetting field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestCluster) GetTidbNodeSetting() V1beta1UpdateClusterRequestTidbNodeSetting {
	if o == nil || IsNil(o.TidbNodeSetting) {
		var ret V1beta1UpdateClusterRequestTidbNodeSetting
		return ret
	}
	return *o.TidbNodeSetting
}

// GetTidbNodeSettingOk returns a tuple with the TidbNodeSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestCluster) GetTidbNodeSettingOk() (*V1beta1UpdateClusterRequestTidbNodeSetting, bool) {
	if o == nil || IsNil(o.TidbNodeSetting) {
		return nil, false
	}
	return o.TidbNodeSetting, true
}

// HasTidbNodeSetting returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestCluster) HasTidbNodeSetting() bool {
	if o != nil && !IsNil(o.TidbNodeSetting) {
		return true
	}

	return false
}

// SetTidbNodeSetting gets a reference to the given V1beta1UpdateClusterRequestTidbNodeSetting and assigns it to the TidbNodeSetting field.
func (o *V1beta1UpdateClusterRequestCluster) SetTidbNodeSetting(v V1beta1UpdateClusterRequestTidbNodeSetting) {
	o.TidbNodeSetting = &v
}

// GetTikvNodeSetting returns the TikvNodeSetting field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestCluster) GetTikvNodeSetting() V1beta1UpdateClusterRequestStorageNodeSetting {
	if o == nil || IsNil(o.TikvNodeSetting) {
		var ret V1beta1UpdateClusterRequestStorageNodeSetting
		return ret
	}
	return *o.TikvNodeSetting
}

// GetTikvNodeSettingOk returns a tuple with the TikvNodeSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestCluster) GetTikvNodeSettingOk() (*V1beta1UpdateClusterRequestStorageNodeSetting, bool) {
	if o == nil || IsNil(o.TikvNodeSetting) {
		return nil, false
	}
	return o.TikvNodeSetting, true
}

// HasTikvNodeSetting returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestCluster) HasTikvNodeSetting() bool {
	if o != nil && !IsNil(o.TikvNodeSetting) {
		return true
	}

	return false
}

// SetTikvNodeSetting gets a reference to the given V1beta1UpdateClusterRequestStorageNodeSetting and assigns it to the TikvNodeSetting field.
func (o *V1beta1UpdateClusterRequestCluster) SetTikvNodeSetting(v V1beta1UpdateClusterRequestStorageNodeSetting) {
	o.TikvNodeSetting = &v
}

// GetTiflashNodeSetting returns the TiflashNodeSetting field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestCluster) GetTiflashNodeSetting() V1beta1UpdateClusterRequestStorageNodeSetting {
	if o == nil || IsNil(o.TiflashNodeSetting) {
		var ret V1beta1UpdateClusterRequestStorageNodeSetting
		return ret
	}
	return *o.TiflashNodeSetting
}

// GetTiflashNodeSettingOk returns a tuple with the TiflashNodeSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestCluster) GetTiflashNodeSettingOk() (*V1beta1UpdateClusterRequestStorageNodeSetting, bool) {
	if o == nil || IsNil(o.TiflashNodeSetting) {
		return nil, false
	}
	return o.TiflashNodeSetting, true
}

// HasTiflashNodeSetting returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestCluster) HasTiflashNodeSetting() bool {
	if o != nil && !IsNil(o.TiflashNodeSetting) {
		return true
	}

	return false
}

// SetTiflashNodeSetting gets a reference to the given V1beta1UpdateClusterRequestStorageNodeSetting and assigns it to the TiflashNodeSetting field.
func (o *V1beta1UpdateClusterRequestCluster) SetTiflashNodeSetting(v V1beta1UpdateClusterRequestStorageNodeSetting) {
	o.TiflashNodeSetting = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestCluster) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestCluster) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestCluster) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *V1beta1UpdateClusterRequestCluster) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestCluster) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestCluster) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestCluster) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *V1beta1UpdateClusterRequestCluster) SetLabels(v map[string]string) {
	o.Labels = &v
}

func (o V1beta1UpdateClusterRequestCluster) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1UpdateClusterRequestCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterId"] = o.ClusterId
	if !IsNil(o.TidbNodeSetting) {
		toSerialize["tidbNodeSetting"] = o.TidbNodeSetting
	}
	if !IsNil(o.TikvNodeSetting) {
		toSerialize["tikvNodeSetting"] = o.TikvNodeSetting
	}
	if !IsNil(o.TiflashNodeSetting) {
		toSerialize["tiflashNodeSetting"] = o.TiflashNodeSetting
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1beta1UpdateClusterRequestCluster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusterId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1beta1UpdateClusterRequestCluster := _V1beta1UpdateClusterRequestCluster{}

	err = json.Unmarshal(data, &varV1beta1UpdateClusterRequestCluster)

	if err != nil {
		return err
	}

	*o = V1beta1UpdateClusterRequestCluster(varV1beta1UpdateClusterRequestCluster)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clusterId")
		delete(additionalProperties, "tidbNodeSetting")
		delete(additionalProperties, "tikvNodeSetting")
		delete(additionalProperties, "tiflashNodeSetting")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "labels")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1beta1UpdateClusterRequestCluster struct {
	value *V1beta1UpdateClusterRequestCluster
	isSet bool
}

func (v NullableV1beta1UpdateClusterRequestCluster) Get() *V1beta1UpdateClusterRequestCluster {
	return v.value
}

func (v *NullableV1beta1UpdateClusterRequestCluster) Set(val *V1beta1UpdateClusterRequestCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1UpdateClusterRequestCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1UpdateClusterRequestCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1UpdateClusterRequestCluster(val *V1beta1UpdateClusterRequestCluster) *NullableV1beta1UpdateClusterRequestCluster {
	return &NullableV1beta1UpdateClusterRequestCluster{value: val, isSet: true}
}

func (v NullableV1beta1UpdateClusterRequestCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1UpdateClusterRequestCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
