/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
)

// checks if the TidbNodeGroupServiceUpdateTidbNodeGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TidbNodeGroupServiceUpdateTidbNodeGroupRequest{}

// TidbNodeGroupServiceUpdateTidbNodeGroupRequest struct for TidbNodeGroupServiceUpdateTidbNodeGroupRequest
type TidbNodeGroupServiceUpdateTidbNodeGroupRequest struct {
	DisplayName *string `json:"displayName,omitempty"`
	NodeCount NullableInt32 `json:"nodeCount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TidbNodeGroupServiceUpdateTidbNodeGroupRequest TidbNodeGroupServiceUpdateTidbNodeGroupRequest

// NewTidbNodeGroupServiceUpdateTidbNodeGroupRequest instantiates a new TidbNodeGroupServiceUpdateTidbNodeGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTidbNodeGroupServiceUpdateTidbNodeGroupRequest() *TidbNodeGroupServiceUpdateTidbNodeGroupRequest {
	this := TidbNodeGroupServiceUpdateTidbNodeGroupRequest{}
	return &this
}

// NewTidbNodeGroupServiceUpdateTidbNodeGroupRequestWithDefaults instantiates a new TidbNodeGroupServiceUpdateTidbNodeGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTidbNodeGroupServiceUpdateTidbNodeGroupRequestWithDefaults() *TidbNodeGroupServiceUpdateTidbNodeGroupRequest {
	this := TidbNodeGroupServiceUpdateTidbNodeGroupRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// HasNodeCount returns a boolean if a field has been set.
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) HasNodeCount() bool {
	if o != nil && o.NodeCount.IsSet() {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given NullableInt32 and assigns it to the NodeCount field.
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}
// SetNodeCountNil sets the value for NodeCount to be an explicit nil
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) SetNodeCountNil() {
	o.NodeCount.Set(nil)
}

// UnsetNodeCount ensures that no value is present for NodeCount, not even an explicit nil
func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) UnsetNodeCount() {
	o.NodeCount.Unset()
}

func (o TidbNodeGroupServiceUpdateTidbNodeGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TidbNodeGroupServiceUpdateTidbNodeGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.NodeCount.IsSet() {
		toSerialize["nodeCount"] = o.NodeCount.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) UnmarshalJSON(data []byte) (err error) {
	varTidbNodeGroupServiceUpdateTidbNodeGroupRequest := _TidbNodeGroupServiceUpdateTidbNodeGroupRequest{}

	err = json.Unmarshal(data, &varTidbNodeGroupServiceUpdateTidbNodeGroupRequest)

	if err != nil {
		return err
	}

	*o = TidbNodeGroupServiceUpdateTidbNodeGroupRequest(varTidbNodeGroupServiceUpdateTidbNodeGroupRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "nodeCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest struct {
	value *TidbNodeGroupServiceUpdateTidbNodeGroupRequest
	isSet bool
}

func (v NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest) Get() *TidbNodeGroupServiceUpdateTidbNodeGroupRequest {
	return v.value
}

func (v *NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest) Set(val *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest(val *TidbNodeGroupServiceUpdateTidbNodeGroupRequest) *NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest {
	return &NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest{value: val, isSet: true}
}

func (v NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTidbNodeGroupServiceUpdateTidbNodeGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


