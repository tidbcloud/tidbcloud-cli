/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
)

// TidbNodeGroupTiProxyType  - SMALL: SMALL: Low performance instance with 2 vCPUs and 4 GiB memory. Max QPS: 30, Max Data Traffic: 90 MiB/s.  - LARGE: LARGE: High performance instance with 8 vCPUs and 16 GiB memory. Max QPS: 100, Max Data Traffic: 300 MiB/s.
type TidbNodeGroupTiProxyType string

// List of TidbNodeGroupTiProxyType
const (
	TIDBNODEGROUPTIPROXYTYPE_SMALL TidbNodeGroupTiProxyType = "SMALL"
	TIDBNODEGROUPTIPROXYTYPE_LARGE TidbNodeGroupTiProxyType = "LARGE"
)

// All allowed values of TidbNodeGroupTiProxyType enum
var AllowedTidbNodeGroupTiProxyTypeEnumValues = []TidbNodeGroupTiProxyType{
	"SMALL",
	"LARGE",
}

func (v *TidbNodeGroupTiProxyType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TidbNodeGroupTiProxyType(value)
	for _, existing := range AllowedTidbNodeGroupTiProxyTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = TidbNodeGroupTiProxyType(value)
	return nil
}

// NewTidbNodeGroupTiProxyTypeFromValue returns a pointer to a valid TidbNodeGroupTiProxyType for the value passed as argument
func NewTidbNodeGroupTiProxyTypeFromValue(v string) *TidbNodeGroupTiProxyType {
	ev := TidbNodeGroupTiProxyType(v)
	return &ev
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TidbNodeGroupTiProxyType) IsValid() bool {
	for _, existing := range AllowedTidbNodeGroupTiProxyTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TidbNodeGroupTiProxyType value
func (v TidbNodeGroupTiProxyType) Ptr() *TidbNodeGroupTiProxyType {
	return &v
}

type NullableTidbNodeGroupTiProxyType struct {
	value *TidbNodeGroupTiProxyType
	isSet bool
}

func (v NullableTidbNodeGroupTiProxyType) Get() *TidbNodeGroupTiProxyType {
	return v.value
}

func (v *NullableTidbNodeGroupTiProxyType) Set(val *TidbNodeGroupTiProxyType) {
	v.value = val
	v.isSet = true
}

func (v NullableTidbNodeGroupTiProxyType) IsSet() bool {
	return v.isSet
}

func (v *NullableTidbNodeGroupTiProxyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTidbNodeGroupTiProxyType(val *TidbNodeGroupTiProxyType) *NullableTidbNodeGroupTiProxyType {
	return &NullableTidbNodeGroupTiProxyType{value: val, isSet: true}
}

func (v NullableTidbNodeGroupTiProxyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTidbNodeGroupTiProxyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
