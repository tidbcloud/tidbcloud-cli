/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
	"fmt"
)

// checks if the V1beta1ClusterServiceResetRootPasswordBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1ClusterServiceResetRootPasswordBody{}

// V1beta1ClusterServiceResetRootPasswordBody struct for V1beta1ClusterServiceResetRootPasswordBody
type V1beta1ClusterServiceResetRootPasswordBody struct {
	RootPassword         string `json:"rootPassword"`
	AdditionalProperties map[string]interface{}
}

type _V1beta1ClusterServiceResetRootPasswordBody V1beta1ClusterServiceResetRootPasswordBody

// NewV1beta1ClusterServiceResetRootPasswordBody instantiates a new V1beta1ClusterServiceResetRootPasswordBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1ClusterServiceResetRootPasswordBody(rootPassword string) *V1beta1ClusterServiceResetRootPasswordBody {
	this := V1beta1ClusterServiceResetRootPasswordBody{}
	this.RootPassword = rootPassword
	return &this
}

// NewV1beta1ClusterServiceResetRootPasswordBodyWithDefaults instantiates a new V1beta1ClusterServiceResetRootPasswordBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1ClusterServiceResetRootPasswordBodyWithDefaults() *V1beta1ClusterServiceResetRootPasswordBody {
	this := V1beta1ClusterServiceResetRootPasswordBody{}
	return &this
}

// GetRootPassword returns the RootPassword field value
func (o *V1beta1ClusterServiceResetRootPasswordBody) GetRootPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootPassword
}

// GetRootPasswordOk returns a tuple with the RootPassword field value
// and a boolean to check if the value has been set.
func (o *V1beta1ClusterServiceResetRootPasswordBody) GetRootPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootPassword, true
}

// SetRootPassword sets field value
func (o *V1beta1ClusterServiceResetRootPasswordBody) SetRootPassword(v string) {
	o.RootPassword = v
}

func (o V1beta1ClusterServiceResetRootPasswordBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1ClusterServiceResetRootPasswordBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rootPassword"] = o.RootPassword

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1beta1ClusterServiceResetRootPasswordBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rootPassword",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1beta1ClusterServiceResetRootPasswordBody := _V1beta1ClusterServiceResetRootPasswordBody{}

	err = json.Unmarshal(data, &varV1beta1ClusterServiceResetRootPasswordBody)

	if err != nil {
		return err
	}

	*o = V1beta1ClusterServiceResetRootPasswordBody(varV1beta1ClusterServiceResetRootPasswordBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rootPassword")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1beta1ClusterServiceResetRootPasswordBody struct {
	value *V1beta1ClusterServiceResetRootPasswordBody
	isSet bool
}

func (v NullableV1beta1ClusterServiceResetRootPasswordBody) Get() *V1beta1ClusterServiceResetRootPasswordBody {
	return v.value
}

func (v *NullableV1beta1ClusterServiceResetRootPasswordBody) Set(val *V1beta1ClusterServiceResetRootPasswordBody) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1ClusterServiceResetRootPasswordBody) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1ClusterServiceResetRootPasswordBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1ClusterServiceResetRootPasswordBody(val *V1beta1ClusterServiceResetRootPasswordBody) *NullableV1beta1ClusterServiceResetRootPasswordBody {
	return &NullableV1beta1ClusterServiceResetRootPasswordBody{value: val, isSet: true}
}

func (v NullableV1beta1ClusterServiceResetRootPasswordBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1ClusterServiceResetRootPasswordBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
