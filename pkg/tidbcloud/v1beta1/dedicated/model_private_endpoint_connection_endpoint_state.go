/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
	"fmt"
)

// PrivateEndpointConnectionEndpointState  - PENDING: Customer has posted to TiDB cloud API, but endpoint connection has not been accepted **asynchronously** by TiDB Cloud.  - DISCOVERED: Customer has created the endpoint in their vpc, but has not posted to TiDB Cloud API.
type PrivateEndpointConnectionEndpointState string

// List of PrivateEndpointConnectionEndpointState
const (
	PRIVATEENDPOINTCONNECTIONENDPOINTSTATE_PENDING    PrivateEndpointConnectionEndpointState = "PENDING"
	PRIVATEENDPOINTCONNECTIONENDPOINTSTATE_ACTIVE     PrivateEndpointConnectionEndpointState = "ACTIVE"
	PRIVATEENDPOINTCONNECTIONENDPOINTSTATE_DELETING   PrivateEndpointConnectionEndpointState = "DELETING"
	PRIVATEENDPOINTCONNECTIONENDPOINTSTATE_FAILED     PrivateEndpointConnectionEndpointState = "FAILED"
	PRIVATEENDPOINTCONNECTIONENDPOINTSTATE_DISCOVERED PrivateEndpointConnectionEndpointState = "DISCOVERED"
)

// All allowed values of PrivateEndpointConnectionEndpointState enum
var AllowedPrivateEndpointConnectionEndpointStateEnumValues = []PrivateEndpointConnectionEndpointState{
	"PENDING",
	"ACTIVE",
	"DELETING",
	"FAILED",
	"DISCOVERED",
}

func (v *PrivateEndpointConnectionEndpointState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PrivateEndpointConnectionEndpointState(value)
	for _, existing := range AllowedPrivateEndpointConnectionEndpointStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PrivateEndpointConnectionEndpointState", value)
}

// NewPrivateEndpointConnectionEndpointStateFromValue returns a pointer to a valid PrivateEndpointConnectionEndpointState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrivateEndpointConnectionEndpointStateFromValue(v string) (*PrivateEndpointConnectionEndpointState, error) {
	ev := PrivateEndpointConnectionEndpointState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrivateEndpointConnectionEndpointState: valid values are %v", v, AllowedPrivateEndpointConnectionEndpointStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrivateEndpointConnectionEndpointState) IsValid() bool {
	for _, existing := range AllowedPrivateEndpointConnectionEndpointStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrivateEndpointConnectionEndpointState value
func (v PrivateEndpointConnectionEndpointState) Ptr() *PrivateEndpointConnectionEndpointState {
	return &v
}

type NullablePrivateEndpointConnectionEndpointState struct {
	value *PrivateEndpointConnectionEndpointState
	isSet bool
}

func (v NullablePrivateEndpointConnectionEndpointState) Get() *PrivateEndpointConnectionEndpointState {
	return v.value
}

func (v *NullablePrivateEndpointConnectionEndpointState) Set(val *PrivateEndpointConnectionEndpointState) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateEndpointConnectionEndpointState) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateEndpointConnectionEndpointState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateEndpointConnectionEndpointState(val *PrivateEndpointConnectionEndpointState) *NullablePrivateEndpointConnectionEndpointState {
	return &NullablePrivateEndpointConnectionEndpointState{value: val, isSet: true}
}

func (v NullablePrivateEndpointConnectionEndpointState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateEndpointConnectionEndpointState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
