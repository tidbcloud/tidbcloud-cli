/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
)

// checks if the V1beta1UpdateClusterRequestStorageNodeSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1UpdateClusterRequestStorageNodeSetting{}

// V1beta1UpdateClusterRequestStorageNodeSetting struct for V1beta1UpdateClusterRequestStorageNodeSetting
type V1beta1UpdateClusterRequestStorageNodeSetting struct {
	NodeSpecKey *string `json:"nodeSpecKey,omitempty"`
	// When update TiFlash node setting:   - If the node count is set to 0, the TiFlash node will be removed.   - If the node count is null, the TiFlash node count won't change. For other components, if the node count is set to 0, server will ignore the node count.
	NodeCount            NullableInt32 `json:"nodeCount,omitempty"`
	StorageSizeGi        *int32        `json:"storageSizeGi,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V1beta1UpdateClusterRequestStorageNodeSetting V1beta1UpdateClusterRequestStorageNodeSetting

// NewV1beta1UpdateClusterRequestStorageNodeSetting instantiates a new V1beta1UpdateClusterRequestStorageNodeSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1UpdateClusterRequestStorageNodeSetting() *V1beta1UpdateClusterRequestStorageNodeSetting {
	this := V1beta1UpdateClusterRequestStorageNodeSetting{}
	return &this
}

// NewV1beta1UpdateClusterRequestStorageNodeSettingWithDefaults instantiates a new V1beta1UpdateClusterRequestStorageNodeSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1UpdateClusterRequestStorageNodeSettingWithDefaults() *V1beta1UpdateClusterRequestStorageNodeSetting {
	this := V1beta1UpdateClusterRequestStorageNodeSetting{}
	return &this
}

// GetNodeSpecKey returns the NodeSpecKey field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) GetNodeSpecKey() string {
	if o == nil || IsNil(o.NodeSpecKey) {
		var ret string
		return ret
	}
	return *o.NodeSpecKey
}

// GetNodeSpecKeyOk returns a tuple with the NodeSpecKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) GetNodeSpecKeyOk() (*string, bool) {
	if o == nil || IsNil(o.NodeSpecKey) {
		return nil, false
	}
	return o.NodeSpecKey, true
}

// HasNodeSpecKey returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) HasNodeSpecKey() bool {
	if o != nil && !IsNil(o.NodeSpecKey) {
		return true
	}

	return false
}

// SetNodeSpecKey gets a reference to the given string and assigns it to the NodeSpecKey field.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) SetNodeSpecKey(v string) {
	o.NodeSpecKey = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// HasNodeCount returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) HasNodeCount() bool {
	if o != nil && o.NodeCount.IsSet() {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given NullableInt32 and assigns it to the NodeCount field.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}

// SetNodeCountNil sets the value for NodeCount to be an explicit nil
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) SetNodeCountNil() {
	o.NodeCount.Set(nil)
}

// UnsetNodeCount ensures that no value is present for NodeCount, not even an explicit nil
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) UnsetNodeCount() {
	o.NodeCount.Unset()
}

// GetStorageSizeGi returns the StorageSizeGi field value if set, zero value otherwise.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) GetStorageSizeGi() int32 {
	if o == nil || IsNil(o.StorageSizeGi) {
		var ret int32
		return ret
	}
	return *o.StorageSizeGi
}

// GetStorageSizeGiOk returns a tuple with the StorageSizeGi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) GetStorageSizeGiOk() (*int32, bool) {
	if o == nil || IsNil(o.StorageSizeGi) {
		return nil, false
	}
	return o.StorageSizeGi, true
}

// HasStorageSizeGi returns a boolean if a field has been set.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) HasStorageSizeGi() bool {
	if o != nil && !IsNil(o.StorageSizeGi) {
		return true
	}

	return false
}

// SetStorageSizeGi gets a reference to the given int32 and assigns it to the StorageSizeGi field.
func (o *V1beta1UpdateClusterRequestStorageNodeSetting) SetStorageSizeGi(v int32) {
	o.StorageSizeGi = &v
}

func (o V1beta1UpdateClusterRequestStorageNodeSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1UpdateClusterRequestStorageNodeSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodeSpecKey) {
		toSerialize["nodeSpecKey"] = o.NodeSpecKey
	}
	if o.NodeCount.IsSet() {
		toSerialize["nodeCount"] = o.NodeCount.Get()
	}
	if !IsNil(o.StorageSizeGi) {
		toSerialize["storageSizeGi"] = o.StorageSizeGi
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1beta1UpdateClusterRequestStorageNodeSetting) UnmarshalJSON(data []byte) (err error) {
	varV1beta1UpdateClusterRequestStorageNodeSetting := _V1beta1UpdateClusterRequestStorageNodeSetting{}

	err = json.Unmarshal(data, &varV1beta1UpdateClusterRequestStorageNodeSetting)

	if err != nil {
		return err
	}

	*o = V1beta1UpdateClusterRequestStorageNodeSetting(varV1beta1UpdateClusterRequestStorageNodeSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "nodeSpecKey")
		delete(additionalProperties, "nodeCount")
		delete(additionalProperties, "storageSizeGi")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1beta1UpdateClusterRequestStorageNodeSetting struct {
	value *V1beta1UpdateClusterRequestStorageNodeSetting
	isSet bool
}

func (v NullableV1beta1UpdateClusterRequestStorageNodeSetting) Get() *V1beta1UpdateClusterRequestStorageNodeSetting {
	return v.value
}

func (v *NullableV1beta1UpdateClusterRequestStorageNodeSetting) Set(val *V1beta1UpdateClusterRequestStorageNodeSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1UpdateClusterRequestStorageNodeSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1UpdateClusterRequestStorageNodeSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1UpdateClusterRequestStorageNodeSetting(val *V1beta1UpdateClusterRequestStorageNodeSetting) *NullableV1beta1UpdateClusterRequestStorageNodeSetting {
	return &NullableV1beta1UpdateClusterRequestStorageNodeSetting{value: val, isSet: true}
}

func (v NullableV1beta1UpdateClusterRequestStorageNodeSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1UpdateClusterRequestStorageNodeSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
