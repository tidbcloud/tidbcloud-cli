/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
	"fmt"
)

// checks if the ClusterServiceResetRootPasswordBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterServiceResetRootPasswordBody{}

// ClusterServiceResetRootPasswordBody struct for ClusterServiceResetRootPasswordBody
type ClusterServiceResetRootPasswordBody struct {
	RootPassword string `json:"rootPassword"`
	AdditionalProperties map[string]interface{}
}

type _ClusterServiceResetRootPasswordBody ClusterServiceResetRootPasswordBody

// NewClusterServiceResetRootPasswordBody instantiates a new ClusterServiceResetRootPasswordBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterServiceResetRootPasswordBody(rootPassword string) *ClusterServiceResetRootPasswordBody {
	this := ClusterServiceResetRootPasswordBody{}
	this.RootPassword = rootPassword
	return &this
}

// NewClusterServiceResetRootPasswordBodyWithDefaults instantiates a new ClusterServiceResetRootPasswordBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterServiceResetRootPasswordBodyWithDefaults() *ClusterServiceResetRootPasswordBody {
	this := ClusterServiceResetRootPasswordBody{}
	return &this
}

// GetRootPassword returns the RootPassword field value
func (o *ClusterServiceResetRootPasswordBody) GetRootPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootPassword
}

// GetRootPasswordOk returns a tuple with the RootPassword field value
// and a boolean to check if the value has been set.
func (o *ClusterServiceResetRootPasswordBody) GetRootPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootPassword, true
}

// SetRootPassword sets field value
func (o *ClusterServiceResetRootPasswordBody) SetRootPassword(v string) {
	o.RootPassword = v
}

func (o ClusterServiceResetRootPasswordBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterServiceResetRootPasswordBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rootPassword"] = o.RootPassword

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterServiceResetRootPasswordBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rootPassword",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterServiceResetRootPasswordBody := _ClusterServiceResetRootPasswordBody{}

	err = json.Unmarshal(data, &varClusterServiceResetRootPasswordBody)

	if err != nil {
		return err
	}

	*o = ClusterServiceResetRootPasswordBody(varClusterServiceResetRootPasswordBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rootPassword")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterServiceResetRootPasswordBody struct {
	value *ClusterServiceResetRootPasswordBody
	isSet bool
}

func (v NullableClusterServiceResetRootPasswordBody) Get() *ClusterServiceResetRootPasswordBody {
	return v.value
}

func (v *NullableClusterServiceResetRootPasswordBody) Set(val *ClusterServiceResetRootPasswordBody) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterServiceResetRootPasswordBody) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterServiceResetRootPasswordBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterServiceResetRootPasswordBody(val *ClusterServiceResetRootPasswordBody) *NullableClusterServiceResetRootPasswordBody {
	return &NullableClusterServiceResetRootPasswordBody{value: val, isSet: true}
}

func (v NullableClusterServiceResetRootPasswordBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterServiceResetRootPasswordBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


