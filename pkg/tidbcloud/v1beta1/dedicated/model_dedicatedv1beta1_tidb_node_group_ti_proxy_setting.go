/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
)

// checks if the Dedicatedv1beta1TidbNodeGroupTiProxySetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dedicatedv1beta1TidbNodeGroupTiProxySetting{}

// Dedicatedv1beta1TidbNodeGroupTiProxySetting struct for Dedicatedv1beta1TidbNodeGroupTiProxySetting
type Dedicatedv1beta1TidbNodeGroupTiProxySetting struct {
	// The type of TiProxy.
	Type *TidbNodeGroupTiProxyType `json:"type,omitempty"`
	// The number of TiProxy nodes in the TiDB group. If not set or set to 0, represents the TiProxy is disabled.
	NodeCount            NullableInt32 `json:"nodeCount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Dedicatedv1beta1TidbNodeGroupTiProxySetting Dedicatedv1beta1TidbNodeGroupTiProxySetting

// NewDedicatedv1beta1TidbNodeGroupTiProxySetting instantiates a new Dedicatedv1beta1TidbNodeGroupTiProxySetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedv1beta1TidbNodeGroupTiProxySetting() *Dedicatedv1beta1TidbNodeGroupTiProxySetting {
	this := Dedicatedv1beta1TidbNodeGroupTiProxySetting{}
	return &this
}

// NewDedicatedv1beta1TidbNodeGroupTiProxySettingWithDefaults instantiates a new Dedicatedv1beta1TidbNodeGroupTiProxySetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDedicatedv1beta1TidbNodeGroupTiProxySettingWithDefaults() *Dedicatedv1beta1TidbNodeGroupTiProxySetting {
	this := Dedicatedv1beta1TidbNodeGroupTiProxySetting{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) GetType() TidbNodeGroupTiProxyType {
	if o == nil || IsNil(o.Type) {
		var ret TidbNodeGroupTiProxyType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) GetTypeOk() (*TidbNodeGroupTiProxyType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given TidbNodeGroupTiProxyType and assigns it to the Type field.
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) SetType(v TidbNodeGroupTiProxyType) {
	o.Type = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// HasNodeCount returns a boolean if a field has been set.
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) HasNodeCount() bool {
	if o != nil && o.NodeCount.IsSet() {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given NullableInt32 and assigns it to the NodeCount field.
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}

// SetNodeCountNil sets the value for NodeCount to be an explicit nil
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) SetNodeCountNil() {
	o.NodeCount.Set(nil)
}

// UnsetNodeCount ensures that no value is present for NodeCount, not even an explicit nil
func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) UnsetNodeCount() {
	o.NodeCount.Unset()
}

func (o Dedicatedv1beta1TidbNodeGroupTiProxySetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dedicatedv1beta1TidbNodeGroupTiProxySetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.NodeCount.IsSet() {
		toSerialize["nodeCount"] = o.NodeCount.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Dedicatedv1beta1TidbNodeGroupTiProxySetting) UnmarshalJSON(data []byte) (err error) {
	varDedicatedv1beta1TidbNodeGroupTiProxySetting := _Dedicatedv1beta1TidbNodeGroupTiProxySetting{}

	err = json.Unmarshal(data, &varDedicatedv1beta1TidbNodeGroupTiProxySetting)

	if err != nil {
		return err
	}

	*o = Dedicatedv1beta1TidbNodeGroupTiProxySetting(varDedicatedv1beta1TidbNodeGroupTiProxySetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "nodeCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDedicatedv1beta1TidbNodeGroupTiProxySetting struct {
	value *Dedicatedv1beta1TidbNodeGroupTiProxySetting
	isSet bool
}

func (v NullableDedicatedv1beta1TidbNodeGroupTiProxySetting) Get() *Dedicatedv1beta1TidbNodeGroupTiProxySetting {
	return v.value
}

func (v *NullableDedicatedv1beta1TidbNodeGroupTiProxySetting) Set(val *Dedicatedv1beta1TidbNodeGroupTiProxySetting) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedv1beta1TidbNodeGroupTiProxySetting) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedv1beta1TidbNodeGroupTiProxySetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedv1beta1TidbNodeGroupTiProxySetting(val *Dedicatedv1beta1TidbNodeGroupTiProxySetting) *NullableDedicatedv1beta1TidbNodeGroupTiProxySetting {
	return &NullableDedicatedv1beta1TidbNodeGroupTiProxySetting{value: val, isSet: true}
}

func (v NullableDedicatedv1beta1TidbNodeGroupTiProxySetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedv1beta1TidbNodeGroupTiProxySetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
