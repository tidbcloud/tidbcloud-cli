/*
TiDB Cloud Dedicated Open API

TiDB Cloud Dedicated Open API.

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicated

import (
	"encoding/json"
)

// checks if the Dedicatedv1beta1TidbNodeGroupEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dedicatedv1beta1TidbNodeGroupEndpoint{}

// Dedicatedv1beta1TidbNodeGroupEndpoint struct for Dedicatedv1beta1TidbNodeGroupEndpoint
type Dedicatedv1beta1TidbNodeGroupEndpoint struct {
	// When endpoint's type is `PRIVATE_ENDPOINT`, the `host` field behave differently across cloud providers: For AWS clusters, the `host` field is available right after the private link service is ready. For GCP and Azure clusters, the `host` field is available after the user creates a `PrivateEndpointConnection`.
	Host                 *string                 `json:"host,omitempty"`
	Port                 *int32                  `json:"port,omitempty"`
	ConnectionType       *EndpointConnectionType `json:"connectionType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Dedicatedv1beta1TidbNodeGroupEndpoint Dedicatedv1beta1TidbNodeGroupEndpoint

// NewDedicatedv1beta1TidbNodeGroupEndpoint instantiates a new Dedicatedv1beta1TidbNodeGroupEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedv1beta1TidbNodeGroupEndpoint() *Dedicatedv1beta1TidbNodeGroupEndpoint {
	this := Dedicatedv1beta1TidbNodeGroupEndpoint{}
	return &this
}

// NewDedicatedv1beta1TidbNodeGroupEndpointWithDefaults instantiates a new Dedicatedv1beta1TidbNodeGroupEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDedicatedv1beta1TidbNodeGroupEndpointWithDefaults() *Dedicatedv1beta1TidbNodeGroupEndpoint {
	this := Dedicatedv1beta1TidbNodeGroupEndpoint{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) SetPort(v int32) {
	o.Port = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) GetConnectionType() EndpointConnectionType {
	if o == nil || IsNil(o.ConnectionType) {
		var ret EndpointConnectionType
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) GetConnectionTypeOk() (*EndpointConnectionType, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given EndpointConnectionType and assigns it to the ConnectionType field.
func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) SetConnectionType(v EndpointConnectionType) {
	o.ConnectionType = &v
}

func (o Dedicatedv1beta1TidbNodeGroupEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dedicatedv1beta1TidbNodeGroupEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Dedicatedv1beta1TidbNodeGroupEndpoint) UnmarshalJSON(data []byte) (err error) {
	varDedicatedv1beta1TidbNodeGroupEndpoint := _Dedicatedv1beta1TidbNodeGroupEndpoint{}

	err = json.Unmarshal(data, &varDedicatedv1beta1TidbNodeGroupEndpoint)

	if err != nil {
		return err
	}

	*o = Dedicatedv1beta1TidbNodeGroupEndpoint(varDedicatedv1beta1TidbNodeGroupEndpoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		delete(additionalProperties, "connectionType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDedicatedv1beta1TidbNodeGroupEndpoint struct {
	value *Dedicatedv1beta1TidbNodeGroupEndpoint
	isSet bool
}

func (v NullableDedicatedv1beta1TidbNodeGroupEndpoint) Get() *Dedicatedv1beta1TidbNodeGroupEndpoint {
	return v.value
}

func (v *NullableDedicatedv1beta1TidbNodeGroupEndpoint) Set(val *Dedicatedv1beta1TidbNodeGroupEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedv1beta1TidbNodeGroupEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedv1beta1TidbNodeGroupEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedv1beta1TidbNodeGroupEndpoint(val *Dedicatedv1beta1TidbNodeGroupEndpoint) *NullableDedicatedv1beta1TidbNodeGroupEndpoint {
	return &NullableDedicatedv1beta1TidbNodeGroupEndpoint{value: val, isSet: true}
}

func (v NullableDedicatedv1beta1TidbNodeGroupEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedv1beta1TidbNodeGroupEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
