// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OpenapiCurrentTable openapi current table
//
// swagger:model openapiCurrentTable
type OpenapiCurrentTable struct {

	// The process in percent of importing the table.
	// Required: true
	// Maximum: 100
	// Minimum: 1
	CompletedPercent *int64 `json:"completed_percent"`

	// The name of the table.
	// Required: true
	Name *string `json:"name"`

	// The data size of the table.
	// Required: true
	Size *string `json:"size"`
}

// Validate validates this openapi current table
func (m *OpenapiCurrentTable) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCompletedPercent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenapiCurrentTable) validateCompletedPercent(formats strfmt.Registry) error {

	if err := validate.Required("completed_percent", "body", m.CompletedPercent); err != nil {
		return err
	}

	if err := validate.MinimumInt("completed_percent", "body", *m.CompletedPercent, 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("completed_percent", "body", *m.CompletedPercent, 100, false); err != nil {
		return err
	}

	return nil
}

func (m *OpenapiCurrentTable) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *OpenapiCurrentTable) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this openapi current table based on context it is used
func (m *OpenapiCurrentTable) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpenapiCurrentTable) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenapiCurrentTable) UnmarshalBinary(b []byte) error {
	var res OpenapiCurrentTable
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
