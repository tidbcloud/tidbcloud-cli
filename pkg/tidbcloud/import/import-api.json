{
  "swagger": "2.0",
  "info": {
    "title": "Internal OpenAPIs for TiDB Cloud",
    "description": "The TiDB Cloud API uses HTTP Digest Authentication. It protects your private key from being sent over the network.The API key contains a public key and a private key, which act as the username and password required in the HTTP Digest Authentication. The private key only displays upon the key creation.",
    "version": "alpha"
  },
  "tags": [
    {
      "name": "ImportService"
    }
  ],
  "host": "api.tidbcloud.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/internal/projects/{project_id}/clusters/{cluster_id}/imports": {
      "get": {
        "summary": "List all import jobs in the cluster.",
        "operationId": "ListImports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/openapiListImportsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "description": "The ID of the project.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "page",
            "description": "The number of pages.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "name": "page_size",
            "description": "The size of a page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "tags": [
          "ImportService"
        ]
      },
      "post": {
        "summary": "Create an import job.",
        "operationId": "CreateImport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/openapiCreateImportResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "description": "The ID of the project.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data_format": {
                  "$ref": "#/definitions/openapiDataFormat",
                  "description": "The format of data to import."
                },
                "source_url": {
                  "type": "string",
                  "description": "The full s3 path that contains data to import."
                },
                "aws_role_arn": {
                  "type": "string",
                  "description": "The arn of AWS IAM role."
                },
                "csv_format": {
                  "$ref": "#/definitions/openapiCustomCSVFormat",
                  "description": "The CSV configuration."
                }
              },
              "required": [
                "data_format",
                "source_url",
                "aws_role_arn"
              ]
            }
          }
        ],
        "tags": [
          "ImportService"
        ]
      }
    },
    "/api/internal/projects/{project_id}/clusters/{cluster_id}/imports/{id}": {
      "get": {
        "summary": "Get an import job.",
        "operationId": "GetImport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/openapiGetImportResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "description": "The ID of the project.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id",
            "description": "The ID of the import job.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImportService"
        ]
      },
      "delete": {
        "summary": "Cancel an import job.",
        "operationId": "CancelImport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "description": "The ID of the project.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id",
            "description": "The ID of the import job.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImportService"
        ]
      }
    }
  },
  "definitions": {
    "ImportTableCompletionInfoResult": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SUCCESS",
        "WARNING",
        "ERROR"
      ],
      "default": "UNKNOWN"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "openapiCreateImportResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "example": "1",
          "description": "The ID of the import job."
        }
      },
      "required": [
        "id"
      ]
    },
    "openapiCurrentTable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the table."
        },
        "size": {
          "type": "integer",
          "format": "uint64",
          "description": "The data size of the table."
        },
        "completed_percent": {
          "type": "integer",
          "format": "uint32",
          "description": "The process in percent of importing the table.",
          "maximum": 100,
          "minimum": 1
        }
      },
      "required": [
        "name",
        "size",
        "completed_percent"
      ]
    },
    "openapiCustomCSVFormat": {
      "type": "object",
      "properties": {
        "separator": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "header": {
          "type": "boolean"
        },
        "not_null": {
          "type": "boolean"
        },
        "null": {
          "type": "string"
        },
        "backslash_escape": {
          "type": "boolean"
        },
        "trim_last_separator": {
          "type": "boolean"
        }
      }
    },
    "openapiDPImportCreateReq": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "uint64",
          "example": "1",
          "description": "The ID of the cluster."
        },
        "source_url": {
          "type": "string",
          "description": "The full s3 path that contains data to import.",
          "title": "import info"
        },
        "region": {
          "type": "string",
          "description": "The region of the s3 bucket that contains data to import."
        },
        "data_format": {
          "type": "integer",
          "format": "uint32",
          "description": "The format of data to import.",
          "title": "1: sql statement(dumpling default format\n2: aurora snapshot(parquet)\n3: custom csv\n4: parquet format(not aurora)"
        },
        "data_source_type": {
          "type": "integer",
          "format": "uint32",
          "description": "The cloud provider that keeps the data to import.",
          "title": "1: aws s3\n2: GCS"
        },
        "target_username": {
          "type": "string",
          "description": "Deprectaed.",
          "title": "deprecated"
        },
        "target_password": {
          "type": "string",
          "description": "Deprectaed.",
          "title": "deprecated"
        },
        "filter": {
          "type": "string",
          "description": "The table filter."
        },
        "org_id": {
          "type": "string",
          "format": "uint64",
          "example": "1",
          "description": "The ID of the orgnization."
        },
        "project_id": {
          "type": "string",
          "format": "uint64",
          "example": "1",
          "description": "The ID of the project."
        },
        "csv_format": {
          "$ref": "#/definitions/openapiCustomCSVFormat",
          "description": "The CSV configuration."
        },
        "aws_role_arn": {
          "type": "string",
          "description": "The arn of AWS IAM role."
        },
        "object_name_pattern": {
          "type": "string"
        },
        "target_table_pattern": {
          "type": "string"
        }
      },
      "required": [
        "cluster_id",
        "source_url",
        "region",
        "data_format",
        "data_source_type",
        "target_username",
        "target_password",
        "filter",
        "org_id",
        "project_id"
      ]
    },
    "openapiDataFormat": {
      "type": "string",
      "enum": [
        "CanNotBeUnknown",
        "SqlFile",
        "AuroraSnapshot",
        "CSV",
        "Parquet"
      ],
      "default": "CanNotBeUnknown"
    },
    "openapiGetImportResp": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "uint64",
          "example": "1",
          "description": "The ID of the cluster."
        },
        "total_size": {
          "type": "integer",
          "format": "uint64",
          "description": "The total size of the data imported."
        },
        "total_files": {
          "type": "integer",
          "format": "uint32",
          "description": "The total number of files of the data imported."
        },
        "source_url": {
          "type": "string",
          "description": "The full s3 path that contains data to import."
        },
        "completed_tables": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of completed tables."
        },
        "pending_tables": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of pending tables."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The creation timestamp of the import job."
        },
        "status": {
          "$ref": "#/definitions/openapiGetImportRespStatus",
          "description": "The status of the import job."
        },
        "completed_percent": {
          "type": "integer",
          "format": "uint32",
          "description": " The process in percent of the import job, but doesn't include the post-processing progress.",
          "maximum": 100,
          "minimum": 1
        },
        "current_tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/openapiCurrentTable"
          },
          "description": "The current tables are being imported."
        },
        "data_format": {
          "type": "integer",
          "format": "uint32",
          "description": "The format of data to import."
        },
        "data_source_type": {
          "type": "integer",
          "format": "uint32",
          "description": "The cloud provider that keeps the data to import."
        },
        "message": {
          "type": "string",
          "description": "The message."
        },
        "elapsed_time_seconds": {
          "type": "integer",
          "format": "uint32",
          "description": "The elapsed time of the import job in seconds."
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "example": "1",
          "description": "The ID of the import job."
        },
        "processed_source_data_size": {
          "type": "integer",
          "format": "uint64",
          "description": "The size of source data processed."
        },
        "total_tables_count": {
          "type": "integer",
          "format": "uint32",
          "description": "The total number of tables."
        },
        "post_import_completed_percent": {
          "type": "integer",
          "format": "uint32",
          "description": "The post-process in percent of the import job.",
          "maximum": 100,
          "minimum": 1
        },
        "all_completed_tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/openapiImportTableCompletionInfo"
          },
          "description": "Completion information of the tables imported."
        },
        "import_create_req": {
          "$ref": "#/definitions/openapiDPImportCreateReq",
          "description": "The create request of the import job."
        }
      },
      "description": "ImportItem is the information of import job.",
      "title": "ImportItem",
      "required": [
        "cluster_id",
        "total_size",
        "total_files",
        "source_url",
        "completed_tables",
        "pending_tables",
        "created_at",
        "status",
        "completed_percent",
        "current_tables",
        "data_format",
        "data_source_type",
        "message",
        "elapsed_time_seconds"
      ]
    },
    "openapiGetImportRespStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "PREPARING",
        "IMPORTING",
        "COMPLETED",
        "FAILED",
        "CANCELING",
        "CANCELED"
      ],
      "default": "UNKNOWN"
    },
    "openapiImportTableCompletionInfo": {
      "type": "object",
      "properties": {
        "table_name": {
          "type": "string",
          "description": "The name of the table."
        },
        "result": {
          "$ref": "#/definitions/ImportTableCompletionInfoResult",
          "description": "The result status of importing the table."
        },
        "message": {
          "type": "string",
          "description": "The message."
        }
      },
      "required": [
        "table_name",
        "result"
      ]
    },
    "openapiListImportsResp": {
      "type": "object",
      "properties": {
        "imports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/openapiGetImportResp"
          },
          "description": "The items of import jobs in the cluster."
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of import jobs in the cluster."
        }
      },
      "required": [
        "imports",
        "total"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  }
}
