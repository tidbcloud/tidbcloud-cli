// Code generated by go-swagger; DO NOT EDIT.

package import_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/import/models"
)

// CancelImportReader is a Reader for the CancelImport structure.
type CancelImportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelImportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCancelImportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCancelImportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCancelImportOK creates a CancelImportOK with default headers values
func NewCancelImportOK() *CancelImportOK {
	return &CancelImportOK{}
}

/*
CancelImportOK describes a response with status code 200, with default header values.

A successful response.
*/
type CancelImportOK struct {
	Payload interface{}
}

// IsSuccess returns true when this cancel import o k response has a 2xx status code
func (o *CancelImportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cancel import o k response has a 3xx status code
func (o *CancelImportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel import o k response has a 4xx status code
func (o *CancelImportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel import o k response has a 5xx status code
func (o *CancelImportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel import o k response a status code equal to that given
func (o *CancelImportOK) IsCode(code int) bool {
	return code == 200
}

func (o *CancelImportOK) Error() string {
	return fmt.Sprintf("[DELETE /api/internal/projects/{project_id}/clusters/{cluster_id}/imports/{id}][%d] cancelImportOK  %+v", 200, o.Payload)
}

func (o *CancelImportOK) String() string {
	return fmt.Sprintf("[DELETE /api/internal/projects/{project_id}/clusters/{cluster_id}/imports/{id}][%d] cancelImportOK  %+v", 200, o.Payload)
}

func (o *CancelImportOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CancelImportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelImportDefault creates a CancelImportDefault with default headers values
func NewCancelImportDefault(code int) *CancelImportDefault {
	return &CancelImportDefault{
		_statusCode: code,
	}
}

/*
CancelImportDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CancelImportDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the cancel import default response
func (o *CancelImportDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this cancel import default response has a 2xx status code
func (o *CancelImportDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cancel import default response has a 3xx status code
func (o *CancelImportDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cancel import default response has a 4xx status code
func (o *CancelImportDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cancel import default response has a 5xx status code
func (o *CancelImportDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cancel import default response a status code equal to that given
func (o *CancelImportDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CancelImportDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/internal/projects/{project_id}/clusters/{cluster_id}/imports/{id}][%d] CancelImport default  %+v", o._statusCode, o.Payload)
}

func (o *CancelImportDefault) String() string {
	return fmt.Sprintf("[DELETE /api/internal/projects/{project_id}/clusters/{cluster_id}/imports/{id}][%d] CancelImport default  %+v", o._statusCode, o.Payload)
}

func (o *CancelImportDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *CancelImportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
